# parsed arguments: Namespace(benchmark='Q05b3d', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='optimal-only', expected_only=False)
# loading benchmark...
# table keywords: {'democratic', 'pew', '3.2', 'washington', 'house', '/', '-1.4', '-1.3', 'abc', '2.9', 'news', 'republican', '-2.5', 'polling', 'cnn', 'rasmussen', '0.4', 'yougov', 'public', 'color', 'surveyusa', 'reports', '(ppp)', 'pollster', 'research)', 'post', '1.9', '(nbc/marist)', 'blue', '3.1', 'gallup', 'policy', 'quinnipiac', '&', 'orange', '-1.5', '-1.7', '2.4', '0.8', '(robbins', '(opinion', 'marist', 'shaw)', 'effect', 'ipsos', 'spread', 'fox', 'research'}
# input type: [dtype('O'), dtype('O'), dtype('float64'), dtype('O')]
# input is:
                       Pollster      spread  House Effect   color
0                  Pew Research  Democratic           3.2    blue
1   Public Policy Polling (PPP)  Democratic           3.1    blue
2                         Ipsos  Democratic           2.9    blue
3                     SurveyUSA  Democratic           2.4    blue
4           Marist (NBC/Marist)  Democratic           1.9    blue
5                        YouGov  Democratic           0.8    blue
6        CNN (Opinion Research)  Democratic           0.4    blue
7             Rasmussen Reports  Republican          -1.3  orange
8    Washington Post / ABC News  Republican          -1.4  orange
9     Fox News (Robbins & Shaw)  Republican          -1.5  orange
10                   Quinnipiac  Republican          -1.7  orange
11                       Gallup  Republican          -2.5  orange
# query is: What organization has a value that's more than 1 but less than 2?
# expected output type:[dtype('O')]
# expected output is:
                ANSWER
0  Marist (NBC/Marist)
# inferred DSL terminals:
  # ConstVal: ['<NULL>']
     # cmap: []
  # AggrFunc: ['<NULL>']
     # amap: []
  # NumFunc: ['-', '<NULL>']
     # nmap: [('more', '-')]
  # BoolFunc: ['>=', '<', '==', '<=', '>', '<NULL>']
     # bmap: [('less', '<='), ('more', '>='), ('less', '<'), (None, '=='), ('more', '>')]
  # IndFunc: ['<NULL>']
     # imap: []
# ====> fallback strategy (comparison) is triggered
  # [debug] high_values: []
  # [debug] high_values (no dup.): []
  # [debug] filtered low_values (no dup.): []
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 'Gallup'}]
  # found 0 program(s)
# (t=0.12) i=1, candidate=[{'ANSWER': 'YouGov'}]
  # found 0 program(s)
# (t=0.23) i=2, candidate=[{'ANSWER': 'Quinnipiac'}]
  # found 0 program(s)
# (t=0.35) i=3, candidate=[{'ANSWER': 'CNN (Opinion Research)'}]
  # found 0 program(s)
# (t=0.46) i=4, candidate=[{'ANSWER': 'Pew Research'}]
  # found 0 program(s)
# (t=0.57) i=5, candidate=[{'ANSWER': 'Marist (NBC/Marist)'}]
  # found 0 program(s)
# (t=0.69) i=6, candidate=[{'ANSWER': 'Rasmussen Reports'}]
  # found 0 program(s)
# (t=0.80) i=7, candidate=[{'ANSWER': 'Fox News (Robbins & Shaw)'}]
  # found 0 program(s)
# (t=0.92) i=8, candidate=[{'ANSWER': 'SurveyUSA'}]
  # found 0 program(s)
# (t=1.03) i=9, candidate=[{'ANSWER': 'Ipsos'}]
  # found 0 program(s)
# (t=1.14) i=10, candidate=[{'ANSWER': 'Public Policy Polling (PPP)'}]
  # found 0 program(s)
# (t=1.26) i=11, candidate=[{'ANSWER': 'Washington Post / ABC News'}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: [-1.3, -1.4, -1.5, -1.7, -2.5, 0.4, 0.8, 1.9, 2.4, 2.9, 3.1, 3.2, 'CNN (Opinion Research)', 'Democratic', 'Fox News (Robbins & Shaw)', 'Gallup', 'House Effect', 'Ipsos', 'Marist (NBC/Marist)', 'Pew Research', 'Pollster', 'Public Policy Polling (PPP)', 'Quinnipiac', 'Rasmussen Reports', 'Republican', 'SurveyUSA', 'Washington Post / ABC News', 'YouGov', 'blue', 'color', 'orange', 'spread']
# (t=1.37) fallback i=0, candidate=[{'ANSWER': -1.3}]
  # found 0 program(s)
# (t=1.49) fallback i=1, candidate=[{'ANSWER': -1.4}]
  # found 0 program(s)
# (t=1.61) fallback i=2, candidate=[{'ANSWER': -1.5}]
  # found 0 program(s)
# (t=1.72) fallback i=3, candidate=[{'ANSWER': -1.7}]
  # found 0 program(s)
# (t=1.83) fallback i=4, candidate=[{'ANSWER': -2.5}]
  # found 0 program(s)
# (t=1.95) fallback i=5, candidate=[{'ANSWER': 0.4}]
  # found 0 program(s)
# (t=2.07) fallback i=6, candidate=[{'ANSWER': 0.8}]
  # found 0 program(s)
# (t=2.18) fallback i=7, candidate=[{'ANSWER': 1.9}]
  # found 0 program(s)
# (t=2.30) fallback i=8, candidate=[{'ANSWER': 2.4}]
  # found 0 program(s)
# (t=2.41) fallback i=9, candidate=[{'ANSWER': 2.9}]
  # found 0 program(s)
# (t=2.53) fallback i=10, candidate=[{'ANSWER': 3.1}]
  # found 0 program(s)
# (t=2.64) fallback i=11, candidate=[{'ANSWER': 3.2}]
  # found 0 program(s)
# (t=2.76) fallback i=12, candidate=[{'ANSWER': 'CNN (Opinion Research)'}]
  # found 0 program(s)
# (t=2.87) fallback i=13, candidate=[{'ANSWER': 'Democratic'}]
  # found 0 program(s)
# (t=2.99) fallback i=14, candidate=[{'ANSWER': 'Fox News (Robbins & Shaw)'}]
  # found 0 program(s)
# (t=3.10) fallback i=15, candidate=[{'ANSWER': 'Gallup'}]
  # found 0 program(s)
# (t=3.22) fallback i=16, candidate=[{'ANSWER': 'House Effect'}]
  # found 0 program(s)
# (t=3.34) fallback i=17, candidate=[{'ANSWER': 'Ipsos'}]
  # found 0 program(s)
# (t=3.45) fallback i=18, candidate=[{'ANSWER': 'Marist (NBC/Marist)'}]
  # found 0 program(s)
# (t=3.57) fallback i=19, candidate=[{'ANSWER': 'Pew Research'}]
  # found 0 program(s)
# (t=3.68) fallback i=20, candidate=[{'ANSWER': 'Pollster'}]
  # found 0 program(s)
# (t=3.80) fallback i=21, candidate=[{'ANSWER': 'Public Policy Polling (PPP)'}]
  # found 0 program(s)
# (t=3.91) fallback i=22, candidate=[{'ANSWER': 'Quinnipiac'}]
  # found 0 program(s)
# (t=4.03) fallback i=23, candidate=[{'ANSWER': 'Rasmussen Reports'}]
  # found 0 program(s)
# (t=4.15) fallback i=24, candidate=[{'ANSWER': 'Republican'}]
  # found 0 program(s)
# (t=4.26) fallback i=25, candidate=[{'ANSWER': 'SurveyUSA'}]
  # found 0 program(s)
# (t=4.38) fallback i=26, candidate=[{'ANSWER': 'Washington Post / ABC News'}]
  # found 0 program(s)
# (t=4.49) fallback i=27, candidate=[{'ANSWER': 'YouGov'}]
  # found 0 program(s)
# (t=4.61) fallback i=28, candidate=[{'ANSWER': 'blue'}]
  # found 0 program(s)
# (t=4.72) fallback i=29, candidate=[{'ANSWER': 'color'}]
  # found 0 program(s)
# (t=4.84) fallback i=30, candidate=[{'ANSWER': 'orange'}]
  # found 0 program(s)
# (t=4.95) fallback i=31, candidate=[{'ANSWER': 'spread'}]
  # found 0 program(s)
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: ['Gallup']

# ========== review report ========== #
