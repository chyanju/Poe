# parsed arguments: Namespace(benchmark='Qed628', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='optimal-only', expected_only=False)
# loading benchmark...
# table keywords: {'salvador', 'nicaragua', '684', '544', 'blue', 'color', 'rica', 'panama', '632', '838', 'honduras', '434', 'belize', 'el', 'birds', '699', 'country', 'guatemala', '904', 'costa'}
# input type: [dtype('O'), dtype('int64'), dtype('O')]
# input is:
       Country  Birds color
0       Belize    544  blue
1   Costa Rica    838  blue
2  El Salvador    434  blue
3    Guatemala    684  blue
4     Honduras    699  blue
5    Nicaragua    632  blue
6       Panama    904  blue
# query is: How many bird species are there in Honduras?
# expected output type:[dtype('int64')]
# expected output is:
   ANSWER
0     699
# inferred DSL terminals:
  # ConstVal: ['Birds@Str', '<NULL>']
     # cmap: [('bird', 'Birds')]
  # AggrFunc: ['count', '<NULL>']
     # amap: [('how many', 'count')]
  # NumFunc: ['<NULL>']
     # nmap: []
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 699}]
  # found 0 program(s)
# (t=0.47) i=1, candidate=[{'ANSWER': 1398}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: [434, 544, 632, 684, 699, 838, 904, 'Belize', 'Birds', 'Costa Rica', 'Country', 'El Salvador', 'Guatemala', 'Honduras', 'Nicaragua', 'Panama', 'blue', 'color']
# (t=0.93) fallback i=0, candidate=[{'ANSWER': 434}]
  # found 0 program(s)
# (t=1.39) fallback i=1, candidate=[{'ANSWER': 544}]
  # found 0 program(s)
# (t=1.85) fallback i=2, candidate=[{'ANSWER': 632}]
  # found 0 program(s)
# (t=2.31) fallback i=3, candidate=[{'ANSWER': 684}]
  # found 0 program(s)
# (t=2.78) fallback i=4, candidate=[{'ANSWER': 699}]
  # found 0 program(s)
# (t=3.24) fallback i=5, candidate=[{'ANSWER': 838}]
  # found 0 program(s)
# (t=3.70) fallback i=6, candidate=[{'ANSWER': 904}]
  # found 0 program(s)
# (t=4.15) fallback i=7, candidate=[{'ANSWER': 'Belize'}]
  # found 0 program(s)
# (t=4.61) fallback i=8, candidate=[{'ANSWER': 'Birds'}]
  # found 0 program(s)
# (t=5.07) fallback i=9, candidate=[{'ANSWER': 'Costa Rica'}]
  # found 0 program(s)
# (t=5.52) fallback i=10, candidate=[{'ANSWER': 'Country'}]
  # found 0 program(s)
# (t=5.97) fallback i=11, candidate=[{'ANSWER': 'El Salvador'}]
  # found 0 program(s)
# (t=6.43) fallback i=12, candidate=[{'ANSWER': 'Guatemala'}]
  # found 0 program(s)
# (t=6.88) fallback i=13, candidate=[{'ANSWER': 'Honduras'}]
  # found 0 program(s)
# (t=7.34) fallback i=14, candidate=[{'ANSWER': 'Nicaragua'}]
  # found 0 program(s)
# (t=7.81) fallback i=15, candidate=[{'ANSWER': 'Panama'}]
  # found 0 program(s)
# (t=8.26) fallback i=16, candidate=[{'ANSWER': 'blue'}]
  # found 0 program(s)
# (t=8.72) fallback i=17, candidate=[{'ANSWER': 'color'}]
  # found 0 program(s)
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: [699]

# ========== review report ========== #
