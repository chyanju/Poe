# parsed arguments: Namespace(benchmark='Qf59b3', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='optimal-only', expected_only=False)
# loading benchmark...
# table keywords: {'0-4', 'gender', '5-11', '24', '12-17', 'male', '1', 'blue', '7', 'orange', 'female', 'age', 'percentage', '60+', '18-59', '2', '9', 'group', '10', 'color', '20'}
# input type: [dtype('O'), dtype('O'), dtype('int64'), dtype('O')]
# input is:
  Age group  Gender  Percentage   color
0       0-4    Male           9  orange
1       0-4  Female           9    blue
2     12-17    Male           7  orange
3     12-17  Female           7    blue
4     18-59  Female          24    blue
5     18-59    Male          20  orange
6       60+  Female           2    blue
7       60+    Male           1  orange
8      5-11    Male          10  orange
9      5-11  Female          10    blue
# query is: Which age groups have unequal amount of Syrian refugees between male and female?
# expected output type:[dtype('O')]
# expected output is:
  ANSWER
0  18-59
1    60+
# inferred DSL terminals:
  # ConstVal: ['Male@Str', 'Female@Str', 'Age group@Str', '<NULL>']
     # cmap: [('age', 'Age group'), ('male', 'Male'), ('groups', 'Age group'), ('female', 'Female')]
  # AggrFunc: ['<NULL>']
     # amap: []
  # NumFunc: ['<NULL>']
     # nmap: []
  # BoolFunc: ['==', '!=', '<NULL>']
     # bmap: [(None, '=='), ('unequal', '!=')]
  # IndFunc: ['<NULL>']
     # imap: []
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': '0-4'}]
  # found 0 program(s)
# (t=17.75) i=1, candidate=[{'ANSWER': '12-17'}]
  # found 0 program(s)
# (t=35.64) i=2, candidate=[{'ANSWER': '18-59'}]
  # found 0 program(s)
# (t=53.74) i=3, candidate=[{'ANSWER': '5-11'}]
  # found 0 program(s)
# (t=71.73) i=4, candidate=[{'ANSWER': '0-4'}, {'ANSWER': '12-17'}]
  # found 0 program(s)
# (t=89.71) i=5, candidate=[{'ANSWER': '0-4'}, {'ANSWER': '18-59'}]
  # found 0 program(s)
# (t=107.87) i=6, candidate=[{'ANSWER': '0-4'}, {'ANSWER': '5-11'}]
  # found 0 program(s)
# (t=125.80) i=7, candidate=[{'ANSWER': '12-17'}, {'ANSWER': '18-59'}]
  # found 0 program(s)
# (t=144.10) i=8, candidate=[{'ANSWER': '12-17'}, {'ANSWER': '5-11'}]
  # found 0 program(s)
# (t=162.15) i=9, candidate=[{'ANSWER': '18-59'}, {'ANSWER': '5-11'}]
  # found 0 program(s)
# (t=180.09) i=10, candidate=[{'ANSWER': '0-4'}, {'ANSWER': '12-17'}, {'ANSWER': '18-59'}]
  # found 0 program(s)
# (t=198.17) i=11, candidate=[{'ANSWER': '0-4'}, {'ANSWER': '12-17'}, {'ANSWER': '5-11'}]
  # found 0 program(s)
# (t=216.15) i=12, candidate=[{'ANSWER': '0-4'}, {'ANSWER': '18-59'}, {'ANSWER': '5-11'}]
  # found 0 program(s)
# (t=234.40) i=13, candidate=[{'ANSWER': '12-17'}, {'ANSWER': '18-59'}, {'ANSWER': '5-11'}]
  # found 0 program(s)
# (t=252.42) i=14, candidate=[{'ANSWER': '0-4'}, {'ANSWER': '12-17'}, {'ANSWER': '18-59'}, {'ANSWER': '5-11'}]
  # found 0 program(s)
# (t=270.33) i=15, candidate=[{'ANSWER': '0-4'}, {'ANSWER': '12-17'}, {'ANSWER': '18-59'}, {'ANSWER': '60+'}]
  # found 0 program(s)
# (t=288.46) i=16, candidate=[{'ANSWER': '0-4'}, {'ANSWER': '12-17'}, {'ANSWER': '5-11'}, {'ANSWER': '60+'}]
  # found 0 program(s)
---------- timeout ----------
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: ['0-4', 1, 10, '12-17', '18-59', 2, 20, 24, '5-11', '60+', 7, 9, 'Age group', 'Female', 'Gender', 'Male', 'Percentage', 'blue', 'color', 'orange']
# (t=300.00) fallback i=0, candidate=[{'ANSWER': '0-4'}]
  # found 0 program(s)
---------- timeout ----------
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: ['0-4', '0-4', '12-17', '12-17', '18-59', '18-59', '5-11', '5-11', '60+']

# ========== review report ========== #
