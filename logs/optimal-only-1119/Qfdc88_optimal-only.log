# parsed arguments: Namespace(benchmark='Qfdc88', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='optimal-only', expected_only=False)
# loading benchmark...
# table keywords: {'35', 'percent', 'color', '30.06', '35-49', 'under', '24.05', 'red', '2012', '27.05', 'orange', '20.1', '2001', '19.07', '2007', '50-64', '23.2', 'blue', '24.98', '8.08', 'age', '26.02', 'year', '9.11', '65+', '7.14'}
# input type: [dtype('O'), dtype('int64'), dtype('float64'), dtype('O')]
# input is:
         Age  year  percent   color
0   Under 35  2001    30.06    blue
1   Under 35  2012    26.02     red
2   Under 35  2007    24.05  orange
3      50-64  2001    23.20    blue
4      50-64  2007    20.10  orange
5      50-64  2012    19.07     red
6        65+  2001     9.11    blue
7        65+  2007     8.08  orange
8        65+  2012     7.14     red
9      35-49  2001    27.05    blue
10     35-49  2007    26.02  orange
11     35-49  2012    24.98     red
# query is: Which age group of stock investors consistently took lower risks?
# expected output type:[dtype('O')]
# expected output is:
  ANSWER
0    65+
# inferred DSL terminals:
  # ConstVal: ['Age@Str', '<NULL>']
     # cmap: [('age', 'Age')]
  # AggrFunc: ['<NULL>']
     # amap: []
  # NumFunc: ['<NULL>']
     # nmap: []
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': '50-64'}]
  # found 0 program(s)
# (t=0.60) i=1, candidate=[{'ANSWER': '65+'}]
  # found 0 program(s)
# (t=1.19) i=2, candidate=[{'ANSWER': '35-49'}]
  # found 0 program(s)
# (t=1.78) i=3, candidate=[{'ANSWER': 'Under 35'}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: [19.07, 20.1, 2001, 2007, 2012, 23.2, 24.05, 24.98, 26.02, 27.05, 30.06, '35-49', '50-64', '65+', 7.14, 8.08, 9.11, 'Age', 'Under 35', 'blue', 'color', 'orange', 'percent', 'red', 'year']
# (t=2.37) fallback i=0, candidate=[{'ANSWER': 19.07}]
  # found 0 program(s)
# (t=2.96) fallback i=1, candidate=[{'ANSWER': 20.1}]
  # found 0 program(s)
# (t=3.54) fallback i=2, candidate=[{'ANSWER': 2001}]
  # found 0 program(s)
# (t=4.13) fallback i=3, candidate=[{'ANSWER': 2007}]
  # found 0 program(s)
# (t=4.73) fallback i=4, candidate=[{'ANSWER': 2012}]
  # found 0 program(s)
# (t=5.31) fallback i=5, candidate=[{'ANSWER': 23.2}]
  # found 0 program(s)
# (t=5.90) fallback i=6, candidate=[{'ANSWER': 24.05}]
  # found 0 program(s)
# (t=6.74) fallback i=7, candidate=[{'ANSWER': 24.98}]
  # found 0 program(s)
# (t=7.33) fallback i=8, candidate=[{'ANSWER': 26.02}]
  # found 0 program(s)
# (t=7.92) fallback i=9, candidate=[{'ANSWER': 27.05}]
  # found 0 program(s)
# (t=8.51) fallback i=10, candidate=[{'ANSWER': 30.06}]
  # found 0 program(s)
# (t=9.10) fallback i=11, candidate=[{'ANSWER': '35-49'}]
  # found 0 program(s)
# (t=9.69) fallback i=12, candidate=[{'ANSWER': '50-64'}]
  # found 0 program(s)
# (t=10.28) fallback i=13, candidate=[{'ANSWER': '65+'}]
  # found 0 program(s)
# (t=10.86) fallback i=14, candidate=[{'ANSWER': 7.14}]
  # found 0 program(s)
# (t=11.45) fallback i=15, candidate=[{'ANSWER': 8.08}]
  # found 0 program(s)
# (t=12.04) fallback i=16, candidate=[{'ANSWER': 9.11}]
  # found 0 program(s)
# (t=12.63) fallback i=17, candidate=[{'ANSWER': 'Age'}]
  # found 0 program(s)
# (t=13.23) fallback i=18, candidate=[{'ANSWER': 'Under 35'}]
  # found 0 program(s)
# (t=13.82) fallback i=19, candidate=[{'ANSWER': 'blue'}]
  # found 0 program(s)
# (t=14.41) fallback i=20, candidate=[{'ANSWER': 'color'}]
  # found 0 program(s)
# (t=14.99) fallback i=21, candidate=[{'ANSWER': 'orange'}]
  # found 0 program(s)
# (t=15.58) fallback i=22, candidate=[{'ANSWER': 'percent'}]
  # found 0 program(s)
# (t=16.49) fallback i=23, candidate=[{'ANSWER': 'red'}]
  # found 0 program(s)
# (t=17.08) fallback i=24, candidate=[{'ANSWER': 'year'}]
  # found 0 program(s)
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: ['Under 35']

# ========== review report ========== #
