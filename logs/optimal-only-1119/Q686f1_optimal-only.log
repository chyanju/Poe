# parsed arguments: Namespace(benchmark='Q686f1', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='optimal-only', expected_only=False)
# loading benchmark...
# table keywords: {'-1.8', '-2.1', 'rank', 'in', '-1.5', '1', '-0.25', '5', 'blue', '0.1', 'income', 'change', '8', '-0.4', '-1.0', '7', '-0.9', '9', '0.2', '2', '4', '3', '10', 'color', '%', '6'}
# input type: [dtype('int64'), dtype('float64'), dtype('O')]
# input is:
   income rank  % change in income color
0            1               -1.80  blue
1            2               -1.50  blue
2            3               -1.00  blue
3            4               -0.90  blue
4            5               -0.40  blue
5            6                0.10  blue
6            7                0.20  blue
7            8                0.10  blue
8            9               -0.25  blue
9           10               -2.10  blue
# query is: What is the different between change of income between ranks 1 and 2?
# expected output type:[dtype('float64')]
# expected output is:
   ANSWER
0     0.3
# inferred DSL terminals:
  # ConstVal: ['1@Int', '2@Int', 'income rank@Str', '% change in income@Str', '<NULL>']
     # cmap: [('ranks', 'income rank'), (1, 1), ('income', '% change in income'), ('income', 'income rank'), (2, 2), ('change', '% change in income')]
  # AggrFunc: ['<NULL>']
     # amap: []
  # NumFunc: ['-', 'diff', '<NULL>']
     # nmap: [('different', 'diff'), ('different', '-')]
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# ====> fallback strategy (comparison) is triggered
  # [debug] high_values: [(3.8, 4), (2.5, 4), (1.0, 4), (0.30000000000000004, 4), (-0.30000000000000004, 4), (-1.0, 4), (-2.5, 4), (-3.8, 4)]
  # [debug] high_values (no dup.): [(3.8, 4), (2.5, 4), (0.30000000000000004, 4), (-0.30000000000000004, 4), (-1.0, 4), (-2.5, 4), (-3.8, 4)]
  # [debug] filtered low_values (no dup.): [(11.8, 2), (11.5, 2), (10.8, 2), (10.5, 2), (9.8, 2), (9.5, 2), (9.0, 2), (8.8, 2), (8.5, 2), (8.0, 2)]
  # [debug] fallback (comparison) answers are added
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 1}]
  # found 4 program(s)
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, 1@Int), ==, 0, 1@Int), ['0'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'income rank', 1], '==', 'income rank', 1], ['income rank']]
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, 1@Int), ==, 0, 1@Int), ['-1', '-2'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'income rank', 1], '==', 'income rank', 1], ['income rank']]
    # SelectCol(SelectRow1(@param0, ==, 0, 1@Int), ['0'])
      --> ['SelectCol', ['SelectRow1', 'input@0', '==', 'income rank', 1], ['income rank']]
    # SelectCol(SelectRow1(@param0, ==, 0, 1@Int), ['-1', '-2'])
      --> ['SelectCol', ['SelectRow1', 'input@0', '==', 'income rank', 1], ['income rank']]
# (t=5.53) i=1, candidate=[{'ANSWER': 2}]
  # found 4 program(s)
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, 2@Int), ==, 0, 2@Int), ['0'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'income rank', 2], '==', 'income rank', 2], ['income rank']]
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, 2@Int), ==, 0, 2@Int), ['-1', '-2'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'income rank', 2], '==', 'income rank', 2], ['income rank']]
    # SelectCol(SelectRow1(@param0, ==, 0, 2@Int), ['0'])
      --> ['SelectCol', ['SelectRow1', 'input@0', '==', 'income rank', 2], ['income rank']]
    # SelectCol(SelectRow1(@param0, ==, 0, 2@Int), ['-1', '-2'])
      --> ['SelectCol', ['SelectRow1', 'input@0', '==', 'income rank', 2], ['income rank']]
# (t=11.07) i=2, candidate=[{'ANSWER': 3.8}]
  # found 0 program(s)
# (t=16.83) i=3, candidate=[{'ANSWER': 2.5}]
  # found 0 program(s)
# (t=22.29) i=4, candidate=[{'ANSWER': 0.30000000000000004}]
  # found 3 program(s)
    # Contrast(@param0, -, 0, 2@Int, 1@Int, 1)
      --> ['Contrast', 'input@0', '-', 'income rank', 2, 1, '% change in income']
    # Contrast(@param0, diff, 0, 1@Int, 2@Int, 1)
      --> ['Contrast', 'input@0', 'diff', 'income rank', 1, 2, '% change in income']
    # Contrast(@param0, diff, 0, 2@Int, 1@Int, 1)
      --> ['Contrast', 'input@0', 'diff', 'income rank', 2, 1, '% change in income']
# (t=27.77) i=5, candidate=[{'ANSWER': -0.30000000000000004}]
  # found 1 program(s)
    # Contrast(@param0, -, 0, 1@Int, 2@Int, 1)
      --> ['Contrast', 'input@0', '-', 'income rank', 1, 2, '% change in income']
# (t=33.22) i=6, candidate=[{'ANSWER': -1.0}]
  # found 0 program(s)
# (t=39.01) i=7, candidate=[{'ANSWER': -2.5}]
  # found 0 program(s)
# (t=44.49) i=8, candidate=[{'ANSWER': -3.8}]
  # found 0 program(s)
# (t=50.00) i=9, candidate=[{'ANSWER': 11.8}]
  # found 0 program(s)
# (t=55.80) i=10, candidate=[{'ANSWER': 11.5}]
  # found 0 program(s)
# (t=61.26) i=11, candidate=[{'ANSWER': 10.8}]
  # found 0 program(s)
# (t=66.72) i=12, candidate=[{'ANSWER': 10.5}]
  # found 0 program(s)
# (t=72.20) i=13, candidate=[{'ANSWER': 9.8}]
  # found 0 program(s)
# (t=77.98) i=14, candidate=[{'ANSWER': 9.5}]
  # found 0 program(s)
# (t=83.45) i=15, candidate=[{'ANSWER': 9.0}]
  # found 0 program(s)
# (t=88.92) i=16, candidate=[{'ANSWER': 8.8}]
  # found 0 program(s)
# (t=94.72) i=17, candidate=[{'ANSWER': 8.5}]
  # found 0 program(s)
# (t=100.16) i=18, candidate=[{'ANSWER': 8.0}]
  # found 0 program(s)

# ========== review report ========== #
# top-1, score: 1.60, answer: [0.30000000000000004]
  # tprog: Contrast(@param0, -, 0, 2@Int, 1@Int, 1)
# top-2, score: 1.60, answer: [0.30000000000000004]
  # tprog: Contrast(@param0, diff, 0, 1@Int, 2@Int, 1)
# top-3, score: 1.60, answer: [0.30000000000000004]
  # tprog: Contrast(@param0, diff, 0, 2@Int, 1@Int, 1)
# top-4, score: 1.60, answer: [-0.30000000000000004]
  # tprog: Contrast(@param0, -, 0, 1@Int, 2@Int, 1)
# top-5, score: 1.37, answer: [1]
  # tprog: SelectCol(SelectRow1(@param0, ==, 0, 1@Int), ['0'])
# top-6, score: 1.37, answer: [1]
  # tprog: SelectCol(SelectRow1(@param0, ==, 0, 1@Int), ['-1', '-2'])
# top-7, score: 1.37, answer: [2]
  # tprog: SelectCol(SelectRow1(@param0, ==, 0, 2@Int), ['0'])
# top-8, score: 1.37, answer: [2]
  # tprog: SelectCol(SelectRow1(@param0, ==, 0, 2@Int), ['-1', '-2'])
# top-9, score: 1.32, answer: [1]
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, 1@Int), ==, 0, 1@Int), ['0'])
# top-10, score: 1.32, answer: [1]
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, 1@Int), ==, 0, 1@Int), ['-1', '-2'])
# top-11, score: 1.32, answer: [2]
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, 2@Int), ==, 0, 2@Int), ['0'])
# top-12, score: 1.32, answer: [2]
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, 2@Int), ==, 0, 2@Int), ['-1', '-2'])
