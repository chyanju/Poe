# parsed arguments: Namespace(benchmark='Qe15f6', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='optimal-only', expected_only=False)
# loading benchmark...
# table keywords: {'date', '14', '19', '94', '5', '45', '61', 'snow', '82', 'sun', 'dec', '(month)', 'count', 'jan', 'jul', '71', 'pink', '2', 'apr', '8', '13', '20', '54', 'jun', '38', '55', 'nov', '42', 'rain', '1', 'oct', '25', 'drizzle', '33', '3', '23', 'color', 'feb', 'yellow', '10', 'records', 'weather', '30', '89', '50', 'mar', 'gray', '6', '16', 'fog', '35', 'aug', '85', '36', '40', '37', '4', 'blue', 'sep', '34', 'may'}
# input type: [dtype('O'), dtype('O'), dtype('int64'), dtype('O')]
# input is:
    weather date (month)  Count of Records   color
0   drizzle          Jan                10    pink
1      rain          Jan                35    blue
2       sun          Jan                33  yellow
3      snow          Jan                 8    gray
4      rain          Feb                40    blue
5       sun          Feb                30  yellow
6   drizzle          Feb                 4    pink
7      snow          Feb                 3    gray
8       sun          Mar                42  yellow
9      rain          Mar                37    blue
10     snow          Mar                 6    gray
11  drizzle          Mar                 3    pink
12     rain          Apr                20    blue
13      sun          Apr                61  yellow
14     snow          Apr                 1    gray
15  drizzle          Apr                 4    pink
16     rain          May                16    blue
17      sun          May                82  yellow
18  drizzle          May                 1    pink
19     rain          Jun                19    blue
20      sun          Jun                85  yellow
21  drizzle          Jun                 2    pink
22     rain          Jul                14    blue
23      sun          Jul                89  yellow
24  drizzle          Jul                 8    pink
25      fog          Jul                13    pink
26  drizzle          Aug                 8    pink
27      sun          Aug                94  yellow
28     rain          Aug                 6    blue
29      sun          Sep                71  yellow
30     rain          Sep                 4    blue
31      fog          Sep                40    pink
32  drizzle          Sep                 5    pink
33      sun          Oct                45  yellow
34  drizzle          Oct                 4    pink
35     rain          Oct                20    blue
36     rain          Nov                25    blue
37      sun          Nov                42  yellow
38  drizzle          Nov                 3    pink
39      fog          Nov                50    pink
40     rain          Dec                23    blue
41      sun          Dec                40  yellow
42     snow          Dec                 5    gray
43  drizzle          Dec                 2    pink
44      fog          Mar                36    pink
45      fog          Apr                34    pink
46      fog          May                25    pink
47      fog          Jun                14    pink
48      fog          Aug                16    pink
49      fog          Oct                55    pink
50      fog          Dec                54    pink
51      fog          Jan                38    pink
52      fog          Feb                36    pink
# query is: What month has more rain than sun?
# expected output type:[dtype('O')]
# expected output is:
     ANSWER
0  February
1   January
# inferred DSL terminals:
  # ConstVal: ['sun@Str', 'rain@Str', 'date (month)@Str', '<NULL>']
     # cmap: [('month', 'date (month)'), ('rain', 'rain'), ('sun', 'sun')]
  # AggrFunc: ['<NULL>']
     # amap: []
  # NumFunc: ['-', '<NULL>']
     # nmap: [('more', '-')]
  # BoolFunc: ['>', '==', '>=', '<NULL>']
     # bmap: [('more', '>'), ('more', '>='), (None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# ====> fallback strategy (comparison) is triggered
  # [debug] high_values: [(90, 4), (88, 4), (85, 4), (83, 4), (81, 4), (80, 4), (79, 4), (78, 4), (78, 4), (76, 4)]
  # [debug] high_values (no dup.): [(90, 4), (88, 4), (85, 4), (83, 4), (81, 4), (80, 4), (79, 4), (78, 4), (78, 4), (76, 4)]
  # [debug] filtered low_values (no dup.): [(93, 2), (93, 2), (92, 2), (92, 2), (91, 2), (91, 2), (91, 2), (90, 2), (90, 2), (90, 2)]
  # [debug] fallback (comparison) answers are added
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 'Jan'}]
  # found 0 program(s)
# (t=5.84) i=1, candidate=[{'ANSWER': 'Apr'}]
  # found 0 program(s)
# (t=11.95) i=2, candidate=[{'ANSWER': 'Oct'}]
  # found 0 program(s)
# (t=17.73) i=3, candidate=[{'ANSWER': 'Feb'}]
  # found 0 program(s)
# (t=23.53) i=4, candidate=[{'ANSWER': 'Sep'}]
  # found 0 program(s)
# (t=29.70) i=5, candidate=[{'ANSWER': 'Dec'}]
  # found 0 program(s)
# (t=35.48) i=6, candidate=[{'ANSWER': 'Jul'}]
  # found 0 program(s)
# (t=41.25) i=7, candidate=[{'ANSWER': 'Mar'}]
  # found 0 program(s)
# (t=47.44) i=8, candidate=[{'ANSWER': 'Aug'}]
  # found 0 program(s)
# (t=53.26) i=9, candidate=[{'ANSWER': 'May'}]
  # found 0 program(s)
# (t=59.38) i=10, candidate=[{'ANSWER': 'Nov'}]
  # found 0 program(s)
# (t=65.17) i=11, candidate=[{'ANSWER': 'Jun'}]
  # found 0 program(s)
# (t=71.33) i=12, candidate=[{'ANSWER': 90}]
  # found 0 program(s)
# (t=77.14) i=13, candidate=[{'ANSWER': 88}]
  # found 0 program(s)
# (t=82.94) i=14, candidate=[{'ANSWER': 85}]
  # found 0 program(s)
# (t=89.12) i=15, candidate=[{'ANSWER': 83}]
  # found 0 program(s)
# (t=94.89) i=16, candidate=[{'ANSWER': 81}]
  # found 0 program(s)
# (t=100.63) i=17, candidate=[{'ANSWER': 80}]
  # found 0 program(s)
# (t=106.77) i=18, candidate=[{'ANSWER': 79}]
  # found 0 program(s)
# (t=112.56) i=19, candidate=[{'ANSWER': 78}]
  # found 0 program(s)
# (t=118.65) i=20, candidate=[{'ANSWER': 78}]
  # found 0 program(s)
# (t=124.44) i=21, candidate=[{'ANSWER': 76}]
  # found 0 program(s)
# (t=130.57) i=22, candidate=[{'ANSWER': 93}]
  # found 0 program(s)
# (t=136.37) i=23, candidate=[{'ANSWER': 93}]
  # found 0 program(s)
# (t=142.14) i=24, candidate=[{'ANSWER': 92}]
  # found 0 program(s)
# (t=148.31) i=25, candidate=[{'ANSWER': 92}]
  # found 0 program(s)
# (t=154.09) i=26, candidate=[{'ANSWER': 91}]
  # found 0 program(s)
# (t=159.89) i=27, candidate=[{'ANSWER': 91}]
  # found 0 program(s)
# (t=166.03) i=28, candidate=[{'ANSWER': 91}]
  # found 0 program(s)
# (t=171.86) i=29, candidate=[{'ANSWER': 90}]
  # found 0 program(s)
# (t=177.95) i=30, candidate=[{'ANSWER': 90}]
  # found 0 program(s)
# (t=183.73) i=31, candidate=[{'ANSWER': 90}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: [1, 10, 13, 14, 16, 19, 2, 20, 23, 25, 3, 30, 33, 34, 35, 36, 37, 38, 4, 40, 42, 45, 5, 50, 54, 55, 6, 61, 71, 8, 82, 85, 89, 94, 'Apr', 'Aug', 'Count of Records', 'Dec', 'Feb', 'Jan', 'Jul', 'Jun', 'Mar', 'May', 'Nov', 'Oct', 'Sep', 'blue', 'color', 'date (month)', 'drizzle', 'fog', 'gray', 'pink', 'rain', 'snow', 'sun', 'weather', 'yellow']
# (t=189.52) fallback i=0, candidate=[{'ANSWER': 1}]
  # found 0 program(s)
# (t=195.68) fallback i=1, candidate=[{'ANSWER': 10}]
  # found 0 program(s)
# (t=201.47) fallback i=2, candidate=[{'ANSWER': 13}]
  # found 0 program(s)
# (t=207.57) fallback i=3, candidate=[{'ANSWER': 14}]
  # found 0 program(s)
# (t=213.35) fallback i=4, candidate=[{'ANSWER': 16}]
  # found 0 program(s)
# (t=219.46) fallback i=5, candidate=[{'ANSWER': 19}]
  # found 0 program(s)
# (t=225.27) fallback i=6, candidate=[{'ANSWER': 2}]
  # found 0 program(s)
# (t=231.08) fallback i=7, candidate=[{'ANSWER': 20}]
  # found 0 program(s)
# (t=237.25) fallback i=8, candidate=[{'ANSWER': 23}]
  # found 0 program(s)
# (t=243.02) fallback i=9, candidate=[{'ANSWER': 25}]
  # found 0 program(s)
# (t=248.82) fallback i=10, candidate=[{'ANSWER': 3}]
  # found 0 program(s)
# (t=255.00) fallback i=11, candidate=[{'ANSWER': 30}]
  # found 0 program(s)
# (t=260.80) fallback i=12, candidate=[{'ANSWER': 33}]
  # found 0 program(s)
# (t=266.90) fallback i=13, candidate=[{'ANSWER': 34}]
  # found 0 program(s)
# (t=272.67) fallback i=14, candidate=[{'ANSWER': 35}]
  # found 0 program(s)
# (t=278.77) fallback i=15, candidate=[{'ANSWER': 36}]
  # found 0 program(s)
# (t=284.55) fallback i=16, candidate=[{'ANSWER': 37}]
  # found 0 program(s)
# (t=290.32) fallback i=17, candidate=[{'ANSWER': 38}]
  # found 0 program(s)
# (t=296.49) fallback i=18, candidate=[{'ANSWER': 4}]
  # found 0 program(s)
---------- timeout ----------
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: ['Jan']

# ========== review report ========== #
