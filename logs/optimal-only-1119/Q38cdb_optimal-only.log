# parsed arguments: Namespace(benchmark='Q38cdb', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='optimal-only', expected_only=False)
# loading benchmark...
# table keywords: {'180000', 'bus', 'mrt', '3095000', '3939000', 'lrt', 'color', 'ridership', 'blue', 'taxi', 'transportation', '954000'}
# input type: [dtype('int64'), dtype('O'), dtype('O')]
# input is:
   ridership transportation color
0    3939000            Bus  blue
1    3095000            MRT  blue
2     954000           Taxi  blue
3     180000            LRT  blue
# query is: What is the approximate total number of daily Public Transportation users on average?
# expected output type:[dtype('int64')]
# expected output is:
    ANSWER
0  8168000
# inferred DSL terminals:
  # ConstVal: ['transportation@Str', '<NULL>']
     # cmap: [('transportation', 'transportation')]
  # AggrFunc: ['sum', 'mean', 'count', '<NULL>']
     # amap: [('average', 'mean'), ('total', 'sum'), ('total', 'count')]
  # NumFunc: ['<NULL>']
     # nmap: []
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 1}]
  # found 0 program(s)
# (t=0.54) i=1, candidate=[{'ANSWER': 2}]
  # found 0 program(s)
# (t=1.08) i=2, candidate=[{'ANSWER': 3}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: [180000, 3095000, 3939000, 954000, 'Bus', 'LRT', 'MRT', 'Taxi', 'blue', 'color', 'ridership', 'transportation']
# (t=1.61) fallback i=0, candidate=[{'ANSWER': 180000}]
  # found 0 program(s)
# (t=2.15) fallback i=1, candidate=[{'ANSWER': 3095000}]
  # found 0 program(s)
# (t=2.68) fallback i=2, candidate=[{'ANSWER': 3939000}]
  # found 0 program(s)
# (t=3.22) fallback i=3, candidate=[{'ANSWER': 954000}]
  # found 0 program(s)
# (t=3.76) fallback i=4, candidate=[{'ANSWER': 'Bus'}]
  # found 0 program(s)
# (t=4.30) fallback i=5, candidate=[{'ANSWER': 'LRT'}]
  # found 0 program(s)
# (t=4.84) fallback i=6, candidate=[{'ANSWER': 'MRT'}]
  # found 0 program(s)
# (t=5.37) fallback i=7, candidate=[{'ANSWER': 'Taxi'}]
  # found 0 program(s)
# (t=5.90) fallback i=8, candidate=[{'ANSWER': 'blue'}]
  # found 0 program(s)
# (t=6.43) fallback i=9, candidate=[{'ANSWER': 'color'}]
  # found 0 program(s)
# (t=6.96) fallback i=10, candidate=[{'ANSWER': 'ridership'}]
  # found 0 program(s)
# (t=7.50) fallback i=11, candidate=[{'ANSWER': 'transportation'}]
  # found 0 program(s)
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: [4]

# ========== review report ========== #
