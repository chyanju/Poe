# parsed arguments: Namespace(benchmark='Q20305', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='optimal-only', expected_only=False)
# loading benchmark...
# table keywords: {'29.0', 'dill', 'lumda', 'color', 'name', 'salzböde', '46.6', '24.3', 'wetzbach', '24.6', '8.3', '6.3', '27.6', 'weil', 'wetschaft', '40.7', '11.5', '19.1', '32.1', '49.7', 'feudinge', '39.7', 'allna', 'gelbach', '(aubach)', '(möttbach)', '13.6', 'ohm', 'length', 'mühlbach', 'banfe', '8.8', 'ilse', '20.0', 'zwester', 'solmsbach', '8.4', 'elbbach', '(rppersbach)', '14.6', 'kallenbach', 'blue', 'aar', 'dörsbach', 'wieseck', '32.0', 'laasphe', 'kleebach', 'iserbach', 'kerkerbach', '30.0', '26.9', '39.1', '55.0', '59.7', 'dautphe', '22.9', 'bieber', '20.7', 'perf', '11.7', '19.2', 'ulmbach', 'emsbach'}
# input type: [dtype('O'), dtype('float64'), dtype('O')]
# input is:
                     Name  Length color
0   Feudinge (Rppersbach)     6.3  blue
1                    Ilse     8.4  blue
2                   Banfe    11.5  blue
3                 Laasphe     8.3  blue
4                    Perf    20.0  blue
5                 Dautphe     8.8  blue
6               Wetschaft    29.0  blue
7                     Ohm    59.7  blue
8                   Allna    19.1  blue
9             Zwester Ohm    20.0  blue
10               Salzböde    27.6  blue
11                  Lumda    30.0  blue
12                Wieseck    24.3  blue
13                 Bieber    13.6  blue
14               Kleebach    26.9  blue
15               Wetzbach    11.7  blue
16                   Dill    55.0  blue
17              Solmsbach    24.6  blue
18    Iserbach (Möttbach)    19.2  blue
19                Ulmbach    22.9  blue
20             Kallenbach    14.6  blue
21                   Weil    46.6  blue
22             Kerkerbach    20.7  blue
23                Emsbach    39.1  blue
24                Elbbach    40.7  blue
25                    Aar    49.7  blue
26               Dörsbach    32.0  blue
27       Gelbach (Aubach)    39.7  blue
28               Mühlbach    32.1  blue
29                Emsbach    11.5  blue
# query is: By how much bigger is the Alna category compared to the Dautphe category?
# expected output type:[dtype('float64')]
# expected output is:
   ANSWER
0    10.3
# inferred DSL terminals:
  # ConstVal: ['Dautphe@Str', '<NULL>']
     # cmap: [('dautphe', 'Dautphe')]
  # AggrFunc: ['<NULL>']
     # amap: []
  # NumFunc: ['-', '<NULL>']
     # nmap: [('bigger', '-')]
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# ====> fallback strategy (comparison) is triggered
  # [debug] high_values: []
  # [debug] high_values (no dup.): []
  # [debug] filtered low_values (no dup.): [(50.900000000000006, 2), (46.2, 2), (40.900000000000006, 2), (37.8, 2), (31.900000000000002, 2), (30.900000000000002, 2), (30.3, 2), (23.3, 2), (23.2, 2), (21.2, 2)]
  # [debug] fallback (comparison) answers are added
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 1}]
  # found 0 program(s)
# (t=0.39) i=1, candidate=[{'ANSWER': 50.900000000000006}]
  # found 0 program(s)
# (t=0.77) i=2, candidate=[{'ANSWER': 46.2}]
  # found 0 program(s)
# (t=1.16) i=3, candidate=[{'ANSWER': 40.900000000000006}]
  # found 0 program(s)
# (t=1.54) i=4, candidate=[{'ANSWER': 37.8}]
  # found 0 program(s)
# (t=1.93) i=5, candidate=[{'ANSWER': 31.900000000000002}]
  # found 0 program(s)
# (t=2.31) i=6, candidate=[{'ANSWER': 30.900000000000002}]
  # found 0 program(s)
# (t=2.69) i=7, candidate=[{'ANSWER': 30.3}]
  # found 0 program(s)
# (t=3.08) i=8, candidate=[{'ANSWER': 23.3}]
  # found 0 program(s)
# (t=3.46) i=9, candidate=[{'ANSWER': 23.2}]
  # found 0 program(s)
# (t=3.85) i=10, candidate=[{'ANSWER': 21.2}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: [11.5, 11.7, 13.6, 14.6, 19.1, 19.2, 20.0, 20.7, 22.9, 24.3, 24.6, 26.9, 27.6, 29.0, 30.0, 32.0, 32.1, 39.1, 39.7, 40.7, 46.6, 49.7, 55.0, 59.7, 6.3, 8.3, 8.4, 8.8, 'Aar', 'Allna', 'Banfe', 'Bieber', 'Dautphe', 'Dill', 'Dörsbach', 'Elbbach', 'Emsbach', 'Feudinge (Rppersbach)', 'Gelbach (Aubach)', 'Ilse', 'Iserbach (Möttbach)', 'Kallenbach', 'Kerkerbach', 'Kleebach', 'Laasphe', 'Length', 'Lumda', 'Mühlbach', 'Name', 'Ohm', 'Perf', 'Salzböde', 'Solmsbach', 'Ulmbach', 'Weil', 'Wetschaft', 'Wetzbach', 'Wieseck', 'Zwester Ohm', 'blue', 'color']
# (t=4.24) fallback i=0, candidate=[{'ANSWER': 11.5}]
  # found 0 program(s)
# (t=4.63) fallback i=1, candidate=[{'ANSWER': 11.7}]
  # found 0 program(s)
# (t=5.01) fallback i=2, candidate=[{'ANSWER': 13.6}]
  # found 0 program(s)
# (t=5.40) fallback i=3, candidate=[{'ANSWER': 14.6}]
  # found 0 program(s)
# (t=5.78) fallback i=4, candidate=[{'ANSWER': 19.1}]
  # found 0 program(s)
# (t=6.16) fallback i=5, candidate=[{'ANSWER': 19.2}]
  # found 0 program(s)
# (t=6.54) fallback i=6, candidate=[{'ANSWER': 20.0}]
  # found 0 program(s)
# (t=6.92) fallback i=7, candidate=[{'ANSWER': 20.7}]
  # found 0 program(s)
# (t=7.31) fallback i=8, candidate=[{'ANSWER': 22.9}]
  # found 0 program(s)
# (t=7.69) fallback i=9, candidate=[{'ANSWER': 24.3}]
  # found 0 program(s)
# (t=8.07) fallback i=10, candidate=[{'ANSWER': 24.6}]
  # found 0 program(s)
# (t=8.45) fallback i=11, candidate=[{'ANSWER': 26.9}]
  # found 0 program(s)
# (t=8.83) fallback i=12, candidate=[{'ANSWER': 27.6}]
  # found 0 program(s)
# (t=9.21) fallback i=13, candidate=[{'ANSWER': 29.0}]
  # found 0 program(s)
# (t=9.58) fallback i=14, candidate=[{'ANSWER': 30.0}]
  # found 0 program(s)
# (t=9.96) fallback i=15, candidate=[{'ANSWER': 32.0}]
  # found 0 program(s)
# (t=10.34) fallback i=16, candidate=[{'ANSWER': 32.1}]
  # found 0 program(s)
# (t=10.71) fallback i=17, candidate=[{'ANSWER': 39.1}]
  # found 0 program(s)
# (t=11.37) fallback i=18, candidate=[{'ANSWER': 39.7}]
  # found 0 program(s)
# (t=11.74) fallback i=19, candidate=[{'ANSWER': 40.7}]
  # found 0 program(s)
# (t=12.12) fallback i=20, candidate=[{'ANSWER': 46.6}]
  # found 0 program(s)
# (t=12.49) fallback i=21, candidate=[{'ANSWER': 49.7}]
  # found 0 program(s)
# (t=12.87) fallback i=22, candidate=[{'ANSWER': 55.0}]
  # found 0 program(s)
# (t=13.24) fallback i=23, candidate=[{'ANSWER': 59.7}]
  # found 0 program(s)
# (t=13.62) fallback i=24, candidate=[{'ANSWER': 6.3}]
  # found 0 program(s)
# (t=14.00) fallback i=25, candidate=[{'ANSWER': 8.3}]
  # found 0 program(s)
# (t=14.38) fallback i=26, candidate=[{'ANSWER': 8.4}]
  # found 0 program(s)
# (t=14.76) fallback i=27, candidate=[{'ANSWER': 8.8}]
  # found 4 program(s)
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, Dautphe@Str), ==, 0, Dautphe@Str), ['1'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'Name', 'Dautphe'], '==', 'Name', 'Dautphe'], ['Length']]
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, Dautphe@Str), ==, 0, Dautphe@Str), ['-99', '-2'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'Name', 'Dautphe'], '==', 'Name', 'Dautphe'], ['Length']]
    # SelectCol(SelectRow1(@param0, ==, 0, Dautphe@Str), ['1'])
      --> ['SelectCol', ['SelectRow1', 'input@0', '==', 'Name', 'Dautphe'], ['Length']]
    # SelectCol(SelectRow1(@param0, ==, 0, Dautphe@Str), ['-99', '-2'])
      --> ['SelectCol', ['SelectRow1', 'input@0', '==', 'Name', 'Dautphe'], ['Length']]
# (t=15.14) fallback i=28, candidate=[{'ANSWER': 'Aar'}]
  # found 0 program(s)
# (t=15.52) fallback i=29, candidate=[{'ANSWER': 'Allna'}]
  # found 0 program(s)
# (t=15.90) fallback i=30, candidate=[{'ANSWER': 'Banfe'}]
  # found 0 program(s)
# (t=16.27) fallback i=31, candidate=[{'ANSWER': 'Bieber'}]
  # found 0 program(s)
# (t=16.65) fallback i=32, candidate=[{'ANSWER': 'Dautphe'}]
  # found 4 program(s)
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, Dautphe@Str), ==, 0, Dautphe@Str), ['0'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'Name', 'Dautphe'], '==', 'Name', 'Dautphe'], ['Name']]
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, Dautphe@Str), ==, 0, Dautphe@Str), ['-1', '-2'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'Name', 'Dautphe'], '==', 'Name', 'Dautphe'], ['Name']]
    # SelectCol(SelectRow1(@param0, ==, 0, Dautphe@Str), ['0'])
      --> ['SelectCol', ['SelectRow1', 'input@0', '==', 'Name', 'Dautphe'], ['Name']]
    # SelectCol(SelectRow1(@param0, ==, 0, Dautphe@Str), ['-1', '-2'])
      --> ['SelectCol', ['SelectRow1', 'input@0', '==', 'Name', 'Dautphe'], ['Name']]
# (t=17.03) fallback i=33, candidate=[{'ANSWER': 'Dill'}]
  # found 0 program(s)
# (t=17.41) fallback i=34, candidate=[{'ANSWER': 'Dörsbach'}]
  # found 0 program(s)
# (t=17.79) fallback i=35, candidate=[{'ANSWER': 'Elbbach'}]
  # found 0 program(s)
# (t=18.18) fallback i=36, candidate=[{'ANSWER': 'Emsbach'}]
  # found 0 program(s)
# (t=18.56) fallback i=37, candidate=[{'ANSWER': 'Feudinge (Rppersbach)'}]
  # found 0 program(s)
# (t=18.94) fallback i=38, candidate=[{'ANSWER': 'Gelbach (Aubach)'}]
  # found 0 program(s)
# (t=19.32) fallback i=39, candidate=[{'ANSWER': 'Ilse'}]
  # found 0 program(s)
# (t=19.70) fallback i=40, candidate=[{'ANSWER': 'Iserbach (Möttbach)'}]
  # found 0 program(s)
# (t=20.09) fallback i=41, candidate=[{'ANSWER': 'Kallenbach'}]
  # found 0 program(s)
# (t=20.47) fallback i=42, candidate=[{'ANSWER': 'Kerkerbach'}]
  # found 0 program(s)
# (t=20.86) fallback i=43, candidate=[{'ANSWER': 'Kleebach'}]
  # found 0 program(s)
# (t=21.24) fallback i=44, candidate=[{'ANSWER': 'Laasphe'}]
  # found 0 program(s)
# (t=21.63) fallback i=45, candidate=[{'ANSWER': 'Length'}]
  # found 0 program(s)
# (t=22.01) fallback i=46, candidate=[{'ANSWER': 'Lumda'}]
  # found 0 program(s)
# (t=22.39) fallback i=47, candidate=[{'ANSWER': 'Mühlbach'}]
  # found 0 program(s)
# (t=22.77) fallback i=48, candidate=[{'ANSWER': 'Name'}]
  # found 0 program(s)
# (t=23.15) fallback i=49, candidate=[{'ANSWER': 'Ohm'}]
  # found 0 program(s)
# (t=23.52) fallback i=50, candidate=[{'ANSWER': 'Perf'}]
  # found 0 program(s)
# (t=23.91) fallback i=51, candidate=[{'ANSWER': 'Salzböde'}]
  # found 0 program(s)
# (t=24.29) fallback i=52, candidate=[{'ANSWER': 'Solmsbach'}]
  # found 0 program(s)
# (t=24.67) fallback i=53, candidate=[{'ANSWER': 'Ulmbach'}]
  # found 0 program(s)
# (t=25.06) fallback i=54, candidate=[{'ANSWER': 'Weil'}]
  # found 0 program(s)
# (t=25.75) fallback i=55, candidate=[{'ANSWER': 'Wetschaft'}]
  # found 0 program(s)
# (t=26.13) fallback i=56, candidate=[{'ANSWER': 'Wetzbach'}]
  # found 0 program(s)
# (t=26.52) fallback i=57, candidate=[{'ANSWER': 'Wieseck'}]
  # found 0 program(s)
# (t=26.90) fallback i=58, candidate=[{'ANSWER': 'Zwester Ohm'}]
  # found 0 program(s)
# (t=27.29) fallback i=59, candidate=[{'ANSWER': 'blue'}]
  # found 4 program(s)
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, Dautphe@Str), ==, 0, Dautphe@Str), ['2'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'Name', 'Dautphe'], '==', 'Name', 'Dautphe'], ['color']]
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, Dautphe@Str), ==, 0, Dautphe@Str), ['-99', '-1'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'Name', 'Dautphe'], '==', 'Name', 'Dautphe'], ['color']]
    # SelectCol(SelectRow1(@param0, ==, 0, Dautphe@Str), ['2'])
      --> ['SelectCol', ['SelectRow1', 'input@0', '==', 'Name', 'Dautphe'], ['color']]
    # SelectCol(SelectRow1(@param0, ==, 0, Dautphe@Str), ['-99', '-1'])
      --> ['SelectCol', ['SelectRow1', 'input@0', '==', 'Name', 'Dautphe'], ['color']]
# (t=27.67) fallback i=60, candidate=[{'ANSWER': 'color'}]
  # found 0 program(s)

# ========== review report ========== #
# top-1, score: 2.22, answer: [8.8]
  # tprog: SelectCol(SelectRow1(@param0, ==, 0, Dautphe@Str), ['1'])
# top-2, score: 2.22, answer: [8.8]
  # tprog: SelectCol(SelectRow1(@param0, ==, 0, Dautphe@Str), ['-99', '-2'])
# top-3, score: 2.22, answer: ['Dautphe']
  # tprog: SelectCol(SelectRow1(@param0, ==, 0, Dautphe@Str), ['0'])
# top-4, score: 2.22, answer: ['Dautphe']
  # tprog: SelectCol(SelectRow1(@param0, ==, 0, Dautphe@Str), ['-1', '-2'])
# top-5, score: 2.22, answer: ['blue']
  # tprog: SelectCol(SelectRow1(@param0, ==, 0, Dautphe@Str), ['2'])
# top-6, score: 2.22, answer: ['blue']
  # tprog: SelectCol(SelectRow1(@param0, ==, 0, Dautphe@Str), ['-99', '-1'])
# top-7, score: 2.17, answer: [8.8]
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, Dautphe@Str), ==, 0, Dautphe@Str), ['1'])
# top-8, score: 2.17, answer: [8.8]
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, Dautphe@Str), ==, 0, Dautphe@Str), ['-99', '-2'])
# top-9, score: 2.17, answer: ['Dautphe']
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, Dautphe@Str), ==, 0, Dautphe@Str), ['0'])
# top-10, score: 2.17, answer: ['Dautphe']
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, Dautphe@Str), ==, 0, Dautphe@Str), ['-1', '-2'])
# top-11, score: 2.17, answer: ['blue']
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, Dautphe@Str), ==, 0, Dautphe@Str), ['2'])
# top-12, score: 2.17, answer: ['blue']
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, Dautphe@Str), ==, 0, Dautphe@Str), ['-99', '-1'])
