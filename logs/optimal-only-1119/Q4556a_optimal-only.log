# parsed arguments: Namespace(benchmark='Q4556a', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='optimal-only', expected_only=False)
# loading benchmark...
# table keywords: {'division', 'cavaliers', 'color', 'x-san', '37', '41', '50', 'antonio', 'pacers', 'hawks', 'pistons', 'w', '16', 'central', 'blue', 'rockets', 'indiana', 'y-atlanta', 'spurs', 'x-houston', 'detroit', 'cleveland'}
# input type: [dtype('O'), dtype('int64'), dtype('O')]
# input is:
      Central Division   W color
0      y-Atlanta Hawks  50  blue
1    x-Houston Rockets  41  blue
2  x-San Antonio Spurs  41  blue
3  Cleveland Cavaliers  37  blue
4       Indiana Pacers  37  blue
5      Detroit Pistons  16  blue
# query is: Which two teams are tied for second place?
# expected output type:[dtype('O')]
# expected output is:
                 ANSWER
0     x-Houston Rockets
1  x-San Antonio Spurs.
# inferred DSL terminals:
  # ConstVal: ['<NULL>']
     # cmap: []
  # AggrFunc: ['<NULL>']
     # amap: []
  # NumFunc: ['<NULL>']
     # nmap: []
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 'x-San Antonio Spurs'}]
  # found 0 program(s)
# (t=0.07) i=1, candidate=[{'ANSWER': 'Cleveland Cavaliers'}]
  # found 0 program(s)
# (t=0.14) i=2, candidate=[{'ANSWER': 'Indiana Pacers'}]
  # found 0 program(s)
# (t=0.21) i=3, candidate=[{'ANSWER': 'Cleveland Cavaliers'}, {'ANSWER': 'x-San Antonio Spurs'}]
  # found 0 program(s)
# (t=0.28) i=4, candidate=[{'ANSWER': 'Indiana Pacers'}, {'ANSWER': 'x-San Antonio Spurs'}]
  # found 0 program(s)
# (t=0.35) i=5, candidate=[{'ANSWER': 'Cleveland Cavaliers'}, {'ANSWER': 'Indiana Pacers'}]
  # found 0 program(s)
# (t=0.42) i=6, candidate=[{'ANSWER': 'Cleveland Cavaliers'}, {'ANSWER': 'Indiana Pacers'}, {'ANSWER': 'x-San Antonio Spurs'}]
  # found 0 program(s)
# (t=0.49) i=7, candidate=[{'ANSWER': 'Cleveland Cavaliers'}, {'ANSWER': 'Detroit Pistons'}, {'ANSWER': 'x-San Antonio Spurs'}]
  # found 0 program(s)
# (t=0.56) i=8, candidate=[{'ANSWER': 'Detroit Pistons'}, {'ANSWER': 'Indiana Pacers'}, {'ANSWER': 'x-San Antonio Spurs'}]
  # found 0 program(s)
# (t=0.63) i=9, candidate=[{'ANSWER': 'Cleveland Cavaliers'}, {'ANSWER': 'Detroit Pistons'}, {'ANSWER': 'Indiana Pacers'}]
  # found 0 program(s)
# (t=0.70) i=10, candidate=[{'ANSWER': 'Detroit Pistons'}, {'ANSWER': 'x-San Antonio Spurs'}]
  # found 0 program(s)
# (t=0.77) i=11, candidate=[{'ANSWER': 'Cleveland Cavaliers'}, {'ANSWER': 'Detroit Pistons'}]
  # found 0 program(s)
# (t=0.83) i=12, candidate=[{'ANSWER': 'Detroit Pistons'}, {'ANSWER': 'Indiana Pacers'}]
  # found 0 program(s)
# (t=0.90) i=13, candidate=[{'ANSWER': 'Detroit Pistons'}]
  # found 0 program(s)
# (t=0.97) i=14, candidate=[{'ANSWER': 'Cleveland Cavaliers'}, {'ANSWER': 'x-Houston Rockets'}, {'ANSWER': 'x-San Antonio Spurs'}]
  # found 0 program(s)
# (t=1.04) i=15, candidate=[{'ANSWER': 'Indiana Pacers'}, {'ANSWER': 'x-Houston Rockets'}, {'ANSWER': 'x-San Antonio Spurs'}]
  # found 0 program(s)
# (t=1.11) i=16, candidate=[{'ANSWER': 'Cleveland Cavaliers'}, {'ANSWER': 'Indiana Pacers'}, {'ANSWER': 'x-Houston Rockets'}]
  # found 0 program(s)
# (t=1.18) i=17, candidate=[{'ANSWER': 'Detroit Pistons'}, {'ANSWER': 'x-Houston Rockets'}, {'ANSWER': 'x-San Antonio Spurs'}]
  # found 0 program(s)
# (t=1.24) i=18, candidate=[{'ANSWER': 'Cleveland Cavaliers'}, {'ANSWER': 'Detroit Pistons'}, {'ANSWER': 'x-Houston Rockets'}]
  # found 0 program(s)
# (t=1.31) i=19, candidate=[{'ANSWER': 'Detroit Pistons'}, {'ANSWER': 'Indiana Pacers'}, {'ANSWER': 'x-Houston Rockets'}]
  # found 0 program(s)
# (t=1.38) i=20, candidate=[{'ANSWER': 'Cleveland Cavaliers'}, {'ANSWER': 'x-San Antonio Spurs'}, {'ANSWER': 'y-Atlanta Hawks'}]
  # found 0 program(s)
# (t=1.45) i=21, candidate=[{'ANSWER': 'Indiana Pacers'}, {'ANSWER': 'x-San Antonio Spurs'}, {'ANSWER': 'y-Atlanta Hawks'}]
  # found 0 program(s)
# (t=1.52) i=22, candidate=[{'ANSWER': 'Cleveland Cavaliers'}, {'ANSWER': 'Indiana Pacers'}, {'ANSWER': 'y-Atlanta Hawks'}]
  # found 0 program(s)
# (t=1.59) i=23, candidate=[{'ANSWER': 'Detroit Pistons'}, {'ANSWER': 'x-San Antonio Spurs'}, {'ANSWER': 'y-Atlanta Hawks'}]
  # found 0 program(s)
# (t=1.66) i=24, candidate=[{'ANSWER': 'Cleveland Cavaliers'}, {'ANSWER': 'Detroit Pistons'}, {'ANSWER': 'y-Atlanta Hawks'}]
  # found 0 program(s)
# (t=1.73) i=25, candidate=[{'ANSWER': 'Detroit Pistons'}, {'ANSWER': 'Indiana Pacers'}, {'ANSWER': 'y-Atlanta Hawks'}]
  # found 0 program(s)
# (t=1.80) i=26, candidate=[{'ANSWER': 'x-Houston Rockets'}, {'ANSWER': 'x-San Antonio Spurs'}]
  # found 0 program(s)
# (t=1.87) i=27, candidate=[{'ANSWER': 'Cleveland Cavaliers'}, {'ANSWER': 'x-Houston Rockets'}]
  # found 0 program(s)
# (t=1.94) i=28, candidate=[{'ANSWER': 'Indiana Pacers'}, {'ANSWER': 'x-Houston Rockets'}]
  # found 0 program(s)
# (t=2.00) i=29, candidate=[{'ANSWER': 'Detroit Pistons'}, {'ANSWER': 'x-Houston Rockets'}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: [16, 37, 41, 50, 'Central Division', 'Cleveland Cavaliers', 'Detroit Pistons', 'Indiana Pacers', 'W', 'blue', 'color', 'x-Houston Rockets', 'x-San Antonio Spurs', 'y-Atlanta Hawks']
# (t=2.07) fallback i=0, candidate=[{'ANSWER': 16}]
  # found 0 program(s)
# (t=2.14) fallback i=1, candidate=[{'ANSWER': 37}]
  # found 0 program(s)
# (t=2.21) fallback i=2, candidate=[{'ANSWER': 41}]
  # found 0 program(s)
# (t=2.28) fallback i=3, candidate=[{'ANSWER': 50}]
  # found 0 program(s)
# (t=2.35) fallback i=4, candidate=[{'ANSWER': 'Central Division'}]
  # found 0 program(s)
# (t=2.42) fallback i=5, candidate=[{'ANSWER': 'Cleveland Cavaliers'}]
  # found 0 program(s)
# (t=2.49) fallback i=6, candidate=[{'ANSWER': 'Detroit Pistons'}]
  # found 0 program(s)
# (t=2.56) fallback i=7, candidate=[{'ANSWER': 'Indiana Pacers'}]
  # found 0 program(s)
# (t=2.64) fallback i=8, candidate=[{'ANSWER': 'W'}]
  # found 0 program(s)
# (t=2.71) fallback i=9, candidate=[{'ANSWER': 'blue'}]
  # found 0 program(s)
# (t=2.78) fallback i=10, candidate=[{'ANSWER': 'color'}]
  # found 0 program(s)
# (t=2.85) fallback i=11, candidate=[{'ANSWER': 'x-Houston Rockets'}]
  # found 0 program(s)
# (t=2.92) fallback i=12, candidate=[{'ANSWER': 'x-San Antonio Spurs'}]
  # found 0 program(s)
# (t=2.99) fallback i=13, candidate=[{'ANSWER': 'y-Atlanta Hawks'}]
  # found 0 program(s)
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: ['Cleveland Cavaliers', 'Detroit Pistons', 'Indiana Pacers', 'x-San Antonio Spurs']

# ========== review report ========== #
