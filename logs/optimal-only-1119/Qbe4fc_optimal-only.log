# parsed arguments: Namespace(benchmark='Qbe4fc', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='optimal-only', expected_only=False)
# loading benchmark...
# table keywords: {'32', '31', '26', '10', 'country', '28', '45', '9', '49', 'greece', '84', 'same', 'rep.', 'pakistan', 'germany', 'u.s.', '29', '43', 'france', '60', 'worsen', 'color', 'lebanon', '81', '44', '22', '37', '12', 'tunisia', '24', 'egypt', '47', 'opinion', 'improve', 'japan', 'russia', 'italy', 'mexico', '15', 'czech', '5', '35', 'india', 'jordan', '20', 'brazil', 'red', '23', '51', '13', 'poland', '18', '2', '83', 'blue', '75', '16', 'britain', '34', '27', '50', 'orange', 'percentage', 'remain', '40', '52', 'spain', '33', 'china', '25', 'turkey'}
# input type: [dtype('O'), dtype('O'), dtype('int64'), dtype('O')]
# input is:
       Country          opinion  percentage   color
0       Brazil          Improve          84    blue
1       Brazil  Remain the same          12  orange
2       Brazil           Worsen           5     red
3        China          Improve          83    blue
4        China  Remain the same           9  orange
..         ...              ...         ...     ...
58  Czech Rep.  Remain the same          27  orange
59  Czech Rep.           Worsen          60     red
60      Greece          Improve           9    blue
61      Greece  Remain the same          10  orange
62      Greece           Worsen          81     red

[63 rows x 4 columns]
# query is: Which countries have more than 50% of responses believing that the economy will improve?
# expected output type:[dtype('O')]
# expected output is:
    ANSWER
0   Brazil
1    China
2   Mexico
3  Tunisia
4     U.S.
# inferred DSL terminals:
  # ConstVal: ['Improve@Str', '50@Int', 'Country@Str', '<NULL>']
     # cmap: [(50, 50), ('countries', 'Country'), ('improve', 'Improve')]
  # AggrFunc: ['<NULL>']
     # amap: []
  # NumFunc: ['-', '<NULL>']
     # nmap: [('more', '-')]
  # BoolFunc: ['==', '>', '>=', '<NULL>']
     # bmap: [('more', '>='), (None, '=='), ('more', '>')]
  # IndFunc: ['<NULL>']
     # imap: []
# ====> fallback strategy (comparison) is triggered
  # [debug] high_values: [(41, 6), (37, 6), (34, 6), (34, 6), (33, 6), (32, 6), (28, 6), (28, 6), (28, 6), (25, 6)]
  # [debug] high_values (no dup.): [(41, 6), (37, 6), (34, 6), (34, 6), (33, 6), (32, 6), (28, 6), (28, 6), (28, 6), (25, 6)]
  # [debug] filtered low_values (no dup.): [(48, 3), (45, 3), (41, 3), (40, 3), (38, 3), (38, 3), (38, 3), (35, 3), (34, 3), (31, 3)]
  # [debug] fallback (comparison) answers are added
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 'Brazil'}]
  # found 0 program(s)
# (t=5.86) i=1, candidate=[{'ANSWER': 'China'}]
  # found 0 program(s)
# (t=11.95) i=2, candidate=[{'ANSWER': 'Tunisia'}]
  # found 0 program(s)
# (t=17.89) i=3, candidate=[{'ANSWER': 'Brazil'}, {'ANSWER': 'China'}]
  # found 0 program(s)
# (t=24.12) i=4, candidate=[{'ANSWER': 'Brazil'}, {'ANSWER': 'Tunisia'}]
  # found 0 program(s)
# (t=30.24) i=5, candidate=[{'ANSWER': 'China'}, {'ANSWER': 'Tunisia'}]
  # found 0 program(s)
# (t=36.11) i=6, candidate=[{'ANSWER': 'Brazil'}, {'ANSWER': 'Mexico'}]
  # found 0 program(s)
# (t=42.03) i=7, candidate=[{'ANSWER': 'China'}, {'ANSWER': 'Mexico'}]
  # found 0 program(s)
# (t=48.35) i=8, candidate=[{'ANSWER': 'Mexico'}, {'ANSWER': 'Tunisia'}]
  # found 0 program(s)
# (t=54.45) i=9, candidate=[{'ANSWER': 'Mexico'}]
  # found 0 program(s)
# (t=60.32) i=10, candidate=[{'ANSWER': 'Brazil'}, {'ANSWER': 'U.S.'}]
  # found 0 program(s)
# (t=66.58) i=11, candidate=[{'ANSWER': 'China'}, {'ANSWER': 'U.S.'}]
  # found 0 program(s)
# (t=72.42) i=12, candidate=[{'ANSWER': 'Tunisia'}, {'ANSWER': 'U.S.'}]
  # found 0 program(s)
# (t=78.62) i=13, candidate=[{'ANSWER': 'Mexico'}, {'ANSWER': 'U.S.'}]
  # found 0 program(s)
# (t=84.58) i=14, candidate=[{'ANSWER': 'U.S.'}]
  # found 0 program(s)
# (t=90.81) i=15, candidate=[{'ANSWER': 'Brazil'}, {'ANSWER': 'Pakistan'}]
  # found 0 program(s)
# (t=96.66) i=16, candidate=[{'ANSWER': 'China'}, {'ANSWER': 'Pakistan'}]
  # found 0 program(s)
# (t=102.87) i=17, candidate=[{'ANSWER': 'Pakistan'}, {'ANSWER': 'Tunisia'}]
  # found 0 program(s)
# (t=108.74) i=18, candidate=[{'ANSWER': 'Brazil'}, {'ANSWER': 'Spain'}]
  # found 0 program(s)
# (t=115.08) i=19, candidate=[{'ANSWER': 'Brazil'}, {'ANSWER': 'Egypt'}]
  # found 0 program(s)
# (t=120.96) i=20, candidate=[{'ANSWER': 'Brazil'}, {'ANSWER': 'Czech Rep.'}]
  # found 0 program(s)
# (t=127.14) i=21, candidate=[{'ANSWER': 'Brazil'}, {'ANSWER': 'Turkey'}]
  # found 0 program(s)
# (t=132.97) i=22, candidate=[{'ANSWER': 'Brazil'}, {'ANSWER': 'France'}]
  # found 0 program(s)
# (t=139.17) i=23, candidate=[{'ANSWER': 'China'}, {'ANSWER': 'Spain'}]
  # found 0 program(s)
# (t=145.03) i=24, candidate=[{'ANSWER': 'China'}, {'ANSWER': 'Egypt'}]
  # found 0 program(s)
# (t=151.26) i=25, candidate=[{'ANSWER': 'China'}, {'ANSWER': 'Czech Rep.'}]
  # found 0 program(s)
# (t=157.16) i=26, candidate=[{'ANSWER': 'China'}, {'ANSWER': 'Turkey'}]
  # found 0 program(s)
# (t=163.35) i=27, candidate=[{'ANSWER': 'China'}, {'ANSWER': 'France'}]
  # found 0 program(s)
# (t=169.21) i=28, candidate=[{'ANSWER': 'Spain'}, {'ANSWER': 'Tunisia'}]
  # found 0 program(s)
# (t=175.47) i=29, candidate=[{'ANSWER': 'Egypt'}, {'ANSWER': 'Tunisia'}]
  # found 0 program(s)
# (t=181.32) i=30, candidate=[{'ANSWER': 41}]
  # found 0 program(s)
# (t=187.51) i=31, candidate=[{'ANSWER': 37}]
  # found 0 program(s)
# (t=193.40) i=32, candidate=[{'ANSWER': 34}]
  # found 0 program(s)
# (t=199.66) i=33, candidate=[{'ANSWER': 34}]
  # found 0 program(s)
# (t=205.53) i=34, candidate=[{'ANSWER': 33}]
  # found 0 program(s)
# (t=211.74) i=35, candidate=[{'ANSWER': 32}]
  # found 0 program(s)
# (t=217.62) i=36, candidate=[{'ANSWER': 28}]
  # found 0 program(s)
# (t=223.91) i=37, candidate=[{'ANSWER': 28}]
  # found 0 program(s)
# (t=229.75) i=38, candidate=[{'ANSWER': 28}]
  # found 0 program(s)
# (t=235.96) i=39, candidate=[{'ANSWER': 25}]
  # found 0 program(s)
# (t=241.82) i=40, candidate=[{'ANSWER': 48}]
  # found 0 program(s)
# (t=248.12) i=41, candidate=[{'ANSWER': 45}]
  # found 0 program(s)
# (t=254.00) i=42, candidate=[{'ANSWER': 41}]
  # found 0 program(s)
# (t=260.22) i=43, candidate=[{'ANSWER': 40}]
  # found 0 program(s)
# (t=266.12) i=44, candidate=[{'ANSWER': 38}]
  # found 0 program(s)
# (t=272.33) i=45, candidate=[{'ANSWER': 38}]
  # found 0 program(s)
# (t=278.15) i=46, candidate=[{'ANSWER': 38}]
  # found 0 program(s)
# (t=284.36) i=47, candidate=[{'ANSWER': 35}]
  # found 0 program(s)
# (t=290.25) i=48, candidate=[{'ANSWER': 34}]
  # found 0 program(s)
# (t=296.52) i=49, candidate=[{'ANSWER': 31}]
  # found 0 program(s)
---------- timeout ----------
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: [10, 12, 13, 15, 16, 18, 2, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 40, 43, 44, 45, 47, 49, 5, 50, 51, 52, 60, 75, 81, 83, 84, 9, 'Brazil', 'Britain', 'China', 'Country', 'Czech Rep.', 'Egypt', 'France', 'Germany', 'Greece', 'Improve', 'India', 'Italy', 'Japan', 'Jordan', 'Lebanon', 'Mexico', 'Pakistan', 'Poland', 'Remain the same', 'Russia', 'Spain', 'Tunisia', 'Turkey', 'U.S.', 'Worsen', 'blue', 'color', 'opinion', 'orange', 'percentage', 'red']
# (t=300.00) fallback i=0, candidate=[{'ANSWER': 10}]
  # found 0 program(s)
---------- timeout ----------
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: ['Brazil', 'China', 'Mexico', 'Tunisia', 'U.S.']

# ========== review report ========== #
