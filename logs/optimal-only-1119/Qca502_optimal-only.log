# parsed arguments: Namespace(benchmark='Qca502', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='optimal-only', expected_only=False)
# loading benchmark...
# table keywords: {'detroit', 'blue', 'indiana', 'pacers', 'cleveland', '50', 'central', 'cavaliers', '37', 'w', 'hawks', 'rockets', 'antonio', 'x-houston', '41', 'division', 'spurs', 'x-san', '16', 'pistons', 'y-atlanta', 'color'}
# input type: [dtype('O'), dtype('int64'), dtype('O')]
# input is:
      Central Division   W color
0      y-Atlanta Hawks  50  blue
1    x-Houston Rockets  41  blue
2  x-San Antonio Spurs  41  blue
3  Cleveland Cavaliers  37  blue
4       Indiana Pacers  37  blue
5      Detroit Pistons  16  blue
# query is: How many teams are in the Central Division?
# expected output type:[dtype('int64')]
# expected output is:
   ANSWER
0       6
# inferred DSL terminals:
  # ConstVal: ['Central Division@Str', '<NULL>']
     # cmap: [('division', 'Central Division'), ('central', 'Central Division')]
  # AggrFunc: ['count', '<NULL>']
     # amap: [('how many', 'count')]
  # NumFunc: ['<NULL>']
     # nmap: []
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 1}]
  # found 0 program(s)
# (t=0.46) i=1, candidate=[{'ANSWER': 2}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: [16, 37, 41, 50, 'Central Division', 'Cleveland Cavaliers', 'Detroit Pistons', 'Indiana Pacers', 'W', 'blue', 'color', 'x-Houston Rockets', 'x-San Antonio Spurs', 'y-Atlanta Hawks']
# (t=0.92) fallback i=0, candidate=[{'ANSWER': 16}]
  # found 0 program(s)
# (t=1.38) fallback i=1, candidate=[{'ANSWER': 37}]
  # found 0 program(s)
# (t=1.85) fallback i=2, candidate=[{'ANSWER': 41}]
  # found 0 program(s)
# (t=2.32) fallback i=3, candidate=[{'ANSWER': 50}]
  # found 0 program(s)
# (t=2.78) fallback i=4, candidate=[{'ANSWER': 'Central Division'}]
  # found 0 program(s)
# (t=3.24) fallback i=5, candidate=[{'ANSWER': 'Cleveland Cavaliers'}]
  # found 0 program(s)
# (t=3.70) fallback i=6, candidate=[{'ANSWER': 'Detroit Pistons'}]
  # found 0 program(s)
# (t=4.16) fallback i=7, candidate=[{'ANSWER': 'Indiana Pacers'}]
  # found 0 program(s)
# (t=4.62) fallback i=8, candidate=[{'ANSWER': 'W'}]
  # found 0 program(s)
# (t=5.09) fallback i=9, candidate=[{'ANSWER': 'blue'}]
  # found 0 program(s)
# (t=5.56) fallback i=10, candidate=[{'ANSWER': 'color'}]
  # found 0 program(s)
# (t=6.02) fallback i=11, candidate=[{'ANSWER': 'x-Houston Rockets'}]
  # found 0 program(s)
# (t=6.49) fallback i=12, candidate=[{'ANSWER': 'x-San Antonio Spurs'}]
  # found 0 program(s)
# (t=6.96) fallback i=13, candidate=[{'ANSWER': 'y-Atlanta Hawks'}]
  # found 0 program(s)
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: [6]

# ========== review report ========== #
