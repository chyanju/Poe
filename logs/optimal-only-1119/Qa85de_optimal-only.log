# parsed arguments: Namespace(benchmark='Qa85de', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='optimal-only', expected_only=False)
# loading benchmark...
# table keywords: {'48', 'latino', 'blue', '38', 'white', 'african', 'race', '57', 'american', 'color', 'percent'}
# input type: [dtype('O'), dtype('int64'), dtype('O')]
# input is:
               Race  Percent color
0             White       57  blue
1            Latino       48  blue
2  African American       38  blue
# query is: What's the average marriage rate across all the three races?
# expected output type:[dtype('float64')]
# expected output is:
     ANSWER
0  47.66667
# inferred DSL terminals:
  # ConstVal: ['Race@Str', '<NULL>']
     # cmap: [('races', 'Race')]
  # AggrFunc: ['mean', 'sum', '<NULL>']
     # amap: [('average', 'mean'), ('all', 'sum')]
  # NumFunc: ['<NULL>']
     # nmap: []
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': '<type error>'}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: [38, 48, 57, 'African American', 'Latino', 'Percent', 'Race', 'White', 'blue', 'color']
# (t=0.35) fallback i=0, candidate=[{'ANSWER': 38}]
  # found 0 program(s)
# (t=0.69) fallback i=1, candidate=[{'ANSWER': 48}]
  # found 0 program(s)
# (t=1.04) fallback i=2, candidate=[{'ANSWER': 57}]
  # found 0 program(s)
# (t=1.39) fallback i=3, candidate=[{'ANSWER': 'African American'}]
  # found 0 program(s)
# (t=1.74) fallback i=4, candidate=[{'ANSWER': 'Latino'}]
  # found 0 program(s)
# (t=2.08) fallback i=5, candidate=[{'ANSWER': 'Percent'}]
  # found 0 program(s)
# (t=2.43) fallback i=6, candidate=[{'ANSWER': 'Race'}]
  # found 0 program(s)
# (t=2.78) fallback i=7, candidate=[{'ANSWER': 'White'}]
  # found 0 program(s)
# (t=3.12) fallback i=8, candidate=[{'ANSWER': 'blue'}]
  # found 0 program(s)
# (t=3.46) fallback i=9, candidate=[{'ANSWER': 'color'}]
  # found 0 program(s)
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: ['<type error>']

# ========== review report ========== #
