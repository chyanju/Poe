# parsed arguments: Namespace(benchmark='Q17e7e', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='optimal-only', expected_only=False)
# loading benchmark...
# table keywords: {'african', 'blue', '27', 'color', '25', '57', 'american', 'percent', 'white', 'latino', 'race'}
# input type: [dtype('O'), dtype('int64'), dtype('O')]
# input is:
               Race  Percent color
0             White       57  blue
1            Latino       27  blue
2  African American       25  blue
# query is: what color is used for the bars on the chart?
# expected output type:[dtype('O')]
# expected output is:
  ANSWER
0   Blue
# inferred DSL terminals:
  # ConstVal: ['color@Str', '<NULL>']
     # cmap: [('color', 'color')]
  # AggrFunc: ['<NULL>']
     # amap: []
  # NumFunc: ['<NULL>']
     # nmap: []
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': '<type error>'}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: [25, 27, 57, 'African American', 'Latino', 'Percent', 'Race', 'White', 'blue', 'color']
# (t=0.28) fallback i=0, candidate=[{'ANSWER': 25}]
  # found 0 program(s)
# (t=0.56) fallback i=1, candidate=[{'ANSWER': 27}]
  # found 0 program(s)
# (t=0.84) fallback i=2, candidate=[{'ANSWER': 57}]
  # found 0 program(s)
# (t=1.11) fallback i=3, candidate=[{'ANSWER': 'African American'}]
  # found 0 program(s)
# (t=1.39) fallback i=4, candidate=[{'ANSWER': 'Latino'}]
  # found 0 program(s)
# (t=1.66) fallback i=5, candidate=[{'ANSWER': 'Percent'}]
  # found 0 program(s)
# (t=1.94) fallback i=6, candidate=[{'ANSWER': 'Race'}]
  # found 0 program(s)
# (t=2.21) fallback i=7, candidate=[{'ANSWER': 'White'}]
  # found 0 program(s)
# (t=2.48) fallback i=8, candidate=[{'ANSWER': 'blue'}]
  # found 0 program(s)
# (t=2.75) fallback i=9, candidate=[{'ANSWER': 'color'}]
  # found 0 program(s)
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: ['<type error>']

# ========== review report ========== #
