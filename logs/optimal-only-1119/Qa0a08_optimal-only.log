# parsed arguments: Namespace(benchmark='Qa0a08', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='optimal-only', expected_only=False)
# loading benchmark...
# table keywords: {'4', 'change', '7', '-0.25', 'income', '5', '0.2', '0.1', '-1.0', 'blue', '9', '8', '-1.5', '3', '-0.9', '6', 'color', '-2.1', '%', '1', 'in', '-0.4', '10', '-1.8', 'rank', '2'}
# input type: [dtype('int64'), dtype('float64'), dtype('O')]
# input is:
   income rank  % change in income color
0            1               -1.80  blue
1            2               -1.50  blue
2            3               -1.00  blue
3            4               -0.90  blue
4            5               -0.40  blue
5            6                0.10  blue
6            7                0.20  blue
7            8                0.10  blue
8            9               -0.25  blue
9           10               -2.10  blue
# query is: What is the value of rank 3
# expected output type:[dtype('int64')]
# expected output is:
   ANSWER
0      -1
# inferred DSL terminals:
  # ConstVal: ['3@Int', 'income rank@Str', '<NULL>']
     # cmap: [(3, 3), ('rank', 'income rank')]
  # AggrFunc: ['<NULL>']
     # amap: []
  # NumFunc: ['<NULL>']
     # nmap: []
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 3}]
  # found 4 program(s)
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, 3@Int), ==, 0, 3@Int), ['0'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'income rank', 3], '==', 'income rank', 3], ['income rank']]
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, 3@Int), ==, 0, 3@Int), ['-1', '-2'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'income rank', 3], '==', 'income rank', 3], ['income rank']]
    # SelectCol(SelectRow1(@param0, ==, 0, 3@Int), ['0'])
      --> ['SelectCol', ['SelectRow1', 'input@0', '==', 'income rank', 3], ['income rank']]
    # SelectCol(SelectRow1(@param0, ==, 0, 3@Int), ['-1', '-2'])
      --> ['SelectCol', ['SelectRow1', 'input@0', '==', 'income rank', 3], ['income rank']]
# (t=0.89) i=1, candidate=[{'ANSWER': 2}]
  # found 0 program(s)
# (t=1.77) i=2, candidate=[{'ANSWER': 4}]
  # found 0 program(s)
# (t=2.65) i=3, candidate=[{'ANSWER': 1}]
  # found 0 program(s)

# ========== review report ========== #
# top-1, score: 1.43, answer: [3]
  # tprog: SelectCol(SelectRow1(@param0, ==, 0, 3@Int), ['0'])
# top-2, score: 1.43, answer: [3]
  # tprog: SelectCol(SelectRow1(@param0, ==, 0, 3@Int), ['-1', '-2'])
# top-3, score: 1.38, answer: [3]
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, 3@Int), ==, 0, 3@Int), ['0'])
# top-4, score: 1.38, answer: [3]
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, 3@Int), ==, 0, 3@Int), ['-1', '-2'])
