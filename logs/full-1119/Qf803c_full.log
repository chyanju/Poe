# parsed arguments: Namespace(benchmark='Qf803c', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'belize', '30', '46', 'guatemala', 'salvador', '182', 'country', '133', 'honduras', 'nicaragua', '101', 'blue', 'costa', 'rica', '61', 'amphibians', 'color', '183', 'panama', 'el'}
# input type: [dtype('O'), dtype('int64'), dtype('O')]
# input is:
       Country  Amphibians color
0       Belize          46  blue
1   Costa Rica         183  blue
2  El Salvador          30  blue
3    Guatemala         133  blue
4     Honduras         101  blue
5    Nicaragua          61  blue
6       Panama         182  blue
# query is: How many more Amphibians are located in Costa Rica versus El Salvador?
# expected output type:[dtype('int64')]
# expected output is:
   ANSWER
0     153
# inferred DSL terminals:
  # ConstVal: ['Costa Rica@Str', 'Amphibians@Str', 'El Salvador@Str', '<NULL>']
     # cmap: [('salvador', 'El Salvador'), ('rica', 'Costa Rica'), ('amphibians', 'Amphibians'), ('el', 'El Salvador'), ('costa', 'Costa Rica')]
  # AggrFunc: ['count', '<NULL>']
     # amap: [('how many', 'count')]
  # NumFunc: ['-', '<NULL>']
     # nmap: [('more', '-')]
  # BoolFunc: ['==', '>=', '>', '<NULL>']
     # bmap: [(None, '=='), ('more', '>='), ('more', '>')]
  # IndFunc: ['<NULL>']
     # imap: []
# ====> fallback strategy (comparison) is triggered
  # [debug] high_values: [(153, 9), (-153, 9)]
  # [debug] high_values (no dup.): [(153, 9), (-153, 9)]
  # [debug] filtered low_values (no dup.): [(152, 3), (137, 3), (122, 3), (103, 3), (82, 3), (71, 3), (50, 3), (31, 3), (16, 3), (1, 3)]
  # [debug] fallback (comparison) answers are added
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 183}]
  # found 2 program(s)
    # SelectCol(SelectRow1(@param0, ==, 0, Costa Rica@Str), ['1'])
      --> ['SelectCol', ['SelectRow1', 'input@0', '==', 'Country', 'Costa Rica'], ['Amphibians']]
    # SelectCol(SelectRow1(@param0, ==, 0, Costa Rica@Str), ['-99', '-2'])
      --> ['SelectCol', ['SelectRow1', 'input@0', '==', 'Country', 'Costa Rica'], ['Amphibians']]
# (t=1.88) i=1, candidate=[{'ANSWER': 30}]
  # found 2 program(s)
    # SelectCol(SelectRow1(@param0, ==, 0, El Salvador@Str), ['1'])
      --> ['SelectCol', ['SelectRow1', 'input@0', '==', 'Country', 'El Salvador'], ['Amphibians']]
    # SelectCol(SelectRow1(@param0, ==, 0, El Salvador@Str), ['-99', '-2'])
      --> ['SelectCol', ['SelectRow1', 'input@0', '==', 'Country', 'El Salvador'], ['Amphibians']]
# (t=3.73) i=2, candidate=[{'ANSWER': 213}]
  # found 0 program(s)
# (t=5.42) i=3, candidate=[{'ANSWER': 346}]
  # found 0 program(s)
# (t=7.11) i=4, candidate=[{'ANSWER': 316}]
  # found 0 program(s)
# (t=8.78) i=5, candidate=[{'ANSWER': 163}]
  # found 0 program(s)
# (t=10.46) i=6, candidate=[{'ANSWER': 133}]
  # found 0 program(s)
# (t=12.31) i=7, candidate=[{'ANSWER': 153}]
  # found 1 program(s)
    # Contrast(@param0, -, 0, Costa Rica@Str, El Salvador@Str, 1)
      --> ['Contrast', 'input@0', '-', 'Country', 'Costa Rica', 'El Salvador', 'Amphibians']
# (t=13.99) i=8, candidate=[{'ANSWER': -153}]
  # found 1 program(s)
    # Contrast(@param0, -, 0, El Salvador@Str, Costa Rica@Str, 1)
      --> ['Contrast', 'input@0', '-', 'Country', 'El Salvador', 'Costa Rica', 'Amphibians']
# (t=15.66) i=9, candidate=[{'ANSWER': 152}]
  # found 0 program(s)
# (t=17.33) i=10, candidate=[{'ANSWER': 137}]
  # found 0 program(s)
# (t=19.02) i=11, candidate=[{'ANSWER': 122}]
  # found 0 program(s)
# (t=20.70) i=12, candidate=[{'ANSWER': 103}]
  # found 0 program(s)
# (t=22.37) i=13, candidate=[{'ANSWER': 82}]
  # found 0 program(s)
# (t=24.05) i=14, candidate=[{'ANSWER': 71}]
  # found 0 program(s)
# (t=25.73) i=15, candidate=[{'ANSWER': 50}]
  # found 0 program(s)
# (t=27.39) i=16, candidate=[{'ANSWER': 31}]
  # found 0 program(s)
# (t=29.08) i=17, candidate=[{'ANSWER': 16}]
  # found 0 program(s)
# (t=30.75) i=18, candidate=[{'ANSWER': 1}]
  # found 6 program(s)
    # Summarize(SelectRow1(@param0, ==, 0, Costa Rica@Str), count, 0)
      --> ['Summarize', ['SelectRow1', 'input@0', '==', 'Country', 'Costa Rica'], 'count', 'Country']
    # Summarize(SelectRow1(@param0, ==, 0, Costa Rica@Str), count, 1)
      --> ['Summarize', ['SelectRow1', 'input@0', '==', 'Country', 'Costa Rica'], 'count', 'Amphibians']
    # Summarize(SelectRow1(@param0, ==, 0, Costa Rica@Str), count, 2)
      --> ['Summarize', ['SelectRow1', 'input@0', '==', 'Country', 'Costa Rica'], 'count', 'color']
    # Summarize(SelectRow1(@param0, ==, 0, El Salvador@Str), count, 0)
      --> ['Summarize', ['SelectRow1', 'input@0', '==', 'Country', 'El Salvador'], 'count', 'Country']
    # Summarize(SelectRow1(@param0, ==, 0, El Salvador@Str), count, 1)
      --> ['Summarize', ['SelectRow1', 'input@0', '==', 'Country', 'El Salvador'], 'count', 'Amphibians']
    # Summarize(SelectRow1(@param0, ==, 0, El Salvador@Str), count, 2)
      --> ['Summarize', ['SelectRow1', 'input@0', '==', 'Country', 'El Salvador'], 'count', 'color']

# ========== review report ========== #
# top-1, score: 2.64, answer: [153]
  # tprog: Contrast(@param0, -, 0, Costa Rica@Str, El Salvador@Str, 1)
# top-2, score: 2.64, answer: [-153]
  # tprog: Contrast(@param0, -, 0, El Salvador@Str, Costa Rica@Str, 1)
# top-3, score: 2.46, answer: [1]
  # tprog: Summarize(SelectRow1(@param0, ==, 0, Costa Rica@Str), count, 1)
# top-4, score: 2.46, answer: [1]
  # tprog: Summarize(SelectRow1(@param0, ==, 0, El Salvador@Str), count, 1)
# top-5, score: 2.39, answer: [183]
  # tprog: SelectCol(SelectRow1(@param0, ==, 0, Costa Rica@Str), ['1'])
# top-6, score: 2.39, answer: [183]
  # tprog: SelectCol(SelectRow1(@param0, ==, 0, Costa Rica@Str), ['-99', '-2'])
# top-7, score: 2.39, answer: [30]
  # tprog: SelectCol(SelectRow1(@param0, ==, 0, El Salvador@Str), ['1'])
# top-8, score: 2.39, answer: [30]
  # tprog: SelectCol(SelectRow1(@param0, ==, 0, El Salvador@Str), ['-99', '-2'])
# top-9, score: 2.38, answer: [1]
  # tprog: Summarize(SelectRow1(@param0, ==, 0, Costa Rica@Str), count, 0)
# top-10, score: 2.38, answer: [1]
  # tprog: Summarize(SelectRow1(@param0, ==, 0, Costa Rica@Str), count, 2)
# top-11, score: 2.38, answer: [1]
  # tprog: Summarize(SelectRow1(@param0, ==, 0, El Salvador@Str), count, 0)
# top-12, score: 2.38, answer: [1]
  # tprog: Summarize(SelectRow1(@param0, ==, 0, El Salvador@Str), count, 2)
