# parsed arguments: Namespace(benchmark='Q4bf2c', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'greece', 'red', 'turkey', 'japan', '84', '22', '35', '16', '25', '75', 'opinion', '52', '49', '31', 'jordan', 'egypt', 'blue', 'pakistan', 'czech', '24', 'spain', '81', '29', '5', 'country', 'china', 'russia', '23', 'germany', '10', '43', '9', 'color', 'rep.', 'same', '51', 'u.s.', '44', 'remain', '12', 'lebanon', '2', 'mexico', '32', '47', '33', 'orange', 'percentage', '45', '13', '27', '18', '28', 'france', 'tunisia', '26', '37', 'italy', 'india', '15', '60', 'britain', 'poland', '50', '34', 'improve', 'worsen', '20', '83', '40', 'brazil'}
# input type: [dtype('O'), dtype('O'), dtype('int64'), dtype('O')]
# input is:
       Country          opinion  percentage   color
0       Brazil          Improve          84    blue
1       Brazil  Remain the same          12  orange
2       Brazil           Worsen           5     red
3        China          Improve          83    blue
4        China  Remain the same           9  orange
..         ...              ...         ...     ...
58  Czech Rep.  Remain the same          27  orange
59  Czech Rep.           Worsen          60     red
60      Greece          Improve           9    blue
61      Greece  Remain the same          10  orange
62      Greece           Worsen          81     red

[63 rows x 4 columns]
# query is: how many countries in Asia will have their economy improved based on majority votes?
# expected output type:[dtype('int64')]
# expected output is:
   ANSWER
0       1
# inferred DSL terminals:
  # ConstVal: ['Improve@Str', 'Country@Str', '<NULL>']
     # cmap: [('countries', 'Country'), ('improved', 'Improve')]
  # AggrFunc: ['count', '<NULL>']
     # amap: [('how many', 'count')]
  # NumFunc: ['<NULL>']
     # nmap: []
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 1}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: [10, 12, 13, 15, 16, 18, 2, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 40, 43, 44, 45, 47, 49, 5, 50, 51, 52, 60, 75, 81, 83, 84, 9, 'Brazil', 'Britain', 'China', 'Country', 'Czech Rep.', 'Egypt', 'France', 'Germany', 'Greece', 'Improve', 'India', 'Italy', 'Japan', 'Jordan', 'Lebanon', 'Mexico', 'Pakistan', 'Poland', 'Remain the same', 'Russia', 'Spain', 'Tunisia', 'Turkey', 'U.S.', 'Worsen', 'blue', 'color', 'opinion', 'orange', 'percentage', 'red']
# (t=1.24) fallback i=0, candidate=[{'ANSWER': 10}]
  # found 0 program(s)
# (t=2.77) fallback i=1, candidate=[{'ANSWER': 12}]
  # found 0 program(s)
# (t=4.26) fallback i=2, candidate=[{'ANSWER': 13}]
  # found 0 program(s)
# (t=5.72) fallback i=3, candidate=[{'ANSWER': 15}]
  # found 0 program(s)
# (t=7.18) fallback i=4, candidate=[{'ANSWER': 16}]
  # found 0 program(s)
# (t=8.62) fallback i=5, candidate=[{'ANSWER': 18}]
  # found 0 program(s)
# (t=10.07) fallback i=6, candidate=[{'ANSWER': 2}]
  # found 0 program(s)
# (t=11.53) fallback i=7, candidate=[{'ANSWER': 20}]
  # found 0 program(s)
# (t=12.97) fallback i=8, candidate=[{'ANSWER': 22}]
  # found 0 program(s)
# (t=14.42) fallback i=9, candidate=[{'ANSWER': 23}]
  # found 0 program(s)
# (t=15.88) fallback i=10, candidate=[{'ANSWER': 24}]
  # found 0 program(s)
# (t=17.36) fallback i=11, candidate=[{'ANSWER': 25}]
  # found 0 program(s)
# (t=18.86) fallback i=12, candidate=[{'ANSWER': 26}]
  # found 0 program(s)
# (t=20.34) fallback i=13, candidate=[{'ANSWER': 27}]
  # found 0 program(s)
# (t=21.77) fallback i=14, candidate=[{'ANSWER': 28}]
  # found 0 program(s)
# (t=23.21) fallback i=15, candidate=[{'ANSWER': 29}]
  # found 0 program(s)
# (t=24.66) fallback i=16, candidate=[{'ANSWER': 31}]
  # found 0 program(s)
# (t=26.10) fallback i=17, candidate=[{'ANSWER': 32}]
  # found 0 program(s)
# (t=27.57) fallback i=18, candidate=[{'ANSWER': 33}]
  # found 0 program(s)
# (t=29.04) fallback i=19, candidate=[{'ANSWER': 34}]
  # found 0 program(s)
# (t=30.53) fallback i=20, candidate=[{'ANSWER': 35}]
  # found 0 program(s)
# (t=31.98) fallback i=21, candidate=[{'ANSWER': 37}]
  # found 0 program(s)
# (t=33.42) fallback i=22, candidate=[{'ANSWER': 40}]
  # found 0 program(s)
# (t=34.87) fallback i=23, candidate=[{'ANSWER': 43}]
  # found 0 program(s)
# (t=36.33) fallback i=24, candidate=[{'ANSWER': 44}]
  # found 0 program(s)
# (t=37.78) fallback i=25, candidate=[{'ANSWER': 45}]
  # found 0 program(s)
# (t=39.24) fallback i=26, candidate=[{'ANSWER': 47}]
  # found 0 program(s)
# (t=40.73) fallback i=27, candidate=[{'ANSWER': 49}]
  # found 0 program(s)
# (t=42.47) fallback i=28, candidate=[{'ANSWER': 5}]
  # found 0 program(s)
# (t=43.96) fallback i=29, candidate=[{'ANSWER': 50}]
  # found 0 program(s)
# (t=45.44) fallback i=30, candidate=[{'ANSWER': 51}]
  # found 0 program(s)
# (t=46.91) fallback i=31, candidate=[{'ANSWER': 52}]
  # found 0 program(s)
# (t=48.40) fallback i=32, candidate=[{'ANSWER': 60}]
  # found 0 program(s)
# (t=49.88) fallback i=33, candidate=[{'ANSWER': 75}]
  # found 0 program(s)
# (t=51.35) fallback i=34, candidate=[{'ANSWER': 81}]
  # found 0 program(s)
# (t=52.83) fallback i=35, candidate=[{'ANSWER': 83}]
  # found 0 program(s)
# (t=54.39) fallback i=36, candidate=[{'ANSWER': 84}]
  # found 0 program(s)
# (t=55.87) fallback i=37, candidate=[{'ANSWER': 9}]
  # found 0 program(s)
# (t=57.31) fallback i=38, candidate=[{'ANSWER': 'Brazil'}]
  # found 0 program(s)
# (t=58.75) fallback i=39, candidate=[{'ANSWER': 'Britain'}]
  # found 0 program(s)
# (t=60.22) fallback i=40, candidate=[{'ANSWER': 'China'}]
  # found 0 program(s)
# (t=61.70) fallback i=41, candidate=[{'ANSWER': 'Country'}]
  # found 0 program(s)
# (t=62.90) fallback i=42, candidate=[{'ANSWER': 'Czech Rep.'}]
  # found 0 program(s)
# (t=64.37) fallback i=43, candidate=[{'ANSWER': 'Egypt'}]
  # found 0 program(s)
# (t=65.83) fallback i=44, candidate=[{'ANSWER': 'France'}]
  # found 0 program(s)
# (t=67.30) fallback i=45, candidate=[{'ANSWER': 'Germany'}]
  # found 0 program(s)
# (t=68.77) fallback i=46, candidate=[{'ANSWER': 'Greece'}]
  # found 0 program(s)
# (t=70.23) fallback i=47, candidate=[{'ANSWER': 'Improve'}]
  # found 0 program(s)
# (t=71.73) fallback i=48, candidate=[{'ANSWER': 'India'}]
  # found 0 program(s)
# (t=73.22) fallback i=49, candidate=[{'ANSWER': 'Italy'}]
  # found 0 program(s)
# (t=74.70) fallback i=50, candidate=[{'ANSWER': 'Japan'}]
  # found 0 program(s)
# (t=76.20) fallback i=51, candidate=[{'ANSWER': 'Jordan'}]
  # found 0 program(s)
# (t=77.65) fallback i=52, candidate=[{'ANSWER': 'Lebanon'}]
  # found 0 program(s)
# (t=79.11) fallback i=53, candidate=[{'ANSWER': 'Mexico'}]
  # found 0 program(s)
# (t=80.57) fallback i=54, candidate=[{'ANSWER': 'Pakistan'}]
  # found 0 program(s)
# (t=82.04) fallback i=55, candidate=[{'ANSWER': 'Poland'}]
  # found 0 program(s)
# (t=83.49) fallback i=56, candidate=[{'ANSWER': 'Remain the same'}]
  # found 0 program(s)
# (t=84.94) fallback i=57, candidate=[{'ANSWER': 'Russia'}]
  # found 0 program(s)
# (t=86.40) fallback i=58, candidate=[{'ANSWER': 'Spain'}]
  # found 0 program(s)
# (t=87.88) fallback i=59, candidate=[{'ANSWER': 'Tunisia'}]
  # found 0 program(s)
# (t=89.33) fallback i=60, candidate=[{'ANSWER': 'Turkey'}]
  # found 0 program(s)
# (t=90.80) fallback i=61, candidate=[{'ANSWER': 'U.S.'}]
  # found 0 program(s)
# (t=92.25) fallback i=62, candidate=[{'ANSWER': 'Worsen'}]
  # found 0 program(s)
# (t=94.01) fallback i=63, candidate=[{'ANSWER': 'blue'}]
  # found 0 program(s)
# (t=95.47) fallback i=64, candidate=[{'ANSWER': 'color'}]
  # found 0 program(s)
# (t=96.64) fallback i=65, candidate=[{'ANSWER': 'opinion'}]
  # found 0 program(s)
# (t=97.81) fallback i=66, candidate=[{'ANSWER': 'orange'}]
  # found 0 program(s)
# (t=99.24) fallback i=67, candidate=[{'ANSWER': 'percentage'}]
  # found 0 program(s)
# (t=100.41) fallback i=68, candidate=[{'ANSWER': 'red'}]
  # found 0 program(s)
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: [3]

# ========== review report ========== #
