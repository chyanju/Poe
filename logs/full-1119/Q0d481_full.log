# parsed arguments: Namespace(benchmark='Q0d481', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'516.031', '2007', '2011', '2014', '186.108', 'blue', '262.799', '2000', '167.543', '184.211', '2015', '2013', 'cases', '2004', '125.734', '223.809', '533.909', '149.338', 'color', '2008', '325.044', '2012', '174.935', '1998', '456.216', '166.061', '1999', '2003', '408.037', '129.505', '2017', 'year', '168.827', '2006', '2016', '297.551', '2009', '123.061', '2001', '344.23', '2005', '169.598', '2002', '2010'}
# input type: [dtype('float64'), dtype('int64'), dtype('O')]
# input is:
      cases  year color
0   129.505  1998  blue
1   123.061  1999  blue
2   125.734  2000  blue
3   149.338  2001  blue
4   166.061  2002  blue
5   169.598  2003  blue
6   167.543  2004  blue
7   184.211  2005  blue
8   168.827  2006  blue
9   174.935  2007  blue
10  186.108  2008  blue
11  223.809  2009  blue
12  262.799  2010  blue
13  297.551  2011  blue
14  325.044  2012  blue
15  344.230  2013  blue
16  408.037  2014  blue
17  456.216  2015  blue
18  516.031  2016  blue
19  533.909  2017  blue
# query is: In 2009 how many more pending cases was there than in 1999?
# expected output type:[dtype('float64')]
# expected output is:
    ANSWER
0  100.748
# inferred DSL terminals:
  # ConstVal: ['cases@Str', '2009@Int', '1999@Int', '<NULL>']
     # cmap: [(2009, 2009), ('cases', 'cases'), (1999, 1999)]
  # AggrFunc: ['count', '<NULL>']
     # amap: [('how many', 'count')]
  # NumFunc: ['-', '<NULL>']
     # nmap: [('more', '-')]
  # BoolFunc: ['==', '>=', '>', '<NULL>']
     # bmap: [('more', '>'), (None, '=='), ('more', '>=')]
  # IndFunc: ['<NULL>']
     # imap: []
# ====> fallback strategy (comparison) is triggered
  # [debug] high_values: [(1885.939, 4), (1775.191, 4), (100.74799999999999, 4), (10.0, 4), (-10.0, 4), (-100.74799999999999, 4), (-1775.191, 4), (-1885.939, 4)]
  # [debug] high_values (no dup.): [(1885.939, 4), (1775.191, 4), (100.74799999999999, 4), (10.0, 4), (-10.0, 4), (-100.74799999999999, 4), (-1775.191, 4), (-1885.939, 4)]
  # [debug] filtered low_values (no dup.): [(1893.939, 2), (1892.939, 2), (1891.939, 2), (1890.939, 2), (1889.939, 2), (1888.939, 2), (1887.939, 2), (1886.939, 2), (1884.939, 2), (1883.939, 2)]
  # [debug] fallback (comparison) answers are added
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 1}]
  # found 6 program(s)
    # Summarize(SelectRow1(@param0, ==, 1, 2009@Int), count, 0)
      --> ['Summarize', ['SelectRow1', 'input@0', '==', 'year', 2009], 'count', 'cases']
    # Summarize(SelectRow1(@param0, ==, 1, 2009@Int), count, 1)
      --> ['Summarize', ['SelectRow1', 'input@0', '==', 'year', 2009], 'count', 'year']
    # Summarize(SelectRow1(@param0, ==, 1, 2009@Int), count, 2)
      --> ['Summarize', ['SelectRow1', 'input@0', '==', 'year', 2009], 'count', 'color']
    # Summarize(SelectRow1(@param0, ==, 1, 1999@Int), count, 0)
      --> ['Summarize', ['SelectRow1', 'input@0', '==', 'year', 1999], 'count', 'cases']
    # Summarize(SelectRow1(@param0, ==, 1, 1999@Int), count, 1)
      --> ['Summarize', ['SelectRow1', 'input@0', '==', 'year', 1999], 'count', 'year']
    # Summarize(SelectRow1(@param0, ==, 1, 1999@Int), count, 2)
      --> ['Summarize', ['SelectRow1', 'input@0', '==', 'year', 1999], 'count', 'color']
# (t=4.94) i=1, candidate=[{'ANSWER': 1885.939}]
  # found 0 program(s)
# (t=9.90) i=2, candidate=[{'ANSWER': 1775.191}]
  # found 0 program(s)
# (t=14.86) i=3, candidate=[{'ANSWER': 100.74799999999999}]
  # found 2 program(s)
    # Contrast(SelectRow1(@param0, >=, 1, 1999@Int), -, 1, 2009@Int, 1999@Int, 0)
      --> ['Contrast', ['SelectRow1', 'input@0', '>=', 'year', 1999], '-', 'year', 2009, 1999, 'cases']
    # Contrast(@param0, -, 1, 2009@Int, 1999@Int, 0)
      --> ['Contrast', 'input@0', '-', 'year', 2009, 1999, 'cases']
# (t=19.79) i=4, candidate=[{'ANSWER': 10.0}]
  # found 0 program(s)
# (t=24.72) i=5, candidate=[{'ANSWER': -10.0}]
  # found 0 program(s)
# (t=29.70) i=6, candidate=[{'ANSWER': -100.74799999999999}]
  # found 2 program(s)
    # Contrast(SelectRow1(@param0, >=, 1, 1999@Int), -, 1, 1999@Int, 2009@Int, 0)
      --> ['Contrast', ['SelectRow1', 'input@0', '>=', 'year', 1999], '-', 'year', 1999, 2009, 'cases']
    # Contrast(@param0, -, 1, 1999@Int, 2009@Int, 0)
      --> ['Contrast', 'input@0', '-', 'year', 1999, 2009, 'cases']
# (t=34.72) i=7, candidate=[{'ANSWER': -1775.191}]
  # found 0 program(s)
# (t=39.67) i=8, candidate=[{'ANSWER': -1885.939}]
  # found 0 program(s)
# (t=44.58) i=9, candidate=[{'ANSWER': 1893.939}]
  # found 0 program(s)
# (t=49.47) i=10, candidate=[{'ANSWER': 1892.939}]
  # found 0 program(s)
# (t=54.37) i=11, candidate=[{'ANSWER': 1891.939}]
  # found 0 program(s)
# (t=59.23) i=12, candidate=[{'ANSWER': 1890.939}]
  # found 0 program(s)
# (t=64.07) i=13, candidate=[{'ANSWER': 1889.939}]
  # found 0 program(s)
# (t=68.88) i=14, candidate=[{'ANSWER': 1888.939}]
  # found 0 program(s)
# (t=73.68) i=15, candidate=[{'ANSWER': 1887.939}]
  # found 0 program(s)
# (t=78.53) i=16, candidate=[{'ANSWER': 1886.939}]
  # found 0 program(s)
# (t=83.45) i=17, candidate=[{'ANSWER': 1884.939}]
  # found 0 program(s)
# (t=88.36) i=18, candidate=[{'ANSWER': 1883.939}]
  # found 0 program(s)

# ========== review report ========== #
# top-1, score: 1.48, answer: [100.74799999999999]
  # tprog: Contrast(@param0, -, 1, 2009@Int, 1999@Int, 0)
# top-2, score: 1.48, answer: [-100.74799999999999]
  # tprog: Contrast(@param0, -, 1, 1999@Int, 2009@Int, 0)
# top-3, score: 1.42, answer: [100.74799999999999]
  # tprog: Contrast(SelectRow1(@param0, >=, 1, 1999@Int), -, 1, 2009@Int, 1999@Int, 0)
# top-4, score: 1.42, answer: [-100.74799999999999]
  # tprog: Contrast(SelectRow1(@param0, >=, 1, 1999@Int), -, 1, 1999@Int, 2009@Int, 0)
# top-5, score: 1.38, answer: [1]
  # tprog: Summarize(SelectRow1(@param0, ==, 1, 2009@Int), count, 0)
# top-6, score: 1.38, answer: [1]
  # tprog: Summarize(SelectRow1(@param0, ==, 1, 1999@Int), count, 0)
# top-7, score: 1.29, answer: [1]
  # tprog: Summarize(SelectRow1(@param0, ==, 1, 2009@Int), count, 1)
# top-8, score: 1.29, answer: [1]
  # tprog: Summarize(SelectRow1(@param0, ==, 1, 2009@Int), count, 2)
# top-9, score: 1.29, answer: [1]
  # tprog: Summarize(SelectRow1(@param0, ==, 1, 1999@Int), count, 1)
# top-10, score: 1.29, answer: [1]
  # tprog: Summarize(SelectRow1(@param0, ==, 1, 1999@Int), count, 2)
