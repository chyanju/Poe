# parsed arguments: Namespace(benchmark='Q859c7', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'50-54', 'aged', '79.52', '65-69', 'red', '80', 'all', '83.92', '67.89', 'percentage', 'group', '65.69', '70.09', 'gender', '80.77', 'blue', '73.55', '85.49', 'and', '75-79', '16', '75.43', '60-64', '75.75', '72.6', '72.92', '70-74', '82.66', '84.86', '83.6', '55-59', 'over', 'orange', '75.12', 'men', 'women', 'color', '78.57', '68.83', '63.8', '84.23', 'age'}
# input type: [dtype('O'), dtype('O'), dtype('float64'), dtype('O')]
# input is:
               Age group gender  Percentage   color
0                  60-64  Women       75.75     red
1                  60-64    All       75.43    blue
2                  60-64    Men       75.12  orange
3   All aged 16 and over  Women       67.89     red
4   All aged 16 and over    All       65.69    blue
5   All aged 16 and over    Men       63.80  orange
6                  70-74  Women       85.49     red
7                  70-74    All       83.92    blue
8                  70-74    Men       82.66  orange
9                  75-79  Women       84.86     red
10                 75-79    All       84.23    blue
11                 75-79    Men       83.60  orange
12                 55-59  Women       73.55     red
13                 55-59    All       72.92    blue
14                 55-59    Men       72.60  orange
15           80 and over  Women       84.23     red
16           80 and over    All       83.92    blue
17           80 and over    Men       83.92  orange
18                 50-54  Women       70.09     red
19                 50-54    All       68.83    blue
20                 50-54    Men       67.89  orange
21                 65-69  Women       80.77     red
22                 65-69    All       79.52    blue
23                 65-69    Men       78.57  orange
# query is: Did more overall people feel welcoming in age groups 16 and over or 60-64?
# expected output type:[dtype('O')]
# expected output is:
  ANSWER
0  60-64
# inferred DSL terminals:
  # ConstVal: ['60-64@Str', 'Age group@Str', '80 and over@Str', 'All aged 16 and over@Str', '<NULL>']
     # cmap: [(64, '60-64'), (60, '60-64'), ('over', '80 and over'), ('over', 'All aged 16 and over'), ('and', '80 and over'), (16, 'All aged 16 and over'), ('and', 'All aged 16 and over'), ('groups', 'Age group'), ('age', 'Age group')]
  # AggrFunc: ['sum', '<NULL>']
     # amap: [('overall', 'sum')]
  # NumFunc: ['-', '<NULL>']
     # nmap: [('more', '-')]
  # BoolFunc: ['>', '==', '>=', '<NULL>']
     # bmap: [('more', '>='), ('more', '>'), (None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# ====> fallback strategy (comparison) is triggered
  # [debug] high_values: [(4.090000000000003, 16), (2.200000000000003, 16), (1.8900000000000006, 16), (-1.8900000000000006, 16), (-2.200000000000003, 16), (-4.090000000000003, 16), (20.430000000000007, 12), (20.120000000000005, 12), (20.120000000000005, 12), (18.540000000000006, 12)]
  # [debug] high_values (no dup.): [(4.090000000000003, 16), (2.200000000000003, 16), (1.8900000000000006, 16), (-1.8900000000000006, 16), (-2.200000000000003, 16), (-4.090000000000003, 16), (20.430000000000007, 12), (20.120000000000005, 12), (20.120000000000005, 12), (18.540000000000006, 12)]
  # [debug] filtered low_values (no dup.): [(21.689999999999998, 4), (21.060000000000002, 4), (20.430000000000007, 4), (20.120000000000005, 4), (19.799999999999997, 4), (19.799999999999997, 4), (19.17, 4), (18.86, 4), (18.540000000000006, 4), (18.230000000000004, 4)]
  # [debug] fallback (comparison) answers are added
# ====> fallback strategy (selection) is triggered
  # [debug] fallback (selection) answers: ['60-64', 'All aged 16 and over', 'Age group', '80 and over']
  # [debug] fallback (selection) answers (no dup.): ['Age group']
  # [debug] 1 fallback (selection) answers are added
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': '60-64'}]
  # found 0 program(s)
# (t=6.40) i=1, candidate=[{'ANSWER': '65-69'}]
  # found 0 program(s)
# (t=12.77) i=2, candidate=[{'ANSWER': '80 and over'}]
  # found 0 program(s)
# (t=19.12) i=3, candidate=[{'ANSWER': '50-54'}]
  # found 0 program(s)
# (t=25.51) i=4, candidate=[{'ANSWER': '70-74'}]
  # found 0 program(s)
# (t=31.86) i=5, candidate=[{'ANSWER': '55-59'}]
  # found 0 program(s)
# (t=38.15) i=6, candidate=[{'ANSWER': 'All aged 16 and over'}]
  # found 0 program(s)
# (t=44.51) i=7, candidate=[{'ANSWER': '75-79'}]
  # found 0 program(s)
# (t=50.86) i=8, candidate=[{'ANSWER': 4.090000000000003}]
  # found 0 program(s)
# (t=56.32) i=9, candidate=[{'ANSWER': 2.200000000000003}]
  # found 0 program(s)
# (t=61.78) i=10, candidate=[{'ANSWER': 1.8900000000000006}]
  # found 0 program(s)
# (t=67.19) i=11, candidate=[{'ANSWER': -1.8900000000000006}]
  # found 0 program(s)
# (t=72.57) i=12, candidate=[{'ANSWER': -2.200000000000003}]
  # found 0 program(s)
# (t=78.01) i=13, candidate=[{'ANSWER': -4.090000000000003}]
  # found 0 program(s)
# (t=83.55) i=14, candidate=[{'ANSWER': 20.430000000000007}]
  # found 0 program(s)
# (t=89.05) i=15, candidate=[{'ANSWER': 20.120000000000005}]
  # found 0 program(s)
# (t=94.60) i=16, candidate=[{'ANSWER': 20.120000000000005}]
  # found 0 program(s)
# (t=100.11) i=17, candidate=[{'ANSWER': 18.540000000000006}]
  # found 0 program(s)
# (t=105.55) i=18, candidate=[{'ANSWER': 21.689999999999998}]
  # found 0 program(s)
# (t=111.08) i=19, candidate=[{'ANSWER': 21.060000000000002}]
  # found 0 program(s)
# (t=116.61) i=20, candidate=[{'ANSWER': 20.430000000000007}]
  # found 0 program(s)
# (t=122.29) i=21, candidate=[{'ANSWER': 20.120000000000005}]
  # found 0 program(s)
# (t=128.07) i=22, candidate=[{'ANSWER': 19.799999999999997}]
  # found 0 program(s)
# (t=133.57) i=23, candidate=[{'ANSWER': 19.799999999999997}]
  # found 0 program(s)
# (t=139.02) i=24, candidate=[{'ANSWER': 19.17}]
  # found 0 program(s)
# (t=144.54) i=25, candidate=[{'ANSWER': 18.86}]
  # found 0 program(s)
# (t=150.03) i=26, candidate=[{'ANSWER': 18.540000000000006}]
  # found 0 program(s)
# (t=155.51) i=27, candidate=[{'ANSWER': 18.230000000000004}]
  # found 0 program(s)
# (t=160.97) i=28, candidate=[{'ANSWER': 'Age group'}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: ['50-54', '55-59', '60-64', 63.8, '65-69', 65.69, 67.89, 68.83, '70-74', 70.09, 72.6, 72.92, 73.55, '75-79', 75.12, 75.43, 75.75, 78.57, 79.52, '80 and over', 80.77, 82.66, 83.6, 83.92, 84.23, 84.86, 85.49, 'Age group', 'All', 'All aged 16 and over', 'Men', 'Percentage', 'Women', 'blue', 'color', 'gender', 'orange', 'red']
# (t=166.42) fallback i=0, candidate=[{'ANSWER': '50-54'}]
  # found 0 program(s)
# (t=172.81) fallback i=1, candidate=[{'ANSWER': '55-59'}]
  # found 0 program(s)
# (t=179.20) fallback i=2, candidate=[{'ANSWER': '60-64'}]
  # found 0 program(s)
# (t=185.57) fallback i=3, candidate=[{'ANSWER': 63.8}]
  # found 0 program(s)
# (t=191.91) fallback i=4, candidate=[{'ANSWER': '65-69'}]
  # found 0 program(s)
# (t=198.32) fallback i=5, candidate=[{'ANSWER': 65.69}]
  # found 0 program(s)
# (t=204.69) fallback i=6, candidate=[{'ANSWER': 67.89}]
  # found 0 program(s)
# (t=211.09) fallback i=7, candidate=[{'ANSWER': 68.83}]
  # found 0 program(s)
# (t=217.43) fallback i=8, candidate=[{'ANSWER': '70-74'}]
  # found 0 program(s)
# (t=223.75) fallback i=9, candidate=[{'ANSWER': 70.09}]
  # found 0 program(s)
# (t=230.08) fallback i=10, candidate=[{'ANSWER': 72.6}]
  # found 0 program(s)
# (t=236.39) fallback i=11, candidate=[{'ANSWER': 72.92}]
  # found 0 program(s)
# (t=242.75) fallback i=12, candidate=[{'ANSWER': 73.55}]
  # found 0 program(s)
# (t=249.10) fallback i=13, candidate=[{'ANSWER': '75-79'}]
  # found 0 program(s)
# (t=255.43) fallback i=14, candidate=[{'ANSWER': 75.12}]
  # found 0 program(s)
# (t=261.82) fallback i=15, candidate=[{'ANSWER': 75.43}]
  # found 0 program(s)
# (t=268.44) fallback i=16, candidate=[{'ANSWER': 75.75}]
  # found 0 program(s)
# (t=274.81) fallback i=17, candidate=[{'ANSWER': 78.57}]
  # found 0 program(s)
# (t=281.15) fallback i=18, candidate=[{'ANSWER': 79.52}]
  # found 0 program(s)
# (t=287.49) fallback i=19, candidate=[{'ANSWER': '80 and over'}]
  # found 0 program(s)
# (t=293.90) fallback i=20, candidate=[{'ANSWER': 80.77}]
---------- timeout ----------
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: ['80 and over', '80 and over']

# ========== review report ========== #
