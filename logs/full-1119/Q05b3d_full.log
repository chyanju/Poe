# parsed arguments: Namespace(benchmark='Q05b3d', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'(ppp)', 'pollster', 'polling', '0.8', 'surveyusa', 'news', 'abc', '(nbc/marist)', 'policy', 'rasmussen', 'republican', 'reports', 'shaw)', '(opinion', 'cnn', 'yougov', '-1.4', 'effect', '-2.5', 'post', 'spread', 'gallup', '3.2', '-1.5', 'marist', 'research', '2.4', '-1.7', '&', 'house', 'fox', 'pew', 'color', '3.1', '-1.3', 'public', '(robbins', 'washington', 'democratic', '1.9', 'quinnipiac', '2.9', 'orange', '0.4', 'research)', 'ipsos', '/', 'blue'}
# input type: [dtype('O'), dtype('O'), dtype('float64'), dtype('O')]
# input is:
                       Pollster      spread  House Effect   color
0                  Pew Research  Democratic           3.2    blue
1   Public Policy Polling (PPP)  Democratic           3.1    blue
2                         Ipsos  Democratic           2.9    blue
3                     SurveyUSA  Democratic           2.4    blue
4           Marist (NBC/Marist)  Democratic           1.9    blue
5                        YouGov  Democratic           0.8    blue
6        CNN (Opinion Research)  Democratic           0.4    blue
7             Rasmussen Reports  Republican          -1.3  orange
8    Washington Post / ABC News  Republican          -1.4  orange
9     Fox News (Robbins & Shaw)  Republican          -1.5  orange
10                   Quinnipiac  Republican          -1.7  orange
11                       Gallup  Republican          -2.5  orange
# query is: What organization has a value that's more than 1 but less than 2?
# expected output type:[dtype('O')]
# expected output is:
                ANSWER
0  Marist (NBC/Marist)
# inferred DSL terminals:
  # ConstVal: ['<NULL>']
     # cmap: []
  # AggrFunc: ['<NULL>']
     # amap: []
  # NumFunc: ['-', '<NULL>']
     # nmap: [('more', '-')]
  # BoolFunc: ['<', '==', '>=', '>', '<=', '<NULL>']
     # bmap: [('less', '<'), (None, '=='), ('more', '>='), ('less', '<='), ('more', '>')]
  # IndFunc: ['<NULL>']
     # imap: []
# ====> fallback strategy (comparison) is triggered
  # [debug] high_values: []
  # [debug] high_values (no dup.): []
  # [debug] filtered low_values (no dup.): []
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 'Gallup'}]
  # found 0 program(s)
# (t=0.30) i=1, candidate=[{'ANSWER': 'YouGov'}]
  # found 0 program(s)
# (t=0.59) i=2, candidate=[{'ANSWER': 'Quinnipiac'}]
  # found 0 program(s)
# (t=0.89) i=3, candidate=[{'ANSWER': 'CNN (Opinion Research)'}]
  # found 0 program(s)
# (t=1.18) i=4, candidate=[{'ANSWER': 'Pew Research'}]
  # found 0 program(s)
# (t=1.48) i=5, candidate=[{'ANSWER': 'Marist (NBC/Marist)'}]
  # found 0 program(s)
# (t=1.77) i=6, candidate=[{'ANSWER': 'Rasmussen Reports'}]
  # found 0 program(s)
# (t=2.06) i=7, candidate=[{'ANSWER': 'Fox News (Robbins & Shaw)'}]
  # found 0 program(s)
# (t=2.35) i=8, candidate=[{'ANSWER': 'SurveyUSA'}]
  # found 0 program(s)
# (t=2.65) i=9, candidate=[{'ANSWER': 'Ipsos'}]
  # found 0 program(s)
# (t=2.95) i=10, candidate=[{'ANSWER': 'Public Policy Polling (PPP)'}]
  # found 0 program(s)
# (t=3.24) i=11, candidate=[{'ANSWER': 'Washington Post / ABC News'}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: [-1.3, -1.4, -1.5, -1.7, -2.5, 0.4, 0.8, 1.9, 2.4, 2.9, 3.1, 3.2, 'CNN (Opinion Research)', 'Democratic', 'Fox News (Robbins & Shaw)', 'Gallup', 'House Effect', 'Ipsos', 'Marist (NBC/Marist)', 'Pew Research', 'Pollster', 'Public Policy Polling (PPP)', 'Quinnipiac', 'Rasmussen Reports', 'Republican', 'SurveyUSA', 'Washington Post / ABC News', 'YouGov', 'blue', 'color', 'orange', 'spread']
# (t=3.54) fallback i=0, candidate=[{'ANSWER': -1.3}]
  # found 0 program(s)
# (t=3.83) fallback i=1, candidate=[{'ANSWER': -1.4}]
  # found 0 program(s)
# (t=4.13) fallback i=2, candidate=[{'ANSWER': -1.5}]
  # found 0 program(s)
# (t=4.43) fallback i=3, candidate=[{'ANSWER': -1.7}]
  # found 0 program(s)
# (t=4.73) fallback i=4, candidate=[{'ANSWER': -2.5}]
  # found 0 program(s)
# (t=5.02) fallback i=5, candidate=[{'ANSWER': 0.4}]
  # found 0 program(s)
# (t=5.32) fallback i=6, candidate=[{'ANSWER': 0.8}]
  # found 0 program(s)
# (t=5.62) fallback i=7, candidate=[{'ANSWER': 1.9}]
  # found 0 program(s)
# (t=5.92) fallback i=8, candidate=[{'ANSWER': 2.4}]
  # found 0 program(s)
# (t=6.22) fallback i=9, candidate=[{'ANSWER': 2.9}]
  # found 0 program(s)
# (t=6.51) fallback i=10, candidate=[{'ANSWER': 3.1}]
  # found 0 program(s)
# (t=6.81) fallback i=11, candidate=[{'ANSWER': 3.2}]
  # found 0 program(s)
# (t=7.11) fallback i=12, candidate=[{'ANSWER': 'CNN (Opinion Research)'}]
  # found 0 program(s)
# (t=7.41) fallback i=13, candidate=[{'ANSWER': 'Democratic'}]
  # found 0 program(s)
# (t=7.71) fallback i=14, candidate=[{'ANSWER': 'Fox News (Robbins & Shaw)'}]
  # found 0 program(s)
# (t=8.01) fallback i=15, candidate=[{'ANSWER': 'Gallup'}]
  # found 0 program(s)
# (t=8.30) fallback i=16, candidate=[{'ANSWER': 'House Effect'}]
  # found 0 program(s)
# (t=8.46) fallback i=17, candidate=[{'ANSWER': 'Ipsos'}]
  # found 0 program(s)
# (t=8.76) fallback i=18, candidate=[{'ANSWER': 'Marist (NBC/Marist)'}]
  # found 0 program(s)
# (t=9.06) fallback i=19, candidate=[{'ANSWER': 'Pew Research'}]
  # found 0 program(s)
# (t=9.36) fallback i=20, candidate=[{'ANSWER': 'Pollster'}]
  # found 0 program(s)
# (t=9.52) fallback i=21, candidate=[{'ANSWER': 'Public Policy Polling (PPP)'}]
  # found 0 program(s)
# (t=9.81) fallback i=22, candidate=[{'ANSWER': 'Quinnipiac'}]
  # found 0 program(s)
# (t=10.11) fallback i=23, candidate=[{'ANSWER': 'Rasmussen Reports'}]
  # found 0 program(s)
# (t=10.41) fallback i=24, candidate=[{'ANSWER': 'Republican'}]
  # found 0 program(s)
# (t=10.70) fallback i=25, candidate=[{'ANSWER': 'SurveyUSA'}]
  # found 0 program(s)
# (t=11.00) fallback i=26, candidate=[{'ANSWER': 'Washington Post / ABC News'}]
  # found 0 program(s)
# (t=11.29) fallback i=27, candidate=[{'ANSWER': 'YouGov'}]
  # found 0 program(s)
# (t=11.59) fallback i=28, candidate=[{'ANSWER': 'blue'}]
  # found 0 program(s)
# (t=11.89) fallback i=29, candidate=[{'ANSWER': 'color'}]
  # found 0 program(s)
# (t=12.05) fallback i=30, candidate=[{'ANSWER': 'orange'}]
  # found 0 program(s)
# (t=12.35) fallback i=31, candidate=[{'ANSWER': 'spread'}]
  # found 0 program(s)
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: ['Gallup']

# ========== review report ========== #
