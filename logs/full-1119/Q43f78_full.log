# parsed arguments: Namespace(benchmark='Q43f78', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'population', 'chinese', '39', 'indian', '33', 'public', '55', '30', 'blue', 'percentage', '57', 'color', 'americans', 'japanese', '15'}
# input type: [dtype('O'), dtype('int64'), dtype('O')]
# input is:
           population  percentage color
0    Indian Americans          55  blue
1       Indian public          30  blue
2   Chinese Americans          57  blue
3      Chinese public          39  blue
4  Japanese Americans          33  blue
5     Japanese public          15  blue
# query is: what is on the y-axis?
# expected output type:[dtype('O')]
# expected output is:
       ANSWER
0  population
# inferred DSL terminals:
  # ConstVal: ['<NULL>']
     # cmap: []
  # AggrFunc: ['<NULL>']
     # amap: []
  # NumFunc: ['<NULL>']
     # nmap: []
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 30}]
  # found 0 program(s)
# (t=0.12) i=1, candidate=[{'ANSWER': 30}, {'ANSWER': 55}]
  # found 0 program(s)
# (t=0.21) i=2, candidate=[{'ANSWER': 15}, {'ANSWER': 30}]
  # found 0 program(s)
# (t=0.30) i=3, candidate=[{'ANSWER': 30}, {'ANSWER': 39}]
  # found 0 program(s)
# (t=0.38) i=4, candidate=[{'ANSWER': 30}, {'ANSWER': 33}]
  # found 0 program(s)
# (t=0.47) i=5, candidate=[{'ANSWER': 30}, {'ANSWER': 57}]
  # found 0 program(s)
# (t=0.56) i=6, candidate=[{'ANSWER': 15}, {'ANSWER': 30}, {'ANSWER': 55}]
  # found 0 program(s)
# (t=0.65) i=7, candidate=[{'ANSWER': 30}, {'ANSWER': 39}, {'ANSWER': 55}]
  # found 0 program(s)
# (t=0.74) i=8, candidate=[{'ANSWER': 30}, {'ANSWER': 33}, {'ANSWER': 55}]
  # found 0 program(s)
# (t=0.82) i=9, candidate=[{'ANSWER': 30}, {'ANSWER': 55}, {'ANSWER': 57}]
  # found 0 program(s)
# (t=0.91) i=10, candidate=[{'ANSWER': 15}, {'ANSWER': 30}, {'ANSWER': 39}]
  # found 0 program(s)
# (t=0.99) i=11, candidate=[{'ANSWER': 15}, {'ANSWER': 30}, {'ANSWER': 33}]
  # found 0 program(s)
# (t=1.08) i=12, candidate=[{'ANSWER': 15}, {'ANSWER': 30}, {'ANSWER': 57}]
  # found 0 program(s)
# (t=1.16) i=13, candidate=[{'ANSWER': 30}, {'ANSWER': 33}, {'ANSWER': 39}]
  # found 0 program(s)
# (t=1.25) i=14, candidate=[{'ANSWER': 30}, {'ANSWER': 39}, {'ANSWER': 57}]
  # found 0 program(s)
# (t=1.34) i=15, candidate=[{'ANSWER': 30}, {'ANSWER': 33}, {'ANSWER': 57}]
  # found 0 program(s)
# (t=1.42) i=16, candidate=[{'ANSWER': 55}]
  # found 0 program(s)
# (t=1.54) i=17, candidate=[{'ANSWER': 15}, {'ANSWER': 55}]
  # found 0 program(s)
# (t=1.63) i=18, candidate=[{'ANSWER': 39}, {'ANSWER': 55}]
  # found 0 program(s)
# (t=1.72) i=19, candidate=[{'ANSWER': 33}, {'ANSWER': 55}]
  # found 0 program(s)
# (t=1.81) i=20, candidate=[{'ANSWER': 55}, {'ANSWER': 57}]
  # found 0 program(s)
# (t=1.89) i=21, candidate=[{'ANSWER': 15}, {'ANSWER': 39}, {'ANSWER': 55}]
  # found 0 program(s)
# (t=1.98) i=22, candidate=[{'ANSWER': 15}, {'ANSWER': 33}, {'ANSWER': 55}]
  # found 0 program(s)
# (t=2.07) i=23, candidate=[{'ANSWER': 15}, {'ANSWER': 55}, {'ANSWER': 57}]
  # found 0 program(s)
# (t=2.15) i=24, candidate=[{'ANSWER': 33}, {'ANSWER': 39}, {'ANSWER': 55}]
  # found 0 program(s)
# (t=2.24) i=25, candidate=[{'ANSWER': 39}, {'ANSWER': 55}, {'ANSWER': 57}]
  # found 0 program(s)
# (t=2.33) i=26, candidate=[{'ANSWER': 33}, {'ANSWER': 55}, {'ANSWER': 57}]
  # found 0 program(s)
# (t=2.42) i=27, candidate=[{'ANSWER': 15}]
  # found 0 program(s)
# (t=2.54) i=28, candidate=[{'ANSWER': 15}, {'ANSWER': 39}]
  # found 0 program(s)
# (t=2.63) i=29, candidate=[{'ANSWER': 39}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: [15, 30, 33, 39, 55, 57, 'Chinese Americans', 'Chinese public', 'Indian Americans', 'Indian public', 'Japanese Americans', 'Japanese public', 'blue', 'color', 'percentage', 'population']
# (t=2.75) fallback i=0, candidate=[{'ANSWER': 15}]
  # found 0 program(s)
# (t=2.87) fallback i=1, candidate=[{'ANSWER': 30}]
  # found 0 program(s)
# (t=2.99) fallback i=2, candidate=[{'ANSWER': 33}]
  # found 0 program(s)
# (t=3.12) fallback i=3, candidate=[{'ANSWER': 39}]
  # found 0 program(s)
# (t=3.24) fallback i=4, candidate=[{'ANSWER': 55}]
  # found 0 program(s)
# (t=3.36) fallback i=5, candidate=[{'ANSWER': 57}]
  # found 0 program(s)
# (t=3.48) fallback i=6, candidate=[{'ANSWER': 'Chinese Americans'}]
  # found 0 program(s)
# (t=3.61) fallback i=7, candidate=[{'ANSWER': 'Chinese public'}]
  # found 0 program(s)
# (t=3.73) fallback i=8, candidate=[{'ANSWER': 'Indian Americans'}]
  # found 0 program(s)
# (t=3.85) fallback i=9, candidate=[{'ANSWER': 'Indian public'}]
  # found 0 program(s)
# (t=3.97) fallback i=10, candidate=[{'ANSWER': 'Japanese Americans'}]
  # found 0 program(s)
# (t=4.09) fallback i=11, candidate=[{'ANSWER': 'Japanese public'}]
  # found 0 program(s)
# (t=4.22) fallback i=12, candidate=[{'ANSWER': 'blue'}]
  # found 0 program(s)
# (t=4.34) fallback i=13, candidate=[{'ANSWER': 'color'}]
  # found 0 program(s)
# (t=4.42) fallback i=14, candidate=[{'ANSWER': 'percentage'}]
  # found 0 program(s)
# (t=4.49) fallback i=15, candidate=[{'ANSWER': 'population'}]
  # found 0 program(s)
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: ['<no answer>']

# ========== review report ========== #
