# parsed arguments: Namespace(benchmark='Q5179f', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'75', 'opinion', 'italy', 'mexico', '23', '18', '51', '27', '29', 'turkey', '15', '81', 'china', 'germany', '35', 'percentage', '22', '40', '25', 'britain', 'russia', '83', '9', '33', 'poland', 'brazil', 'improve', 'jordan', '47', 'japan', '49', '52', '10', 'india', 'same', '37', '31', '84', 'pakistan', '32', '24', 'red', '43', 'orange', 'worsen', '45', 'lebanon', '26', '34', 'color', '20', '60', 'spain', 'france', 'u.s.', '5', 'remain', '2', 'rep.', '12', 'tunisia', 'greece', '13', '28', '44', 'country', 'blue', '50', 'czech', '16', 'egypt'}
# input type: [dtype('O'), dtype('O'), dtype('int64'), dtype('O')]
# input is:
       Country          opinion  percentage   color
0       Brazil          Improve          84    blue
1       Brazil  Remain the same          12  orange
2       Brazil           Worsen           5     red
3        China          Improve          83    blue
4        China  Remain the same           9  orange
..         ...              ...         ...     ...
58  Czech Rep.  Remain the same          27  orange
59  Czech Rep.           Worsen          60     red
60      Greece          Improve           9    blue
61      Greece  Remain the same          10  orange
62      Greece           Worsen          81     red

[63 rows x 4 columns]
# query is: how many countries' economy will worsen based on the majority people's opinions?
# expected output type:[dtype('int64')]
# expected output is:
   ANSWER
0       2
# inferred DSL terminals:
  # ConstVal: ['opinion@Str', 'Country@Str', 'Worsen@Str', '<NULL>']
     # cmap: [('countries', 'Country'), ('opinions', 'opinion'), ('worsen', 'Worsen')]
  # AggrFunc: ['count', '<NULL>']
     # amap: [('how many', 'count')]
  # NumFunc: ['<NULL>']
     # nmap: []
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 1}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: [10, 12, 13, 15, 16, 18, 2, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 40, 43, 44, 45, 47, 49, 5, 50, 51, 52, 60, 75, 81, 83, 84, 9, 'Brazil', 'Britain', 'China', 'Country', 'Czech Rep.', 'Egypt', 'France', 'Germany', 'Greece', 'Improve', 'India', 'Italy', 'Japan', 'Jordan', 'Lebanon', 'Mexico', 'Pakistan', 'Poland', 'Remain the same', 'Russia', 'Spain', 'Tunisia', 'Turkey', 'U.S.', 'Worsen', 'blue', 'color', 'opinion', 'orange', 'percentage', 'red']
# (t=2.07) fallback i=0, candidate=[{'ANSWER': 10}]
  # found 0 program(s)
# (t=4.46) fallback i=1, candidate=[{'ANSWER': 12}]
  # found 0 program(s)
# (t=6.86) fallback i=2, candidate=[{'ANSWER': 13}]
  # found 0 program(s)
# (t=9.25) fallback i=3, candidate=[{'ANSWER': 15}]
  # found 0 program(s)
# (t=11.64) fallback i=4, candidate=[{'ANSWER': 16}]
  # found 0 program(s)
# (t=14.00) fallback i=5, candidate=[{'ANSWER': 18}]
  # found 0 program(s)
# (t=16.36) fallback i=6, candidate=[{'ANSWER': 2}]
  # found 0 program(s)
# (t=18.70) fallback i=7, candidate=[{'ANSWER': 20}]
  # found 0 program(s)
# (t=21.04) fallback i=8, candidate=[{'ANSWER': 22}]
  # found 0 program(s)
# (t=23.40) fallback i=9, candidate=[{'ANSWER': 23}]
  # found 0 program(s)
# (t=25.78) fallback i=10, candidate=[{'ANSWER': 24}]
  # found 0 program(s)
# (t=28.20) fallback i=11, candidate=[{'ANSWER': 25}]
  # found 0 program(s)
# (t=30.63) fallback i=12, candidate=[{'ANSWER': 26}]
  # found 0 program(s)
# (t=33.01) fallback i=13, candidate=[{'ANSWER': 27}]
  # found 0 program(s)
# (t=35.35) fallback i=14, candidate=[{'ANSWER': 28}]
  # found 0 program(s)
# (t=37.69) fallback i=15, candidate=[{'ANSWER': 29}]
  # found 0 program(s)
# (t=40.01) fallback i=16, candidate=[{'ANSWER': 31}]
  # found 0 program(s)
# (t=42.39) fallback i=17, candidate=[{'ANSWER': 32}]
  # found 0 program(s)
# (t=44.73) fallback i=18, candidate=[{'ANSWER': 33}]
  # found 0 program(s)
# (t=47.09) fallback i=19, candidate=[{'ANSWER': 34}]
  # found 0 program(s)
# (t=49.47) fallback i=20, candidate=[{'ANSWER': 35}]
  # found 0 program(s)
# (t=52.16) fallback i=21, candidate=[{'ANSWER': 37}]
  # found 0 program(s)
# (t=54.55) fallback i=22, candidate=[{'ANSWER': 40}]
  # found 0 program(s)
# (t=56.92) fallback i=23, candidate=[{'ANSWER': 43}]
  # found 0 program(s)
# (t=59.31) fallback i=24, candidate=[{'ANSWER': 44}]
  # found 0 program(s)
# (t=61.74) fallback i=25, candidate=[{'ANSWER': 45}]
  # found 0 program(s)
# (t=64.18) fallback i=26, candidate=[{'ANSWER': 47}]
  # found 0 program(s)
# (t=66.57) fallback i=27, candidate=[{'ANSWER': 49}]
  # found 0 program(s)
# (t=68.93) fallback i=28, candidate=[{'ANSWER': 5}]
  # found 0 program(s)
# (t=71.32) fallback i=29, candidate=[{'ANSWER': 50}]
  # found 0 program(s)
# (t=73.70) fallback i=30, candidate=[{'ANSWER': 51}]
  # found 0 program(s)
# (t=76.08) fallback i=31, candidate=[{'ANSWER': 52}]
  # found 0 program(s)
# (t=78.45) fallback i=32, candidate=[{'ANSWER': 60}]
  # found 0 program(s)
# (t=80.82) fallback i=33, candidate=[{'ANSWER': 75}]
  # found 0 program(s)
# (t=83.23) fallback i=34, candidate=[{'ANSWER': 81}]
  # found 0 program(s)
# (t=85.61) fallback i=35, candidate=[{'ANSWER': 83}]
  # found 0 program(s)
# (t=87.98) fallback i=36, candidate=[{'ANSWER': 84}]
  # found 0 program(s)
# (t=90.38) fallback i=37, candidate=[{'ANSWER': 9}]
  # found 0 program(s)
# (t=92.81) fallback i=38, candidate=[{'ANSWER': 'Brazil'}]
  # found 0 program(s)
# (t=95.24) fallback i=39, candidate=[{'ANSWER': 'Britain'}]
  # found 0 program(s)
# (t=97.62) fallback i=40, candidate=[{'ANSWER': 'China'}]
  # found 0 program(s)
# (t=100.00) fallback i=41, candidate=[{'ANSWER': 'Country'}]
  # found 0 program(s)
# (t=101.99) fallback i=42, candidate=[{'ANSWER': 'Czech Rep.'}]
  # found 0 program(s)
# (t=104.36) fallback i=43, candidate=[{'ANSWER': 'Egypt'}]
  # found 0 program(s)
# (t=106.76) fallback i=44, candidate=[{'ANSWER': 'France'}]
  # found 0 program(s)
# (t=109.17) fallback i=45, candidate=[{'ANSWER': 'Germany'}]
  # found 0 program(s)
# (t=111.56) fallback i=46, candidate=[{'ANSWER': 'Greece'}]
  # found 0 program(s)
# (t=113.95) fallback i=47, candidate=[{'ANSWER': 'Improve'}]
  # found 0 program(s)
# (t=116.67) fallback i=48, candidate=[{'ANSWER': 'India'}]
  # found 0 program(s)
# (t=119.06) fallback i=49, candidate=[{'ANSWER': 'Italy'}]
  # found 0 program(s)
# (t=121.43) fallback i=50, candidate=[{'ANSWER': 'Japan'}]
  # found 0 program(s)
# (t=123.77) fallback i=51, candidate=[{'ANSWER': 'Jordan'}]
  # found 0 program(s)
# (t=126.11) fallback i=52, candidate=[{'ANSWER': 'Lebanon'}]
  # found 0 program(s)
# (t=128.47) fallback i=53, candidate=[{'ANSWER': 'Mexico'}]
  # found 0 program(s)
# (t=130.86) fallback i=54, candidate=[{'ANSWER': 'Pakistan'}]
  # found 0 program(s)
# (t=133.25) fallback i=55, candidate=[{'ANSWER': 'Poland'}]
  # found 0 program(s)
# (t=135.86) fallback i=56, candidate=[{'ANSWER': 'Remain the same'}]
  # found 0 program(s)
# (t=138.20) fallback i=57, candidate=[{'ANSWER': 'Russia'}]
  # found 0 program(s)
# (t=140.57) fallback i=58, candidate=[{'ANSWER': 'Spain'}]
  # found 0 program(s)
# (t=142.96) fallback i=59, candidate=[{'ANSWER': 'Tunisia'}]
  # found 0 program(s)
# (t=145.38) fallback i=60, candidate=[{'ANSWER': 'Turkey'}]
  # found 0 program(s)
# (t=147.82) fallback i=61, candidate=[{'ANSWER': 'U.S.'}]
  # found 0 program(s)
# (t=150.21) fallback i=62, candidate=[{'ANSWER': 'Worsen'}]
  # found 0 program(s)
# (t=152.59) fallback i=63, candidate=[{'ANSWER': 'blue'}]
  # found 0 program(s)
# (t=155.00) fallback i=64, candidate=[{'ANSWER': 'color'}]
  # found 0 program(s)
# (t=156.98) fallback i=65, candidate=[{'ANSWER': 'opinion'}]
  # found 0 program(s)
# (t=158.98) fallback i=66, candidate=[{'ANSWER': 'orange'}]
  # found 0 program(s)
# (t=161.37) fallback i=67, candidate=[{'ANSWER': 'percentage'}]
  # found 0 program(s)
# (t=163.40) fallback i=68, candidate=[{'ANSWER': 'red'}]
  # found 0 program(s)
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: [18]

# ========== review report ========== #
