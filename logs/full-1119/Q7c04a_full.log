# parsed arguments: Namespace(benchmark='Q7c04a', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'sciences', '61', 'gray', '42', 'chemistry', 'blue', 'percent', 'engineering', 'humanities', '52', 'programs', 'brown', 'orange', 'business', '84', 'yellow', 'red', 'color', 'phys', 'purple', 'social', 'undergrad', 'sci', '53', '67', 'design', '60', '91', 'resources', 'nat', 'green', 'arts', 'env', 'bio', '55', '62', 'major', 'math', 'ls'}
# input type: [dtype('O'), dtype('int64'), dtype('O')]
# input is:
              major  percent   color
0       LS Programs       42  yellow
1      Bio Sciences       52    blue
2      LS Undergrad       53  yellow
3     Math Phys Sci       55  orange
4     Nat Resources       60   brown
5   Arts Humanities       61    gray
6   Social Sciences       61   brown
7         Chemistry       62     red
8        Env Design       67   green
9       Engineering       84  orange
10         Business       91  purple
# query is: What is the percentage difference between engineering and math phys sci majors?
# expected output type:[dtype('int64')]
# expected output is:
   ANSWER
0      29
# inferred DSL terminals:
  # ConstVal: ['percent@Str', 'Engineering@Str', 'major@Str', 'Math Phys Sci@Str', '<NULL>']
     # cmap: [('majors', 'major'), ('phys', 'Math Phys Sci'), ('sci', 'Math Phys Sci'), ('math', 'Math Phys Sci'), ('engineering', 'Engineering'), ('percentage', 'percent')]
  # AggrFunc: ['<NULL>']
     # amap: []
  # NumFunc: ['diff', '<NULL>']
     # nmap: [('difference', 'diff')]
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# ====> fallback strategy (comparison) is triggered
  # [debug] high_values: [(29, 8), (-29, 8)]
  # [debug] high_values (no dup.): [(29, 8), (-29, 8)]
  # [debug] filtered low_values (no dup.): [(36, 4), (13, 4), (12, 4), (7, 4), (6, 4), (6, 4), (5, 4), (3, 4), (2, 4), (-2, 4)]
  # [debug] fallback (comparison) answers are added
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 1}]
  # found 0 program(s)
# (t=2.89) i=1, candidate=[{'ANSWER': 2}]
  # found 0 program(s)
# (t=5.75) i=2, candidate=[{'ANSWER': 3}]
  # found 0 program(s)
# (t=8.63) i=3, candidate=[{'ANSWER': 4}]
  # found 0 program(s)
# (t=11.52) i=4, candidate=[{'ANSWER': 29}]
  # found 2 program(s)
    # Contrast(@param0, diff, 0, Engineering@Str, Math Phys Sci@Str, 1)
      --> ['Contrast', 'input@0', 'diff', 'major', 'Engineering', 'Math Phys Sci', 'percent']
    # Contrast(@param0, diff, 0, Math Phys Sci@Str, Engineering@Str, 1)
      --> ['Contrast', 'input@0', 'diff', 'major', 'Math Phys Sci', 'Engineering', 'percent']
# (t=14.42) i=5, candidate=[{'ANSWER': -29}]
  # found 0 program(s)
# (t=17.31) i=6, candidate=[{'ANSWER': 36}]
  # found 0 program(s)
# (t=20.21) i=7, candidate=[{'ANSWER': 13}]
  # found 0 program(s)
# (t=23.06) i=8, candidate=[{'ANSWER': 12}]
  # found 0 program(s)
# (t=25.93) i=9, candidate=[{'ANSWER': 7}]
  # found 0 program(s)
# (t=28.79) i=10, candidate=[{'ANSWER': 6}]
  # found 0 program(s)
# (t=31.67) i=11, candidate=[{'ANSWER': 6}]
  # found 0 program(s)
# (t=34.55) i=12, candidate=[{'ANSWER': 5}]
  # found 0 program(s)
# (t=37.44) i=13, candidate=[{'ANSWER': 3}]
  # found 0 program(s)
# (t=40.35) i=14, candidate=[{'ANSWER': 2}]
  # found 0 program(s)
# (t=43.24) i=15, candidate=[{'ANSWER': -2}]
  # found 0 program(s)

# ========== review report ========== #
# top-1, score: 2.73, answer: [29]
  # tprog: Contrast(@param0, diff, 0, Engineering@Str, Math Phys Sci@Str, 1)
# top-2, score: 2.73, answer: [29]
  # tprog: Contrast(@param0, diff, 0, Math Phys Sci@Str, Engineering@Str, 1)
