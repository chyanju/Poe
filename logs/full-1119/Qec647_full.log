# parsed arguments: Namespace(benchmark='Qec647', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'percentage', '10', '60+', '18-59', '0-4', 'male', 'blue', 'group', 'female', 'color', '12-17', '24', '9', 'orange', 'gender', '5-11', '7', '1', '20', 'age', '2'}
# input type: [dtype('O'), dtype('O'), dtype('int64'), dtype('O')]
# input is:
  Age group  Gender  Percentage   color
0       0-4    Male           9  orange
1       0-4  Female           9    blue
2     12-17    Male           7  orange
3     12-17  Female           7    blue
4     18-59  Female          24    blue
5     18-59    Male          20  orange
6       60+  Female           2    blue
7       60+    Male           1  orange
8      5-11    Male          10  orange
9      5-11  Female          10    blue
# query is: Are there more Syrian refugees 60 and older or below 5?
# expected output type:[dtype('O')]
# expected output is:
  ANSWER
0    0-4
# inferred DSL terminals:
  # ConstVal: ['5-11@Str', '60+@Str', '<NULL>']
     # cmap: [(5, '5-11'), (60, '60+')]
  # AggrFunc: ['<NULL>']
     # amap: []
  # NumFunc: ['-', '<NULL>']
     # nmap: [('more', '-')]
  # BoolFunc: ['>=', '>', '==', '<NULL>']
     # bmap: [(None, '=='), ('more', '>='), ('more', '>')]
  # IndFunc: ['<NULL>']
     # imap: []
# ====> fallback strategy (comparison) is triggered
  # [debug] high_values: [(9, 4), (9, 4), (8, 4), (8, 4), (1, 4), (0, 4), (-1, 4), (-8, 4), (-8, 4), (-9, 4)]
  # [debug] high_values (no dup.): [(9, 4), (9, 4), (8, 4), (8, 4), (1, 4), (0, 4), (-1, 4), (-8, 4), (-8, 4), (-9, 4)]
  # [debug] filtered low_values (no dup.): [(23, 2), (22, 2), (19, 2), (18, 2), (14, 2), (14, 2), (10, 2), (10, 2), (8, 2), (8, 2)]
  # [debug] fallback (comparison) answers are added
# ====> fallback strategy (selection) is triggered
  # [debug] fallback (selection) answers: ['5-11', '60+']
  # [debug] fallback (selection) answers (no dup.): []
  # [debug] 0 fallback (selection) answers are added
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': '12-17'}]
  # found 0 program(s)
# (t=1.33) i=1, candidate=[{'ANSWER': '5-11'}]
  # found 0 program(s)
# (t=2.66) i=2, candidate=[{'ANSWER': '18-59'}]
  # found 0 program(s)
# (t=4.00) i=3, candidate=[{'ANSWER': '0-4'}]
  # found 0 program(s)
# (t=5.34) i=4, candidate=[{'ANSWER': '60+'}]
  # found 0 program(s)
# (t=6.69) i=5, candidate=[{'ANSWER': 9}]
  # found 0 program(s)
# (t=8.03) i=6, candidate=[{'ANSWER': 9}]
  # found 0 program(s)
# (t=9.38) i=7, candidate=[{'ANSWER': 8}]
  # found 0 program(s)
# (t=10.46) i=8, candidate=[{'ANSWER': 8}]
  # found 0 program(s)
# (t=11.52) i=9, candidate=[{'ANSWER': 1}]
  # found 0 program(s)
# (t=12.84) i=10, candidate=[{'ANSWER': 0}]
  # found 0 program(s)
# (t=13.91) i=11, candidate=[{'ANSWER': -1}]
  # found 0 program(s)
# (t=14.99) i=12, candidate=[{'ANSWER': -8}]
  # found 0 program(s)
# (t=16.06) i=13, candidate=[{'ANSWER': -8}]
  # found 0 program(s)
# (t=17.13) i=14, candidate=[{'ANSWER': -9}]
  # found 0 program(s)
# (t=18.20) i=15, candidate=[{'ANSWER': 23}]
  # found 0 program(s)
# (t=19.28) i=16, candidate=[{'ANSWER': 22}]
  # found 0 program(s)
# (t=20.35) i=17, candidate=[{'ANSWER': 19}]
  # found 0 program(s)
# (t=21.43) i=18, candidate=[{'ANSWER': 18}]
  # found 0 program(s)
# (t=22.51) i=19, candidate=[{'ANSWER': 14}]
  # found 0 program(s)
# (t=23.58) i=20, candidate=[{'ANSWER': 14}]
  # found 0 program(s)
# (t=24.65) i=21, candidate=[{'ANSWER': 10}]
  # found 0 program(s)
# (t=25.99) i=22, candidate=[{'ANSWER': 10}]
  # found 0 program(s)
# (t=27.32) i=23, candidate=[{'ANSWER': 8}]
  # found 0 program(s)
# (t=28.38) i=24, candidate=[{'ANSWER': 8}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: ['0-4', 1, 10, '12-17', '18-59', 2, 20, 24, '5-11', '60+', 7, 9, 'Age group', 'Female', 'Gender', 'Male', 'Percentage', 'blue', 'color', 'orange']
# (t=29.48) fallback i=0, candidate=[{'ANSWER': '0-4'}]
  # found 0 program(s)
# (t=30.81) fallback i=1, candidate=[{'ANSWER': 1}]
  # found 0 program(s)
# (t=32.14) fallback i=2, candidate=[{'ANSWER': 10}]
  # found 0 program(s)
# (t=33.46) fallback i=3, candidate=[{'ANSWER': '12-17'}]
  # found 0 program(s)
# (t=34.79) fallback i=4, candidate=[{'ANSWER': '18-59'}]
  # found 0 program(s)
# (t=36.10) fallback i=5, candidate=[{'ANSWER': 2}]
  # found 0 program(s)
# (t=37.43) fallback i=6, candidate=[{'ANSWER': 20}]
  # found 0 program(s)
# (t=38.78) fallback i=7, candidate=[{'ANSWER': 24}]
  # found 0 program(s)
# (t=40.10) fallback i=8, candidate=[{'ANSWER': '5-11'}]
  # found 0 program(s)
# (t=41.43) fallback i=9, candidate=[{'ANSWER': '60+'}]
  # found 0 program(s)
# (t=42.75) fallback i=10, candidate=[{'ANSWER': 7}]
  # found 0 program(s)
# (t=44.07) fallback i=11, candidate=[{'ANSWER': 9}]
  # found 0 program(s)
# (t=45.38) fallback i=12, candidate=[{'ANSWER': 'Age group'}]
  # found 0 program(s)
# (t=46.46) fallback i=13, candidate=[{'ANSWER': 'Female'}]
  # found 0 program(s)
# (t=47.80) fallback i=14, candidate=[{'ANSWER': 'Gender'}]
  # found 0 program(s)
# (t=48.89) fallback i=15, candidate=[{'ANSWER': 'Male'}]
  # found 0 program(s)
# (t=50.23) fallback i=16, candidate=[{'ANSWER': 'Percentage'}]
  # found 0 program(s)
# (t=51.31) fallback i=17, candidate=[{'ANSWER': 'blue'}]
  # found 0 program(s)
# (t=52.63) fallback i=18, candidate=[{'ANSWER': 'color'}]
  # found 0 program(s)
# (t=53.70) fallback i=19, candidate=[{'ANSWER': 'orange'}]
  # found 0 program(s)
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: ['12-17', '12-17']

# ========== review report ========== #
