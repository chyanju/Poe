# parsed arguments: Namespace(benchmark='Q994ee', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'group', '2', '12-17', 'age', 'male', '7', 'orange', '60+', '9', '20', '1', 'gender', '5-11', '24', 'percentage', 'blue', 'female', '10', 'color', '18-59', '0-4'}
# input type: [dtype('O'), dtype('O'), dtype('int64'), dtype('O')]
# input is:
  Age group  Gender  Percentage   color
0       0-4    Male           9  orange
1       0-4  Female           9    blue
2     12-17    Male           7  orange
3     12-17  Female           7    blue
4     18-59  Female          24    blue
5     18-59    Male          20  orange
6       60+  Female           2    blue
7       60+    Male           1  orange
8      5-11    Male          10  orange
9      5-11  Female          10    blue
# query is: What percentage of Syrian refugees are 0-4?
# expected output type:[dtype('int64')]
# expected output is:
   ANSWER
0      18
# inferred DSL terminals:
  # ConstVal: ['Percentage@Str', '0-4@Str', '<NULL>']
     # cmap: [(4, '0-4'), ('percentage', 'Percentage'), (0, '0-4')]
  # AggrFunc: ['<NULL>']
     # amap: []
  # NumFunc: ['<NULL>']
     # nmap: []
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 10}]
  # found 0 program(s)
# (t=0.80) i=1, candidate=[{'ANSWER': 9}]
  # found 0 program(s)
# (t=1.60) i=2, candidate=[{'ANSWER': 1}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: ['0-4', 1, 10, '12-17', '18-59', 2, 20, 24, '5-11', '60+', 7, 9, 'Age group', 'Female', 'Gender', 'Male', 'Percentage', 'blue', 'color', 'orange']
# (t=2.39) fallback i=0, candidate=[{'ANSWER': '0-4'}]
  # found 0 program(s)
# (t=3.18) fallback i=1, candidate=[{'ANSWER': 1}]
  # found 0 program(s)
# (t=3.98) fallback i=2, candidate=[{'ANSWER': 10}]
  # found 0 program(s)
# (t=4.78) fallback i=3, candidate=[{'ANSWER': '12-17'}]
  # found 0 program(s)
# (t=5.57) fallback i=4, candidate=[{'ANSWER': '18-59'}]
  # found 0 program(s)
# (t=6.37) fallback i=5, candidate=[{'ANSWER': 2}]
  # found 0 program(s)
# (t=7.18) fallback i=6, candidate=[{'ANSWER': 20}]
  # found 0 program(s)
# (t=7.99) fallback i=7, candidate=[{'ANSWER': 24}]
  # found 0 program(s)
# (t=8.79) fallback i=8, candidate=[{'ANSWER': '5-11'}]
  # found 0 program(s)
# (t=9.58) fallback i=9, candidate=[{'ANSWER': '60+'}]
  # found 0 program(s)
# (t=10.39) fallback i=10, candidate=[{'ANSWER': 7}]
  # found 0 program(s)
# (t=11.18) fallback i=11, candidate=[{'ANSWER': 9}]
  # found 0 program(s)
# (t=11.96) fallback i=12, candidate=[{'ANSWER': 'Age group'}]
  # found 0 program(s)
# (t=12.56) fallback i=13, candidate=[{'ANSWER': 'Female'}]
  # found 0 program(s)
# (t=13.36) fallback i=14, candidate=[{'ANSWER': 'Gender'}]
  # found 0 program(s)
# (t=13.96) fallback i=15, candidate=[{'ANSWER': 'Male'}]
  # found 0 program(s)
# (t=14.75) fallback i=16, candidate=[{'ANSWER': 'Percentage'}]
  # found 0 program(s)
# (t=15.35) fallback i=17, candidate=[{'ANSWER': 'blue'}]
  # found 0 program(s)
# (t=16.14) fallback i=18, candidate=[{'ANSWER': 'color'}]
  # found 0 program(s)
# (t=16.74) fallback i=19, candidate=[{'ANSWER': 'orange'}]
  # found 0 program(s)
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: [9]

# ========== review report ========== #
