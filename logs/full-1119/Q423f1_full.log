# parsed arguments: Namespace(benchmark='Q423f1', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'and', '50-54', '75-79', '70.09', 'percentage', 'men', '83.92', 'blue', '68.83', '67.89', 'color', '85.49', '16', 'over', '75.12', '83.6', '84.86', '72.6', '55-59', '65-69', '80', '72.92', '78.57', '60-64', 'gender', 'group', '73.55', '70-74', '75.43', 'aged', '80.77', '65.69', 'red', '63.8', 'women', 'orange', '79.52', 'all', '82.66', 'age', '75.75', '84.23'}
# input type: [dtype('O'), dtype('O'), dtype('float64'), dtype('O')]
# input is:
               Age group gender  Percentage   color
0                  60-64  Women       75.75     red
1                  60-64    All       75.43    blue
2                  60-64    Men       75.12  orange
3   All aged 16 and over  Women       67.89     red
4   All aged 16 and over    All       65.69    blue
5   All aged 16 and over    Men       63.80  orange
6                  70-74  Women       85.49     red
7                  70-74    All       83.92    blue
8                  70-74    Men       82.66  orange
9                  75-79  Women       84.86     red
10                 75-79    All       84.23    blue
11                 75-79    Men       83.60  orange
12                 55-59  Women       73.55     red
13                 55-59    All       72.92    blue
14                 55-59    Men       72.60  orange
15           80 and over  Women       84.23     red
16           80 and over    All       83.92    blue
17           80 and over    Men       83.92  orange
18                 50-54  Women       70.09     red
19                 50-54    All       68.83    blue
20                 50-54    Men       67.89  orange
21                 65-69  Women       80.77     red
22                 65-69    All       79.52    blue
23                 65-69    Men       78.57  orange
# query is: Did more women or men overall feel welcome?
# expected output type:[dtype('O')]
# expected output is:
  ANSWER
0  Women
# inferred DSL terminals:
  # ConstVal: ['Men@Str', 'Women@Str', '<NULL>']
     # cmap: [('men', 'Men'), ('women', 'Women')]
  # AggrFunc: ['sum', '<NULL>']
     # amap: [('overall', 'sum')]
  # NumFunc: ['-', '<NULL>']
     # nmap: [('more', '-')]
  # BoolFunc: ['>=', '>', '==', '<NULL>']
     # bmap: [('more', '>'), (None, '=='), ('more', '>=')]
  # IndFunc: ['<NULL>']
     # imap: []
# ====> fallback strategy (comparison) is triggered
  # [debug] high_values: [(21.689999999999998, 4), (21.060000000000002, 4), (20.430000000000007, 4), (20.120000000000005, 4), (19.799999999999997, 4), (18.86, 4), (17.599999999999994, 4), (17.599999999999994, 4), (16.97, 4), (16.97, 4)]
  # [debug] high_values (no dup.): [(21.689999999999998, 4), (21.060000000000002, 4), (20.430000000000007, 4), (20.120000000000005, 4), (19.799999999999997, 4), (18.86, 4), (17.599999999999994, 4), (17.599999999999994, 4), (16.97, 4), (16.97, 4)]
  # [debug] filtered low_values (no dup.): [(20.430000000000007, 2), (20.120000000000005, 2), (20.120000000000005, 2), (19.799999999999997, 2), (19.17, 2), (18.540000000000006, 2), (18.230000000000004, 2), (17.909999999999997, 2), (16.97, 2), (16.659999999999997, 2)]
  # [debug] fallback (comparison) answers are added
# ====> fallback strategy (selection) is triggered
  # [debug] fallback (selection) answers: ['Men', 'Women']
  # [debug] fallback (selection) answers (no dup.): []
  # [debug] 0 fallback (selection) answers are added
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 'Women'}]
  # found 0 program(s)
# (t=1.66) i=1, candidate=[{'ANSWER': 'Men'}]
  # found 0 program(s)
# (t=3.31) i=2, candidate=[{'ANSWER': 'All'}]
  # found 0 program(s)
# (t=4.99) i=3, candidate=[{'ANSWER': 21.689999999999998}]
  # found 0 program(s)
# (t=6.21) i=4, candidate=[{'ANSWER': 21.060000000000002}]
  # found 0 program(s)
# (t=7.43) i=5, candidate=[{'ANSWER': 20.430000000000007}]
  # found 0 program(s)
# (t=8.64) i=6, candidate=[{'ANSWER': 20.120000000000005}]
  # found 0 program(s)
# (t=9.86) i=7, candidate=[{'ANSWER': 19.799999999999997}]
  # found 0 program(s)
# (t=11.09) i=8, candidate=[{'ANSWER': 18.86}]
  # found 0 program(s)
# (t=12.29) i=9, candidate=[{'ANSWER': 17.599999999999994}]
  # found 0 program(s)
# (t=13.51) i=10, candidate=[{'ANSWER': 17.599999999999994}]
  # found 0 program(s)
# (t=14.72) i=11, candidate=[{'ANSWER': 16.97}]
  # found 0 program(s)
# (t=15.93) i=12, candidate=[{'ANSWER': 16.97}]
  # found 0 program(s)
# (t=17.16) i=13, candidate=[{'ANSWER': 20.430000000000007}]
  # found 0 program(s)
# (t=18.39) i=14, candidate=[{'ANSWER': 20.120000000000005}]
  # found 0 program(s)
# (t=19.61) i=15, candidate=[{'ANSWER': 20.120000000000005}]
  # found 0 program(s)
# (t=20.84) i=16, candidate=[{'ANSWER': 19.799999999999997}]
  # found 0 program(s)
# (t=22.07) i=17, candidate=[{'ANSWER': 19.17}]
  # found 0 program(s)
# (t=23.29) i=18, candidate=[{'ANSWER': 18.540000000000006}]
  # found 0 program(s)
# (t=24.51) i=19, candidate=[{'ANSWER': 18.230000000000004}]
  # found 0 program(s)
# (t=25.72) i=20, candidate=[{'ANSWER': 17.909999999999997}]
  # found 0 program(s)
# (t=26.92) i=21, candidate=[{'ANSWER': 16.97}]
  # found 0 program(s)
# (t=28.13) i=22, candidate=[{'ANSWER': 16.659999999999997}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: ['50-54', '55-59', '60-64', 63.8, '65-69', 65.69, 67.89, 68.83, '70-74', 70.09, 72.6, 72.92, 73.55, '75-79', 75.12, 75.43, 75.75, 78.57, 79.52, '80 and over', 80.77, 82.66, 83.6, 83.92, 84.23, 84.86, 85.49, 'Age group', 'All', 'All aged 16 and over', 'Men', 'Percentage', 'Women', 'blue', 'color', 'gender', 'orange', 'red']
# (t=29.33) fallback i=0, candidate=[{'ANSWER': '50-54'}]
  # found 0 program(s)
# (t=30.95) fallback i=1, candidate=[{'ANSWER': '55-59'}]
  # found 0 program(s)
# (t=32.61) fallback i=2, candidate=[{'ANSWER': '60-64'}]
  # found 0 program(s)
# (t=34.23) fallback i=3, candidate=[{'ANSWER': 63.8}]
  # found 0 program(s)
# (t=35.89) fallback i=4, candidate=[{'ANSWER': '65-69'}]
  # found 0 program(s)
# (t=37.53) fallback i=5, candidate=[{'ANSWER': 65.69}]
  # found 0 program(s)
# (t=39.16) fallback i=6, candidate=[{'ANSWER': 67.89}]
  # found 0 program(s)
# (t=40.79) fallback i=7, candidate=[{'ANSWER': 68.83}]
  # found 0 program(s)
# (t=42.42) fallback i=8, candidate=[{'ANSWER': '70-74'}]
  # found 0 program(s)
# (t=44.05) fallback i=9, candidate=[{'ANSWER': 70.09}]
  # found 0 program(s)
# (t=45.70) fallback i=10, candidate=[{'ANSWER': 72.6}]
  # found 0 program(s)
# (t=47.33) fallback i=11, candidate=[{'ANSWER': 72.92}]
  # found 0 program(s)
# (t=48.99) fallback i=12, candidate=[{'ANSWER': 73.55}]
  # found 0 program(s)
# (t=50.64) fallback i=13, candidate=[{'ANSWER': '75-79'}]
  # found 0 program(s)
# (t=52.28) fallback i=14, candidate=[{'ANSWER': 75.12}]
  # found 0 program(s)
# (t=53.93) fallback i=15, candidate=[{'ANSWER': 75.43}]
  # found 0 program(s)
# (t=55.58) fallback i=16, candidate=[{'ANSWER': 75.75}]
  # found 0 program(s)
# (t=57.23) fallback i=17, candidate=[{'ANSWER': 78.57}]
  # found 0 program(s)
# (t=58.87) fallback i=18, candidate=[{'ANSWER': 79.52}]
  # found 0 program(s)
# (t=60.79) fallback i=19, candidate=[{'ANSWER': '80 and over'}]
  # found 0 program(s)
# (t=62.42) fallback i=20, candidate=[{'ANSWER': 80.77}]
  # found 0 program(s)
# (t=64.07) fallback i=21, candidate=[{'ANSWER': 82.66}]
  # found 0 program(s)
# (t=65.72) fallback i=22, candidate=[{'ANSWER': 83.6}]
  # found 0 program(s)
# (t=67.35) fallback i=23, candidate=[{'ANSWER': 83.92}]
  # found 0 program(s)
# (t=68.99) fallback i=24, candidate=[{'ANSWER': 84.23}]
  # found 0 program(s)
# (t=70.62) fallback i=25, candidate=[{'ANSWER': 84.86}]
  # found 0 program(s)
# (t=72.38) fallback i=26, candidate=[{'ANSWER': 85.49}]
  # found 0 program(s)
# (t=74.06) fallback i=27, candidate=[{'ANSWER': 'Age group'}]
  # found 0 program(s)
# (t=75.27) fallback i=28, candidate=[{'ANSWER': 'All'}]
  # found 0 program(s)
# (t=76.93) fallback i=29, candidate=[{'ANSWER': 'All aged 16 and over'}]
  # found 0 program(s)
# (t=78.58) fallback i=30, candidate=[{'ANSWER': 'Men'}]
  # found 0 program(s)
# (t=80.24) fallback i=31, candidate=[{'ANSWER': 'Percentage'}]
  # found 0 program(s)
# (t=81.46) fallback i=32, candidate=[{'ANSWER': 'Women'}]
  # found 0 program(s)
# (t=83.08) fallback i=33, candidate=[{'ANSWER': 'blue'}]
  # found 0 program(s)
# (t=84.74) fallback i=34, candidate=[{'ANSWER': 'color'}]
  # found 0 program(s)
# (t=85.94) fallback i=35, candidate=[{'ANSWER': 'gender'}]
  # found 0 program(s)
# (t=87.16) fallback i=36, candidate=[{'ANSWER': 'orange'}]
  # found 0 program(s)
# (t=88.79) fallback i=37, candidate=[{'ANSWER': 'red'}]
  # found 0 program(s)
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: ['Women']

# ========== review report ========== #
