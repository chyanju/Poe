# parsed arguments: Namespace(benchmark='Q4c3fb', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'portugal', 'denmark', '0.176', 'rebate', 'pre', '2.727', '1.408', '2.375', '2.199', 'sweden', '19.795', '5.367', 'romania', 'republic', 'netherlands', 'post', 'estonia', '11.613', '14.78', 'country', '25.601', 'greece', '0.44', '6.51', 'finland', 'spain', 'germany', '1.232', '2.551', '25.249', '1.76', 'ireland', 'poland', '1.672', '15.748', '3.959', '1.144', 'czech', '5.103', 'budget', 'austria', '2.023', '0.792', 'bulgaria', 'uk', 'cyprus', '0.264', 'slovakia', 'hungary', '10.821', '20.938', '6.246', '0.616', 'latvia', '4.223', 'luxembourg', '1.496', 'malta', '0.88', '0.0', 'slovenia', 'color', 'blue', '3.695', 'lithuania', 'france', 'italy', 'budgetcategory', '16.628', '18.651', 'orange', 'belgium'}
# input type: [dtype('O'), dtype('O'), dtype('float64'), dtype('O')]
# input is:
           country  budgetcategory  budget   color
0      Netherlands   Pre UK rebate   6.246  orange
1      Netherlands  Post UK rebate   6.510    blue
2           Poland   Pre UK rebate   3.959  orange
3           Poland  Post UK rebate   4.223    blue
4   Czech Republic   Pre UK rebate   1.760  orange
5   Czech Republic  Post UK rebate   1.760    blue
6       Luxembourg   Pre UK rebate   0.440  orange
7       Luxembourg  Post UK rebate   0.440    blue
8          Belgium   Pre UK rebate   5.103  orange
9          Belgium  Post UK rebate   5.367    blue
10         Finland   Pre UK rebate   2.023  orange
11         Finland  Post UK rebate   2.199    blue
12       Lithuania   Pre UK rebate   0.440  orange
13       Lithuania  Post UK rebate   0.440    blue
14          Sweden   Pre UK rebate   3.695  orange
15          Sweden  Post UK rebate   3.695    blue
16         Romania   Pre UK rebate   1.408  orange
17         Romania  Post UK rebate   1.496    blue
18           Italy   Pre UK rebate  15.748  orange
19           Italy  Post UK rebate  16.628    blue
20         Estonia   Pre UK rebate   0.176  orange
21         Estonia  Post UK rebate   0.176    blue
22          France   Pre UK rebate  19.795  orange
23          France  Post UK rebate  20.938    blue
24          Cyprus   Pre UK rebate   0.264  orange
25          Cyprus  Post UK rebate   0.264    blue
26         Germany   Pre UK rebate  25.249  orange
27         Germany  Post UK rebate  25.601    blue
28           Spain   Pre UK rebate  10.821  orange
29           Spain  Post UK rebate  11.613    blue
30        Bulgaria   Pre UK rebate   0.616  orange
31        Bulgaria  Post UK rebate   0.616    blue
32        Portugal   Pre UK rebate   1.672  orange
33        Portugal  Post UK rebate   1.760    blue
34           Malta   Pre UK rebate   0.000  orange
35           Malta  Post UK rebate   0.000    blue
36         Austria   Pre UK rebate   2.727  orange
37         Austria  Post UK rebate   2.727    blue
38         Hungary   Pre UK rebate   1.144  orange
39         Hungary  Post UK rebate   1.232    blue
40        Slovakia   Pre UK rebate   0.792  orange
41        Slovakia  Post UK rebate   0.880    blue
42        Slovenia   Pre UK rebate   0.616  orange
43        Slovenia  Post UK rebate   0.616    blue
44          Greece   Pre UK rebate   2.199  orange
45          Greece  Post UK rebate   2.375    blue
46          Latvia   Pre UK rebate   0.176  orange
47          Latvia  Post UK rebate   0.176    blue
48         Denmark   Pre UK rebate   2.551  orange
49         Denmark  Post UK rebate   2.727    blue
50         Ireland   Pre UK rebate   1.408  orange
51         Ireland  Post UK rebate   1.496    blue
52              UK   Pre UK rebate  18.651  orange
53              UK  Post UK rebate  14.780    blue
# query is: Budget of Slovenia Pre UK rebate
# expected output type:[dtype('float64')]
# expected output is:
   ANSWER
0   0.616
# inferred DSL terminals:
  # ConstVal: ['UK@Str', 'Pre UK rebate@Str', 'budget@Str', 'Post UK rebate@Str', 'Slovenia@Str', '<NULL>']
     # cmap: [('uk', 'UK'), ('pre', 'Pre UK rebate'), ('budget', 'budget'), ('uk', 'Post UK rebate'), ('rebate', 'Post UK rebate'), ('slovenia', 'Slovenia'), ('uk', 'Pre UK rebate'), ('rebate', 'Pre UK rebate')]
  # AggrFunc: ['<NULL>']
     # amap: []
  # NumFunc: ['<NULL>']
     # nmap: []
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 1.408}]
  # found 0 program(s)
# (t=6.47) i=1, candidate=[{'ANSWER': 6.246}]
  # found 0 program(s)
# (t=12.88) i=2, candidate=[{'ANSWER': 6.51}]
  # found 0 program(s)
# (t=19.17) i=3, candidate=[{'ANSWER': 0.616}]
  # found 4 program(s)
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, Slovenia@Str), ==, 1, Pre UK rebate@Str), ['2'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'country', 'Slovenia'], '==', 'budgetcategory', 'Pre UK rebate'], ['budget']]
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, Slovenia@Str), ==, 1, Post UK rebate@Str), ['2'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'country', 'Slovenia'], '==', 'budgetcategory', 'Post UK rebate'], ['budget']]
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 1, Pre UK rebate@Str), ==, 0, Slovenia@Str), ['2'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'budgetcategory', 'Pre UK rebate'], '==', 'country', 'Slovenia'], ['budget']]
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 1, Post UK rebate@Str), ==, 0, Slovenia@Str), ['2'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'budgetcategory', 'Post UK rebate'], '==', 'country', 'Slovenia'], ['budget']]
# (t=25.50) i=4, candidate=[{'ANSWER': 0.44}]
  # found 0 program(s)
# (t=31.84) i=5, candidate=[{'ANSWER': 18.651}]
  # found 2 program(s)
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, UK@Str), ==, 1, Pre UK rebate@Str), ['2'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'country', 'UK'], '==', 'budgetcategory', 'Pre UK rebate'], ['budget']]
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 1, Pre UK rebate@Str), ==, 0, UK@Str), ['2'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'budgetcategory', 'Pre UK rebate'], '==', 'country', 'UK'], ['budget']]
# (t=38.16) i=6, candidate=[{'ANSWER': 3.959}]
  # found 0 program(s)
# (t=44.57) i=7, candidate=[{'ANSWER': 1.76}]
  # found 0 program(s)
# (t=51.08) i=8, candidate=[{'ANSWER': 1.496}]
  # found 0 program(s)
# (t=57.52) i=9, candidate=[{'ANSWER': 2.727}]
  # found 0 program(s)
# (t=64.01) i=10, candidate=[{'ANSWER': 1.672}]
  # found 0 program(s)
# (t=70.35) i=11, candidate=[{'ANSWER': 0.88}]
  # found 0 program(s)
# (t=76.73) i=12, candidate=[{'ANSWER': 4.223}]
  # found 0 program(s)
# (t=83.08) i=13, candidate=[{'ANSWER': 0.0}]
  # found 0 program(s)
# (t=89.72) i=14, candidate=[{'ANSWER': 5.103}]
  # found 0 program(s)
# (t=96.09) i=15, candidate=[{'ANSWER': 1.144}]
  # found 0 program(s)
# (t=102.43) i=16, candidate=[{'ANSWER': 3.695}]
  # found 0 program(s)
# (t=108.81) i=17, candidate=[{'ANSWER': 0.176}]
  # found 0 program(s)
# (t=115.22) i=18, candidate=[{'ANSWER': 10.821}]
  # found 0 program(s)
# (t=121.67) i=19, candidate=[{'ANSWER': 2.551}]
  # found 0 program(s)
# (t=128.02) i=20, candidate=[{'ANSWER': 2.375}]
  # found 0 program(s)
# (t=134.36) i=21, candidate=[{'ANSWER': 0.792}]
  # found 0 program(s)
# (t=140.73) i=22, candidate=[{'ANSWER': 2.023}]
  # found 0 program(s)
# (t=147.10) i=23, candidate=[{'ANSWER': 19.795}]
  # found 0 program(s)
# (t=153.46) i=24, candidate=[{'ANSWER': 2.199}]
  # found 0 program(s)
# (t=159.89) i=25, candidate=[{'ANSWER': 15.748}]
  # found 0 program(s)
# (t=166.30) i=26, candidate=[{'ANSWER': 0.264}]
  # found 0 program(s)
# (t=172.64) i=27, candidate=[{'ANSWER': 1.232}]
  # found 0 program(s)
# (t=178.95) i=28, candidate=[{'ANSWER': 14.78}]
  # found 2 program(s)
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, UK@Str), ==, 1, Post UK rebate@Str), ['2'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'country', 'UK'], '==', 'budgetcategory', 'Post UK rebate'], ['budget']]
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 1, Post UK rebate@Str), ==, 0, UK@Str), ['2'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'budgetcategory', 'Post UK rebate'], '==', 'country', 'UK'], ['budget']]
# (t=185.28) i=29, candidate=[{'ANSWER': 25.249}]
  # found 0 program(s)

# ========== review report ========== #
# top-1, score: 2.92, answer: [0.616]
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, Slovenia@Str), ==, 1, Pre UK rebate@Str), ['2'])
# top-2, score: 2.92, answer: [0.616]
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 1, Pre UK rebate@Str), ==, 0, Slovenia@Str), ['2'])
# top-3, score: 2.76, answer: [0.616]
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, Slovenia@Str), ==, 1, Post UK rebate@Str), ['2'])
# top-4, score: 2.76, answer: [0.616]
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 1, Post UK rebate@Str), ==, 0, Slovenia@Str), ['2'])
# top-5, score: 2.76, answer: [18.651]
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, UK@Str), ==, 1, Pre UK rebate@Str), ['2'])
# top-6, score: 2.76, answer: [18.651]
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 1, Pre UK rebate@Str), ==, 0, UK@Str), ['2'])
# top-7, score: 2.59, answer: [14.78]
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, UK@Str), ==, 1, Post UK rebate@Str), ['2'])
# top-8, score: 2.59, answer: [14.78]
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 1, Post UK rebate@Str), ==, 0, UK@Str), ['2'])
