# parsed arguments: Namespace(benchmark='Q15ea6', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'blue', 'apr', 'nov', '286.0', '419.33', '2009', '473.75', '515.25', 'sep', '404.91', '1', '294.15', '471.18', 'jun', '693.0', '432.66', 'date', 'dec', '536.12', '2004', 'mar', '458.16', '400.52', '460.48', '220.0', '583.0', '443.05', '449.45', '192.79', '585.8', '560.19', '526.8', '187.99', 'may', '522.7', '337.99', '338.53', '421.59', 'color', '348.06', '181.98', '362.62', '180.51', '691.48', '378.53', '287.76', '497.91', 'aug', '463.29', '195.62', 'price', '495.85', '471.38', '510.0', '461.67', '307.65', '2010', '372.14', '2008', '386.6', '2007', 'feb', '501.5', 'oct', '417.23', 'jan', '390.0', 'jul', '476.39', '414.86', '371.82', '440.47', '190.64', '359.36', '529.94', '102.37', '401.9', '417.94', '707.0', '619.98', '292.96', '395.97', '564.3', '574.29', '526.42', '2005', '277.27', '567.27', '484.81', '2006', '316.46', '129.6'}
# input type: [dtype('O'), dtype('float64'), dtype('O')]
# input is:
          date   price color
0   Aug 1 2004  102.37  blue
1   Sep 1 2004  129.60  blue
2   Oct 1 2004  190.64  blue
3   Nov 1 2004  181.98  blue
4   Dec 1 2004  192.79  blue
..         ...     ...   ...
63  Nov 1 2009  583.00  blue
64  Dec 1 2009  619.98  blue
65  Jan 1 2010  529.94  blue
66  Feb 1 2010  526.80  blue
67  Mar 1 2010  560.19  blue

[68 rows x 3 columns]
# query is: what was the price as at Jan 1, 2009?
# expected output type:[dtype('float64')]
# expected output is:
   ANSWER
0  338.53
# inferred DSL terminals:
  # ConstVal: ['Nov 1 2008@Str', 'Apr 1 2005@Str', 'Oct 1 2009@Str', 'Nov 1 2006@Str', 'May 1 2007@Str', 'Jun 1 2007@Str', 'Nov 1 2005@Str', 'Jun 1 2005@Str', 'Sep 1 2007@Str', 'Dec 1 2008@Str', 'Jun 1 2008@Str', 'Feb 1 2006@Str', 'Jul 1 2008@Str', 'Aug 1 2008@Str', 'Oct 1 2008@Str', 'Apr 1 2009@Str', 'Sep 1 2004@Str', 'Jun 1 2009@Str', 'Sep 1 2009@Str', 'Dec 1 2009@Str', 'Jul 1 2005@Str', 'Mar 1 2005@Str', 'Aug 1 2006@Str', 'Mar 1 2010@Str', 'Nov 1 2007@Str', 'Apr 1 2007@Str', 'May 1 2008@Str', 'Jan 1 2006@Str', 'Oct 1 2007@Str', 'Aug 1 2005@Str', 'Dec 1 2005@Str', 'Mar 1 2006@Str', 'Jan 1 2009@Str', 'Jul 1 2007@Str', 'May 1 2009@Str', 'Jul 1 2006@Str', 'Jun 1 2006@Str', 'May 1 2006@Str', 'Aug 1 2007@Str', 'Sep 1 2005@Str', 'Jan 1 2010@Str', 'Feb 1 2005@Str', 'Jan 1 2005@Str', 'Dec 1 2007@Str', 'Jan 1 2008@Str', 'Jul 1 2009@Str', 'Feb 1 2009@Str', 'Feb 1 2007@Str', 'Mar 1 2008@Str', 'May 1 2005@Str', 'Oct 1 2005@Str', 'Sep 1 2008@Str', 'Nov 1 2009@Str', 'Nov 1 2004@Str', 'Feb 1 2010@Str', 'Mar 1 2009@Str', 'Oct 1 2006@Str', 'Jan 1 2007@Str', 'price@Str', 'Mar 1 2007@Str', 'Aug 1 2009@Str', 'Oct 1 2004@Str', 'Dec 1 2006@Str', 'Aug 1 2004@Str', 'Dec 1 2004@Str', 'Apr 1 2008@Str', 'Apr 1 2006@Str', 'Feb 1 2008@Str', 'Sep 1 2006@Str', '<NULL>']
     # cmap: [(1, 'Jun 1 2007'), (1, 'Oct 1 2004'), (1, 'Sep 1 2004'), (1, 'Dec 1 2008'), (1, 'Oct 1 2007'), (1, 'Jan 1 2009'), (2009, 'Feb 1 2009'), (1, 'Aug 1 2005'), (1, 'Jul 1 2005'), (1, 'Feb 1 2010'), (1, 'May 1 2009'), (1, 'Mar 1 2007'), (1, 'Dec 1 2009'), (1, 'Dec 1 2007'), (2009, 'Aug 1 2009'), ('jan', 'Jan 1 2008'), (1, 'Apr 1 2006'), (1, 'Jul 1 2008'), (1, 'Jun 1 2009'), (1, 'Nov 1 2007'), (1, 'Dec 1 2004'), (1, 'Aug 1 2007'), (1, 'May 1 2006'), ('jan', 'Jan 1 2005'), (1, 'May 1 2007'), (1, 'Mar 1 2008'), (1, 'Jun 1 2008'), (1, 'Jan 1 2010'), (2009, 'Jan 1 2009'), (1, 'Feb 1 2008'), (1, 'May 1 2005'), (1, 'Jul 1 2006'), (1, 'Dec 1 2005'), (1, 'Mar 1 2006'), (1, 'Aug 1 2004'), (2009, 'Dec 1 2009'), (1, 'Jan 1 2008'), (1, 'Oct 1 2006'), (1, 'Mar 1 2010'), (1, 'Sep 1 2006'), (1, 'Sep 1 2007'), (1, 'Apr 1 2005'), (1, 'Oct 1 2009'), (1, 'Apr 1 2008'), (1, 'Jan 1 2005'), (1, 'Nov 1 2006'), (1, 'Feb 1 2007'), (1, 'Jun 1 2006'), (1, 'Jul 1 2007'), ('jan', 'Jan 1 2006'), (1, 'Dec 1 2006'), (1, 'Nov 1 2008'), (1, 'Feb 1 2005'), ('jan', 'Jan 1 2007'), (2009, 'May 1 2009'), (1, 'Aug 1 2008'), (1, 'Nov 1 2005'), (1, 'Feb 1 2009'), ('jan', 'Jan 1 2009'), (1, 'Nov 1 2009'), (1, 'Jan 1 2006'), (1, 'Jul 1 2009'), (2009, 'Jun 1 2009'), (1, 'Sep 1 2005'), ('price', 'price'), (1, 'Mar 1 2009'), (1, 'Jun 1 2005'), (1, 'Apr 1 2009'), (1, 'Sep 1 2008'), (1, 'Apr 1 2007'), (1, 'Aug 1 2006'), (1, 'Sep 1 2009'), ('jan', 'Jan 1 2010'), (1, 'Feb 1 2006'), (1, 'Oct 1 2005'), (2009, 'Nov 1 2009'), (1, 'May 1 2008'), (2009, 'Jul 1 2009'), (1, 'Mar 1 2005'), (2009, 'Oct 1 2009'), (1, 'Oct 1 2008'), (2009, 'Mar 1 2009'), (2009, 'Apr 1 2009'), (1, 'Aug 1 2009'), (1, 'Nov 1 2004'), (2009, 'Sep 1 2009'), (1, 'Jan 1 2007')]
  # AggrFunc: ['<NULL>']
     # amap: []
  # NumFunc: ['<NULL>']
     # nmap: []
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 536.12}]
---------- timeout ----------
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: [102.37, 129.6, 180.51, 181.98, 187.99, 190.64, 192.79, 195.62, 220.0, 277.27, 286.0, 287.76, 292.96, 294.15, 307.65, 316.46, 337.99, 338.53, 348.06, 359.36, 362.62, 371.82, 372.14, 378.53, 386.6, 390.0, 395.97, 400.52, 401.9, 404.91, 414.86, 417.23, 417.94, 419.33, 421.59, 432.66, 440.47, 443.05, 449.45, 458.16, 460.48, 461.67, 463.29, 471.18, 471.38, 473.75, 476.39, 484.81, 495.85, 497.91, 501.5, 510.0, 515.25, 522.7, 526.42, 526.8, 529.94, 536.12, 560.19, 564.3, 567.27, 574.29, 583.0, 585.8, 619.98, 691.48, 693.0, 707.0, 'Apr 1 2005', 'Apr 1 2006', 'Apr 1 2007', 'Apr 1 2008', 'Apr 1 2009', 'Aug 1 2004', 'Aug 1 2005', 'Aug 1 2006', 'Aug 1 2007', 'Aug 1 2008', 'Aug 1 2009', 'Dec 1 2004', 'Dec 1 2005', 'Dec 1 2006', 'Dec 1 2007', 'Dec 1 2008', 'Dec 1 2009', 'Feb 1 2005', 'Feb 1 2006', 'Feb 1 2007', 'Feb 1 2008', 'Feb 1 2009', 'Feb 1 2010', 'Jan 1 2005', 'Jan 1 2006', 'Jan 1 2007', 'Jan 1 2008', 'Jan 1 2009', 'Jan 1 2010', 'Jul 1 2005', 'Jul 1 2006', 'Jul 1 2007', 'Jul 1 2008', 'Jul 1 2009', 'Jun 1 2005', 'Jun 1 2006', 'Jun 1 2007', 'Jun 1 2008', 'Jun 1 2009', 'Mar 1 2005', 'Mar 1 2006', 'Mar 1 2007', 'Mar 1 2008', 'Mar 1 2009', 'Mar 1 2010', 'May 1 2005', 'May 1 2006', 'May 1 2007', 'May 1 2008', 'May 1 2009', 'Nov 1 2004', 'Nov 1 2005', 'Nov 1 2006', 'Nov 1 2007', 'Nov 1 2008', 'Nov 1 2009', 'Oct 1 2004', 'Oct 1 2005', 'Oct 1 2006', 'Oct 1 2007', 'Oct 1 2008', 'Oct 1 2009', 'Sep 1 2004', 'Sep 1 2005', 'Sep 1 2006', 'Sep 1 2007', 'Sep 1 2008', 'Sep 1 2009', 'blue', 'color', 'date', 'price']
# (t=4308.17) fallback i=0, candidate=[{'ANSWER': 102.37}]
---------- timeout ----------
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: ['<type error>']

# ========== review report ========== #
