# parsed arguments: Namespace(benchmark='Qca5fb', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'2748.917437', 'russia', '2002', '604.2280606', '5220.856542', '4980.980645', '4751.065263', '1998', '2100.743786', '2375.162934', '480.2069446', '2929.303282', '2526.596184', '459.5766355', '4108.574488', '448.0969889', '3413.259971', '420.9653204', '558.4416044', '373.8000229', '1055.136489', '864.7303144', '11700.22112', '949.1780621', '3041.677796', '1996', '1027.906574', '3609.875507', '2005', '3748.934494', '2009', '1041.637704', '3129.755456', '2003', 'teal', '2976.137049', '2651.442018', '9146.41636', '2008', '2006', '731.7417369', '820.2983339', '1273.640743', 'red', '3426.840162', 'blue', '2651.260121', '5337.065324', '1338.986444', 'country', 'gdp', '1775.141291', '2669.946123', '1993', '406.8857207', '4743.264112', '6946.880998', '3095.08716', '3413.588661', '7197.031306', '1999', 'china', '2007', '642.556503', '322.243454', '1126.945129', '1135.44795', 'india', '5109.348611', '1731.125235', '3696.146772', '8628.952841', '380.0984013', '1992', '2812.334223', '1997', '1490.380056', '450.4151061', '8615.658757', '1994', '306.1686498', 'brazil', '820.8630768', '2069.343631', 'color', 'orange', '2000', '1844.485782', '422.9243667', '362.808414', '1995', '469.2131942', '5793.400957', '351.8848828', '8391.668592', '2001', '703.1207994', '774.467161', '2791.968684', '2004', '2663.456988', 'year'}
# input type: [dtype('int64'), dtype('O'), dtype('float64'), dtype('O')]
# input is:
    year country          GDP   color
0   1992  Brazil  2526.596184    blue
1   1993  Brazil  2791.968684    blue
2   1994  Brazil  3426.840162    blue
3   1995  Brazil  4751.065263    blue
4   1996  Brazil  5109.348611    blue
..   ...     ...          ...     ...
67  2005   China  1731.125235  orange
68  2006   China  2069.343631  orange
69  2007   China  2651.260121  orange
70  2008   China  3413.588661  orange
71  2009   China  3748.934494  orange

[72 rows x 4 columns]
# query is: Which countries have GPD per capita higher than 8000 in the year 2009?
# expected output type:[dtype('O')]
# expected output is:
   ANSWER
0  Brazil
1  Russia
# inferred DSL terminals:
  # ConstVal: ['2009@Int', 'country@Str', 'year@Str', '<NULL>']
     # cmap: [(2009, 2009), ('year', 'year'), ('countries', 'country')]
  # AggrFunc: ['<NULL>']
     # amap: []
  # NumFunc: ['-', '<NULL>']
     # nmap: [('higher', '-')]
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# ====> fallback strategy (comparison) is triggered
  # [debug] high_values: [(7488.7136279999995, 4), (7264.723463, 4), (6606.658756999999, 4), (6606.658756999999, 4), (6606.658756999999, 4), (6382.668592, 4), (6382.668592, 4), (6382.668592, 4), (4866.724262999999, 4), (4642.734098, 4)]
  # [debug] high_values (no dup.): [(7488.7136279999995, 4), (7264.723463, 4), (6606.658756999999, 4), (6606.658756999999, 4), (6606.658756999999, 4), (6382.668592, 4), (6382.668592, 4), (6382.668592, 4), (4866.724262999999, 4), (4642.734098, 4)]
  # [debug] filtered low_values (no dup.): [(10573.275991, 2), (9691.22112, 2), (9691.22112, 2), (9691.22112, 2), (9691.22112, 2), (8309.4901072, 2), (8293.415303, 2), (8263.7738742, 2), (8252.850343, 2), (8241.858734099998, 2)]
  # [debug] fallback (comparison) answers are added
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 'Brazil'}]
  # found 0 program(s)
# (t=5.37) i=1, candidate=[{'ANSWER': 'Brazil'}, {'ANSWER': 'Russia'}]
  # found 0 program(s)
# (t=5.84) i=2, candidate=[{'ANSWER': 'Russia'}]
  # found 0 program(s)
# (t=11.22) i=3, candidate=[{'ANSWER': 7488.7136279999995}]
  # found 0 program(s)
# (t=16.24) i=4, candidate=[{'ANSWER': 7264.723463}]
  # found 0 program(s)
# (t=21.23) i=5, candidate=[{'ANSWER': 6606.658756999999}]
  # found 0 program(s)
# (t=26.23) i=6, candidate=[{'ANSWER': 6606.658756999999}]
  # found 0 program(s)
# (t=31.24) i=7, candidate=[{'ANSWER': 6606.658756999999}]
  # found 0 program(s)
# (t=36.24) i=8, candidate=[{'ANSWER': 6382.668592}]
  # found 0 program(s)
# (t=41.28) i=9, candidate=[{'ANSWER': 6382.668592}]
  # found 0 program(s)
# (t=46.26) i=10, candidate=[{'ANSWER': 6382.668592}]
  # found 0 program(s)
# (t=51.23) i=11, candidate=[{'ANSWER': 4866.724262999999}]
  # found 0 program(s)
# (t=56.27) i=12, candidate=[{'ANSWER': 4642.734098}]
  # found 0 program(s)
# (t=61.31) i=13, candidate=[{'ANSWER': 10573.275991}]
  # found 0 program(s)
# (t=66.33) i=14, candidate=[{'ANSWER': 9691.22112}]
  # found 0 program(s)
# (t=71.41) i=15, candidate=[{'ANSWER': 9691.22112}]
  # found 0 program(s)
# (t=76.54) i=16, candidate=[{'ANSWER': 9691.22112}]
  # found 0 program(s)
# (t=81.65) i=17, candidate=[{'ANSWER': 9691.22112}]
  # found 0 program(s)
# (t=86.78) i=18, candidate=[{'ANSWER': 8309.4901072}]
  # found 0 program(s)
# (t=91.90) i=19, candidate=[{'ANSWER': 8293.415303}]
  # found 0 program(s)
# (t=96.99) i=20, candidate=[{'ANSWER': 8263.7738742}]
  # found 0 program(s)
# (t=102.15) i=21, candidate=[{'ANSWER': 8252.850343}]
  # found 0 program(s)
# (t=107.32) i=22, candidate=[{'ANSWER': 8241.858734099998}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: [1027.906574, 1041.637704, 1055.136489, 1126.945129, 1135.44795, 11700.22112, 1273.640743, 1338.986444, 1490.380056, 1731.125235, 1775.141291, 1844.485782, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2069.343631, 2100.743786, 2375.162934, 2526.596184, 2651.260121, 2651.442018, 2663.456988, 2669.946123, 2748.917437, 2791.968684, 2812.334223, 2929.303282, 2976.137049, 3041.677796, 306.1686498, 3095.08716, 3129.755456, 322.243454, 3413.259971, 3413.588661, 3426.840162, 351.8848828, 3609.875507, 362.808414, 3696.146772, 373.8000229, 3748.934494, 380.0984013, 406.8857207, 4108.574488, 420.9653204, 422.9243667, 448.0969889, 450.4151061, 459.5766355, 469.2131942, 4743.264112, 4751.065263, 480.2069446, 4980.980645, 5109.348611, 5220.856542, 5337.065324, 558.4416044, 5793.400957, 604.2280606, 642.556503, 6946.880998, 703.1207994, 7197.031306, 731.7417369, 774.467161, 820.2983339, 820.8630768, 8391.668592, 8615.658757, 8628.952841, 864.7303144, 9146.41636, 949.1780621, 'Brazil', 'China', 'GDP', 'India', 'Russia', 'blue', 'color', 'country', 'orange', 'red', 'teal', 'year']
# (t=112.45) fallback i=0, candidate=[{'ANSWER': 1027.906574}]
  # found 0 program(s)
# (t=117.96) fallback i=1, candidate=[{'ANSWER': 1041.637704}]
  # found 0 program(s)
# (t=123.39) fallback i=2, candidate=[{'ANSWER': 1055.136489}]
  # found 0 program(s)
# (t=128.87) fallback i=3, candidate=[{'ANSWER': 1126.945129}]
  # found 0 program(s)
# (t=134.36) fallback i=4, candidate=[{'ANSWER': 1135.44795}]
  # found 0 program(s)
# (t=139.83) fallback i=5, candidate=[{'ANSWER': 11700.22112}]
  # found 0 program(s)
# (t=145.25) fallback i=6, candidate=[{'ANSWER': 1273.640743}]
  # found 0 program(s)
# (t=150.73) fallback i=7, candidate=[{'ANSWER': 1338.986444}]
  # found 0 program(s)
# (t=156.38) fallback i=8, candidate=[{'ANSWER': 1490.380056}]
  # found 0 program(s)
# (t=161.87) fallback i=9, candidate=[{'ANSWER': 1731.125235}]
  # found 0 program(s)
# (t=167.37) fallback i=10, candidate=[{'ANSWER': 1775.141291}]
  # found 0 program(s)
# (t=172.91) fallback i=11, candidate=[{'ANSWER': 1844.485782}]
  # found 0 program(s)
# (t=178.48) fallback i=12, candidate=[{'ANSWER': 1992}]
  # found 0 program(s)
# (t=184.03) fallback i=13, candidate=[{'ANSWER': 1993}]
  # found 0 program(s)
# (t=189.57) fallback i=14, candidate=[{'ANSWER': 1994}]
  # found 0 program(s)
# (t=195.10) fallback i=15, candidate=[{'ANSWER': 1995}]
  # found 0 program(s)
# (t=200.69) fallback i=16, candidate=[{'ANSWER': 1996}]
  # found 0 program(s)
# (t=206.28) fallback i=17, candidate=[{'ANSWER': 1997}]
  # found 0 program(s)
# (t=211.82) fallback i=18, candidate=[{'ANSWER': 1998}]
  # found 0 program(s)
# (t=217.39) fallback i=19, candidate=[{'ANSWER': 1999}]
  # found 0 program(s)
# (t=222.95) fallback i=20, candidate=[{'ANSWER': 2000}]
  # found 0 program(s)
# (t=228.53) fallback i=21, candidate=[{'ANSWER': 2001}]
  # found 0 program(s)
# (t=234.04) fallback i=22, candidate=[{'ANSWER': 2002}]
  # found 0 program(s)
# (t=239.56) fallback i=23, candidate=[{'ANSWER': 2003}]
  # found 0 program(s)
# (t=245.07) fallback i=24, candidate=[{'ANSWER': 2004}]
  # found 0 program(s)
# (t=250.61) fallback i=25, candidate=[{'ANSWER': 2005}]
  # found 0 program(s)
# (t=256.10) fallback i=26, candidate=[{'ANSWER': 2006}]
  # found 0 program(s)
# (t=261.60) fallback i=27, candidate=[{'ANSWER': 2007}]
  # found 0 program(s)
# (t=267.17) fallback i=28, candidate=[{'ANSWER': 2008}]
  # found 0 program(s)
# (t=272.76) fallback i=29, candidate=[{'ANSWER': 2009}]
  # found 0 program(s)
# (t=278.37) fallback i=30, candidate=[{'ANSWER': 2069.343631}]
  # found 0 program(s)
# (t=283.91) fallback i=31, candidate=[{'ANSWER': 2100.743786}]
  # found 0 program(s)
# (t=289.49) fallback i=32, candidate=[{'ANSWER': 2375.162934}]
  # found 0 program(s)
# (t=295.00) fallback i=33, candidate=[{'ANSWER': 2526.596184}]
---------- timeout ----------
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: ['Brazil', 'Russia']

# ========== review report ========== #
