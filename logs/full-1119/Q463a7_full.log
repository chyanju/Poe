# parsed arguments: Namespace(benchmark='Q463a7', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'18-59', '7', 'orange', '20', 'age', '5-11', '0-4', '10', '24', 'percentage', 'gender', 'male', '60+', 'color', '9', 'group', 'blue', '12-17', 'female', '2', '1'}
# input type: [dtype('O'), dtype('O'), dtype('int64'), dtype('O')]
# input is:
  Age group  Gender  Percentage   color
0       0-4    Male           9  orange
1       0-4  Female           9    blue
2     12-17    Male           7  orange
3     12-17  Female           7    blue
4     18-59  Female          24    blue
5     18-59    Male          20  orange
6       60+  Female           2    blue
7       60+    Male           1  orange
8      5-11    Male          10  orange
9      5-11  Female          10    blue
# query is: Does the 60+ age group have a percentage higher than ten for it's female or male population size?
# expected output type:[dtype('O')]
# expected output is:
  ANSWER
0     No
# inferred DSL terminals:
  # ConstVal: ['60+@Str', 'Female@Str', 'Age group@Str', 'Male@Str', 'Percentage@Str', '<NULL>']
     # cmap: [('female', 'Female'), ('group', 'Age group'), ('+', '60+'), (60, '60+'), ('percentage', 'Percentage'), ('age', 'Age group'), ('male', 'Male')]
  # AggrFunc: ['<NULL>']
     # amap: []
  # NumFunc: ['-', '<NULL>']
     # nmap: [('higher', '-')]
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# ====> fallback strategy (comparison) is triggered
  # [debug] high_values: [(1, 16), (-1, 16), (23, 8), (22, 8), (19, 8), (18, 8), (9, 8), (9, 8), (8, 8), (8, 8)]
  # [debug] high_values (no dup.): [(1, 16), (-1, 16), (23, 8), (22, 8), (19, 8), (18, 8), (9, 8), (9, 8), (8, 8), (8, 8)]
  # [debug] filtered low_values (no dup.): []
# ====> fallback strategy (selection) is triggered
  # [debug] fallback (selection) answers: ['60+', 'Female', 'Age group', 'Male', 'Percentage']
  # [debug] fallback (selection) answers (no dup.): ['60+', 'Age group', 'Percentage']
  # [debug] 3 fallback (selection) answers are added
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 'Female'}]
  # found 2 program(s)
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, 60+@Str), ==, 1, Female@Str), ['1'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'Age group', '60+'], '==', 'Gender', 'Female'], ['Gender']]
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 1, Female@Str), ==, 0, 60+@Str), ['1'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'Gender', 'Female'], '==', 'Age group', '60+'], ['Gender']]
# (t=10.39) i=1, candidate=[{'ANSWER': 'Male'}]
  # found 2 program(s)
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, 60+@Str), ==, 1, Male@Str), ['1'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'Age group', '60+'], '==', 'Gender', 'Male'], ['Gender']]
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 1, Male@Str), ==, 0, 60+@Str), ['1'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'Gender', 'Male'], '==', 'Age group', '60+'], ['Gender']]
# (t=20.66) i=2, candidate=[{'ANSWER': 1}]
  # found 3 program(s)
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, 60+@Str), ==, 1, Male@Str), ['2'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'Age group', '60+'], '==', 'Gender', 'Male'], ['Percentage']]
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 1, Male@Str), ==, 0, 60+@Str), ['2'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'Gender', 'Male'], '==', 'Age group', '60+'], ['Percentage']]
    # Contrast(SelectRow1(@param0, ==, 0, 60+@Str), -, 1, Female@Str, Male@Str, 2)
      --> ['Contrast', ['SelectRow1', 'input@0', '==', 'Age group', '60+'], '-', 'Gender', 'Female', 'Male', 'Percentage']
# (t=30.88) i=3, candidate=[{'ANSWER': -1}]
  # found 1 program(s)
    # Contrast(SelectRow1(@param0, ==, 0, 60+@Str), -, 1, Male@Str, Female@Str, 2)
      --> ['Contrast', ['SelectRow1', 'input@0', '==', 'Age group', '60+'], '-', 'Gender', 'Male', 'Female', 'Percentage']
# (t=40.01) i=4, candidate=[{'ANSWER': 23}]
  # found 0 program(s)
# (t=49.19) i=5, candidate=[{'ANSWER': 22}]
  # found 0 program(s)
# (t=58.37) i=6, candidate=[{'ANSWER': 19}]
  # found 0 program(s)
# (t=67.58) i=7, candidate=[{'ANSWER': 18}]
  # found 0 program(s)
# (t=76.82) i=8, candidate=[{'ANSWER': 9}]
  # found 0 program(s)
# (t=87.13) i=9, candidate=[{'ANSWER': 9}]
  # found 0 program(s)
# (t=97.40) i=10, candidate=[{'ANSWER': 8}]
  # found 0 program(s)
# (t=106.61) i=11, candidate=[{'ANSWER': 8}]
  # found 0 program(s)
# (t=115.76) i=12, candidate=[{'ANSWER': '60+'}]
  # found 4 program(s)
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, 60+@Str), ==, 1, Female@Str), ['0'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'Age group', '60+'], '==', 'Gender', 'Female'], ['Age group']]
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, 60+@Str), ==, 1, Male@Str), ['0'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'Age group', '60+'], '==', 'Gender', 'Male'], ['Age group']]
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 1, Female@Str), ==, 0, 60+@Str), ['0'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'Gender', 'Female'], '==', 'Age group', '60+'], ['Age group']]
    # SelectCol(SelectRow1(SelectRow1(@param0, ==, 1, Male@Str), ==, 0, 60+@Str), ['0'])
      --> ['SelectCol', ['SelectRow1', ['SelectRow1', 'input@0', '==', 'Gender', 'Male'], '==', 'Age group', '60+'], ['Age group']]
# (t=125.93) i=13, candidate=[{'ANSWER': 'Age group'}]
  # found 0 program(s)
# (t=135.13) i=14, candidate=[{'ANSWER': 'Percentage'}]
  # found 0 program(s)

# ========== review report ========== #
# top-1, score: 2.49, answer: [1]
  # tprog: Contrast(SelectRow1(@param0, ==, 0, 60+@Str), -, 1, Female@Str, Male@Str, 2)
# top-2, score: 2.49, answer: [-1]
  # tprog: Contrast(SelectRow1(@param0, ==, 0, 60+@Str), -, 1, Male@Str, Female@Str, 2)
# top-3, score: 2.39, answer: [1]
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, 60+@Str), ==, 1, Male@Str), ['2'])
# top-4, score: 2.39, answer: [1]
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 1, Male@Str), ==, 0, 60+@Str), ['2'])
# top-5, score: 2.34, answer: ['Female']
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, 60+@Str), ==, 1, Female@Str), ['1'])
# top-6, score: 2.34, answer: ['Female']
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 1, Female@Str), ==, 0, 60+@Str), ['1'])
# top-7, score: 2.34, answer: ['Male']
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, 60+@Str), ==, 1, Male@Str), ['1'])
# top-8, score: 2.34, answer: ['Male']
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 1, Male@Str), ==, 0, 60+@Str), ['1'])
# top-9, score: 2.34, answer: ['60+']
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, 60+@Str), ==, 1, Female@Str), ['0'])
# top-10, score: 2.34, answer: ['60+']
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 0, 60+@Str), ==, 1, Male@Str), ['0'])
# top-11, score: 2.34, answer: ['60+']
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 1, Female@Str), ==, 0, 60+@Str), ['0'])
# top-12, score: 2.34, answer: ['60+']
  # tprog: SelectCol(SelectRow1(SelectRow1(@param0, ==, 1, Male@Str), ==, 0, 60+@Str), ['0'])
