# parsed arguments: Namespace(benchmark='Q2911a', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'1230', '2002', '1138', 'color', '2006', 'deaths', '884', '1459', '2001', '4140', '1413', '2012', '1999', '2009', '2008', '1115', '2004', '771', '828', 'blue', '2011', 'year', '1103', '2007', '1294', '2000', '2010', '794', '1582', '2005', '971', '2003'}
# input type: [dtype('int64'), dtype('int64'), dtype('O')]
# input is:
    year  deaths color
0   2012     794  blue
1   2011     828  blue
2   2010    1115  blue
3   2009    1103  blue
4   2008     884  blue
5   2007     971  blue
6   2006    1294  blue
7   2005    1459  blue
8   2004     771  blue
9   2003    1230  blue
10  2002    1413  blue
11  2001    4140  blue
12  2000    1582  blue
13  1999    1138  blue
# query is: How many years are we tracking deaths?
# expected output type:[dtype('int64')]
# expected output is:
   ANSWER
0      14
# inferred DSL terminals:
  # ConstVal: ['year@Str', 'deaths@Str', '<NULL>']
     # cmap: [('years', 'year'), ('deaths', 'deaths')]
  # AggrFunc: ['count', '<NULL>']
     # amap: [('how many', 'count')]
  # NumFunc: ['<NULL>']
     # nmap: []
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 1}]
  # found 0 program(s)
# (t=0.75) i=1, candidate=[{'ANSWER': 2}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: [1103, 1115, 1138, 1230, 1294, 1413, 1459, 1582, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 4140, 771, 794, 828, 884, 971, 'blue', 'color', 'deaths', 'year']
# (t=1.49) fallback i=0, candidate=[{'ANSWER': 1103}]
  # found 0 program(s)
# (t=2.31) fallback i=1, candidate=[{'ANSWER': 1115}]
  # found 0 program(s)
# (t=3.14) fallback i=2, candidate=[{'ANSWER': 1138}]
  # found 0 program(s)
# (t=3.95) fallback i=3, candidate=[{'ANSWER': 1230}]
  # found 0 program(s)
# (t=4.78) fallback i=4, candidate=[{'ANSWER': 1294}]
  # found 0 program(s)
# (t=5.61) fallback i=5, candidate=[{'ANSWER': 1413}]
  # found 0 program(s)
# (t=6.44) fallback i=6, candidate=[{'ANSWER': 1459}]
  # found 0 program(s)
# (t=7.27) fallback i=7, candidate=[{'ANSWER': 1582}]
  # found 0 program(s)
# (t=8.11) fallback i=8, candidate=[{'ANSWER': 1999}]
  # found 0 program(s)
# (t=8.94) fallback i=9, candidate=[{'ANSWER': 2000}]
  # found 0 program(s)
# (t=9.79) fallback i=10, candidate=[{'ANSWER': 2001}]
  # found 0 program(s)
# (t=10.63) fallback i=11, candidate=[{'ANSWER': 2002}]
  # found 0 program(s)
# (t=11.47) fallback i=12, candidate=[{'ANSWER': 2003}]
  # found 0 program(s)
# (t=12.31) fallback i=13, candidate=[{'ANSWER': 2004}]
  # found 0 program(s)
# (t=13.15) fallback i=14, candidate=[{'ANSWER': 2005}]
  # found 0 program(s)
# (t=13.99) fallback i=15, candidate=[{'ANSWER': 2006}]
  # found 0 program(s)
# (t=14.83) fallback i=16, candidate=[{'ANSWER': 2007}]
  # found 0 program(s)
# (t=15.68) fallback i=17, candidate=[{'ANSWER': 2008}]
  # found 0 program(s)
# (t=16.52) fallback i=18, candidate=[{'ANSWER': 2009}]
  # found 0 program(s)
# (t=17.37) fallback i=19, candidate=[{'ANSWER': 2010}]
  # found 0 program(s)
# (t=18.21) fallback i=20, candidate=[{'ANSWER': 2011}]
  # found 0 program(s)
# (t=19.06) fallback i=21, candidate=[{'ANSWER': 2012}]
  # found 0 program(s)
# (t=19.90) fallback i=22, candidate=[{'ANSWER': 4140}]
  # found 0 program(s)
# (t=20.74) fallback i=23, candidate=[{'ANSWER': 771}]
  # found 0 program(s)
# (t=21.58) fallback i=24, candidate=[{'ANSWER': 794}]
  # found 0 program(s)
# (t=22.42) fallback i=25, candidate=[{'ANSWER': 828}]
  # found 0 program(s)
# (t=23.25) fallback i=26, candidate=[{'ANSWER': 884}]
  # found 0 program(s)
# (t=24.09) fallback i=27, candidate=[{'ANSWER': 971}]
  # found 0 program(s)
# (t=24.92) fallback i=28, candidate=[{'ANSWER': 'blue'}]
  # found 0 program(s)
# (t=25.75) fallback i=29, candidate=[{'ANSWER': 'color'}]
  # found 0 program(s)
# (t=26.49) fallback i=30, candidate=[{'ANSWER': 'deaths'}]
  # found 0 program(s)
# (t=27.24) fallback i=31, candidate=[{'ANSWER': 'year'}]
  # found 0 program(s)
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: [13]

# ========== review report ========== #
