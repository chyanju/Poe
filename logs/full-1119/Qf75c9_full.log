# parsed arguments: Namespace(benchmark='Qf75c9', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'vnm', '1824530000', 'ken', '1033040000', '2006940000', 'pak', '1158820000', 'tza', '1215280000', '5472120000', 'donation', '849210000', 'blue', 'nga', '1655460000', 'country', '2219230000', 'bgd', '1357330000', '886580000', 'hti', '925510000', '2388330000', 'uga', 'moz', '821580000', 'eth', 'cog', 'chn', 'color', '2415910000', 'gha', '1031740000', '899670000', 'irq', 'cod', 'ind', '2327780000', '1927720000', 'sdn', 'afg', 'idn', '1538320000', 'zaf'}
# input type: [dtype('O'), dtype('int64'), dtype('O')]
# input is:
   country    donation color
0      AFG  5472120000  blue
1      PAK  2415910000  blue
2      COD  2388330000  blue
3      HTI  2327780000  blue
4      IND  2219230000  blue
5      IRQ  2006940000  blue
6      ETH  1927720000  blue
7      VNM  1824530000  blue
8      TZA  1655460000  blue
9      SDN  1538320000  blue
10     MOZ  1357330000  blue
11     COG  1215280000  blue
12     KEN  1158820000  blue
13     UGA  1033040000  blue
14     IDN  1031740000  blue
15     CHN   925510000  blue
16     GHA   899670000  blue
17     BGD   886580000  blue
18     NGA   849210000  blue
19     ZAF   821580000  blue
# query is: How many countries received more than 2,000,000,000 in donations?
# expected output type:[dtype('int64')]
# expected output is:
   ANSWER
0       6
# inferred DSL terminals:
  # ConstVal: ['country@Str', 'donation@Str', '<NULL>']
     # cmap: [('countries', 'country'), ('donations', 'donation')]
  # AggrFunc: ['count', '<NULL>']
     # amap: [('how many', 'count')]
  # NumFunc: ['-', '<NULL>']
     # nmap: [('more', '-')]
  # BoolFunc: ['>=', '>', '==', '<NULL>']
     # bmap: [('more', '>'), (None, '=='), ('more', '>=')]
  # IndFunc: ['<NULL>']
     # imap: []
# ====> fallback strategy (comparison) is triggered
  # [debug] high_values: []
  # [debug] high_values (no dup.): []
  # [debug] filtered low_values (no dup.): []
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 1}]
  # found 0 program(s)
# (t=0.84) i=1, candidate=[{'ANSWER': 2}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: [1031740000, 1033040000, 1158820000, 1215280000, 1357330000, 1538320000, 1655460000, 1824530000, 1927720000, 2006940000, 2219230000, 2327780000, 2388330000, 2415910000, 5472120000, 821580000, 849210000, 886580000, 899670000, 925510000, 'AFG', 'BGD', 'CHN', 'COD', 'COG', 'ETH', 'GHA', 'HTI', 'IDN', 'IND', 'IRQ', 'KEN', 'MOZ', 'NGA', 'PAK', 'SDN', 'TZA', 'UGA', 'VNM', 'ZAF', 'blue', 'color', 'country', 'donation']
# (t=1.68) fallback i=0, candidate=[{'ANSWER': 1031740000}]
  # found 0 program(s)
# (t=2.60) fallback i=1, candidate=[{'ANSWER': 1033040000}]
  # found 0 program(s)
# (t=3.53) fallback i=2, candidate=[{'ANSWER': 1158820000}]
  # found 0 program(s)
# (t=4.46) fallback i=3, candidate=[{'ANSWER': 1215280000}]
  # found 0 program(s)
# (t=5.39) fallback i=4, candidate=[{'ANSWER': 1357330000}]
  # found 0 program(s)
# (t=6.34) fallback i=5, candidate=[{'ANSWER': 1538320000}]
  # found 0 program(s)
# (t=7.27) fallback i=6, candidate=[{'ANSWER': 1655460000}]
  # found 0 program(s)
# (t=8.23) fallback i=7, candidate=[{'ANSWER': 1824530000}]
  # found 0 program(s)
# (t=9.17) fallback i=8, candidate=[{'ANSWER': 1927720000}]
  # found 0 program(s)
# (t=10.12) fallback i=9, candidate=[{'ANSWER': 2006940000}]
  # found 0 program(s)
# (t=11.06) fallback i=10, candidate=[{'ANSWER': 2219230000}]
  # found 0 program(s)
# (t=12.00) fallback i=11, candidate=[{'ANSWER': 2327780000}]
  # found 0 program(s)
# (t=12.94) fallback i=12, candidate=[{'ANSWER': 2388330000}]
  # found 0 program(s)
# (t=13.87) fallback i=13, candidate=[{'ANSWER': 2415910000}]
  # found 0 program(s)
# (t=14.80) fallback i=14, candidate=[{'ANSWER': 5472120000}]
  # found 0 program(s)
# (t=15.75) fallback i=15, candidate=[{'ANSWER': 821580000}]
  # found 0 program(s)
# (t=16.68) fallback i=16, candidate=[{'ANSWER': 849210000}]
  # found 0 program(s)
# (t=17.61) fallback i=17, candidate=[{'ANSWER': 886580000}]
  # found 0 program(s)
# (t=18.53) fallback i=18, candidate=[{'ANSWER': 899670000}]
  # found 0 program(s)
# (t=19.45) fallback i=19, candidate=[{'ANSWER': 925510000}]
  # found 0 program(s)
# (t=20.40) fallback i=20, candidate=[{'ANSWER': 'AFG'}]
  # found 0 program(s)
# (t=21.34) fallback i=21, candidate=[{'ANSWER': 'BGD'}]
  # found 0 program(s)
# (t=22.28) fallback i=22, candidate=[{'ANSWER': 'CHN'}]
  # found 0 program(s)
# (t=23.21) fallback i=23, candidate=[{'ANSWER': 'COD'}]
  # found 0 program(s)
# (t=24.16) fallback i=24, candidate=[{'ANSWER': 'COG'}]
  # found 0 program(s)
# (t=25.09) fallback i=25, candidate=[{'ANSWER': 'ETH'}]
  # found 0 program(s)
# (t=26.03) fallback i=26, candidate=[{'ANSWER': 'GHA'}]
  # found 0 program(s)
# (t=26.96) fallback i=27, candidate=[{'ANSWER': 'HTI'}]
  # found 0 program(s)
# (t=27.89) fallback i=28, candidate=[{'ANSWER': 'IDN'}]
  # found 0 program(s)
# (t=28.83) fallback i=29, candidate=[{'ANSWER': 'IND'}]
  # found 0 program(s)
# (t=29.78) fallback i=30, candidate=[{'ANSWER': 'IRQ'}]
  # found 0 program(s)
# (t=30.72) fallback i=31, candidate=[{'ANSWER': 'KEN'}]
  # found 0 program(s)
# (t=31.67) fallback i=32, candidate=[{'ANSWER': 'MOZ'}]
  # found 0 program(s)
# (t=32.62) fallback i=33, candidate=[{'ANSWER': 'NGA'}]
  # found 0 program(s)
# (t=33.57) fallback i=34, candidate=[{'ANSWER': 'PAK'}]
  # found 0 program(s)
# (t=34.51) fallback i=35, candidate=[{'ANSWER': 'SDN'}]
  # found 0 program(s)
# (t=35.46) fallback i=36, candidate=[{'ANSWER': 'TZA'}]
  # found 0 program(s)
# (t=36.39) fallback i=37, candidate=[{'ANSWER': 'UGA'}]
  # found 0 program(s)
# (t=37.33) fallback i=38, candidate=[{'ANSWER': 'VNM'}]
  # found 0 program(s)
# (t=38.26) fallback i=39, candidate=[{'ANSWER': 'ZAF'}]
  # found 0 program(s)
# (t=39.19) fallback i=40, candidate=[{'ANSWER': 'blue'}]
  # found 0 program(s)
# (t=40.13) fallback i=41, candidate=[{'ANSWER': 'color'}]
  # found 0 program(s)
# (t=40.96) fallback i=42, candidate=[{'ANSWER': 'country'}]
  # found 0 program(s)
# (t=42.06) fallback i=43, candidate=[{'ANSWER': 'donation'}]
  # found 0 program(s)
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: [6]

# ========== review report ========== #
