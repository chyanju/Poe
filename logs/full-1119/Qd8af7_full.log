# parsed arguments: Namespace(benchmark='Qd8af7', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'blue', '183', 'amphibians', 'belize', 'rica', '182', '101', 'country', 'guatemala', '30', 'nicaragua', 'honduras', '46', 'costa', 'salvador', 'panama', 'color', '61', 'el', '133'}
# input type: [dtype('O'), dtype('int64'), dtype('O')]
# input is:
       Country  Amphibians color
0       Belize          46  blue
1   Costa Rica         183  blue
2  El Salvador          30  blue
3    Guatemala         133  blue
4     Honduras         101  blue
5    Nicaragua          61  blue
6       Panama         182  blue
# query is: Does Costa Rica and Panama amphibians species account for more or less than the 50% of the total number of species?
# expected output type:[dtype('O')]
# expected output is:
  ANSWER
0   less
# inferred DSL terminals:
  # ConstVal: ['Costa Rica@Str', 'Amphibians@Str', 'Panama@Str', '<NULL>']
     # cmap: [('rica', 'Costa Rica'), ('amphibians', 'Amphibians'), ('panama', 'Panama'), ('costa', 'Costa Rica')]
  # AggrFunc: ['sum', 'count', '<NULL>']
     # amap: [('total', 'count'), ('total', 'sum')]
  # NumFunc: ['diff', '<NULL>']
     # nmap: [('more or less', 'diff')]
  # BoolFunc: ['>=', '<=', '==', '<', '>', '<NULL>']
     # bmap: [('less', '<'), ('more', '>'), ('more', '>='), ('less', '<='), (None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# ====> fallback strategy (comparison) is triggered
  # [debug] high_values: [(1, 6), (-1, 6)]
  # [debug] high_values (no dup.): [(1, 6), (-1, 6)]
  # [debug] filtered low_values (no dup.): [(153, 3), (137, 3), (122, 3), (82, 3), (50, 3), (-50, 3), (-82, 3), (-122, 3), (-137, 3), (-153, 3)]
  # [debug] fallback (comparison) answers are added
# ====> fallback strategy (selection) is triggered
  # [debug] fallback (selection) answers: ['Costa Rica', 'Amphibians', 'Panama']
  # [debug] fallback (selection) answers (no dup.): ['Costa Rica', 'Amphibians', 'Panama']
  # [debug] 3 fallback (selection) answers are added
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': '<type error>'}]
  # found 0 program(s)
# (t=1.77) i=1, candidate=[{'ANSWER': 1}]
  # found 8 program(s)
    # Summarize(SelectRow1(@param0, ==, 0, Costa Rica@Str), count, 0)
      --> ['Summarize', ['SelectRow1', 'input@0', '==', 'Country', 'Costa Rica'], 'count', 'Country']
    # Summarize(SelectRow1(@param0, ==, 0, Costa Rica@Str), count, 1)
      --> ['Summarize', ['SelectRow1', 'input@0', '==', 'Country', 'Costa Rica'], 'count', 'Amphibians']
    # Summarize(SelectRow1(@param0, ==, 0, Costa Rica@Str), count, 2)
      --> ['Summarize', ['SelectRow1', 'input@0', '==', 'Country', 'Costa Rica'], 'count', 'color']
    # Summarize(SelectRow1(@param0, ==, 0, Panama@Str), count, 0)
      --> ['Summarize', ['SelectRow1', 'input@0', '==', 'Country', 'Panama'], 'count', 'Country']
    # Summarize(SelectRow1(@param0, ==, 0, Panama@Str), count, 1)
      --> ['Summarize', ['SelectRow1', 'input@0', '==', 'Country', 'Panama'], 'count', 'Amphibians']
    # Summarize(SelectRow1(@param0, ==, 0, Panama@Str), count, 2)
      --> ['Summarize', ['SelectRow1', 'input@0', '==', 'Country', 'Panama'], 'count', 'color']
    # Contrast(@param0, diff, 0, Costa Rica@Str, Panama@Str, 1)
      --> ['Contrast', 'input@0', 'diff', 'Country', 'Costa Rica', 'Panama', 'Amphibians']
    # Contrast(@param0, diff, 0, Panama@Str, Costa Rica@Str, 1)
      --> ['Contrast', 'input@0', 'diff', 'Country', 'Panama', 'Costa Rica', 'Amphibians']
# (t=3.52) i=2, candidate=[{'ANSWER': -1}]
  # found 0 program(s)
# (t=5.27) i=3, candidate=[{'ANSWER': 153}]
  # found 0 program(s)
# (t=7.02) i=4, candidate=[{'ANSWER': 137}]
  # found 0 program(s)
# (t=8.77) i=5, candidate=[{'ANSWER': 122}]
  # found 0 program(s)
# (t=10.52) i=6, candidate=[{'ANSWER': 82}]
  # found 0 program(s)
# (t=12.28) i=7, candidate=[{'ANSWER': 50}]
  # found 0 program(s)
# (t=14.03) i=8, candidate=[{'ANSWER': -50}]
  # found 0 program(s)
# (t=15.77) i=9, candidate=[{'ANSWER': -82}]
  # found 0 program(s)
# (t=17.53) i=10, candidate=[{'ANSWER': -122}]
  # found 0 program(s)
# (t=19.27) i=11, candidate=[{'ANSWER': -137}]
  # found 0 program(s)
# (t=21.04) i=12, candidate=[{'ANSWER': -153}]
  # found 0 program(s)
# (t=22.79) i=13, candidate=[{'ANSWER': 'Costa Rica'}]
  # found 2 program(s)
    # SelectCol(SelectRow1(@param0, ==, 0, Costa Rica@Str), ['0'])
      --> ['SelectCol', ['SelectRow1', 'input@0', '==', 'Country', 'Costa Rica'], ['Country']]
    # SelectCol(SelectRow1(@param0, ==, 0, Costa Rica@Str), ['-1', '-2'])
      --> ['SelectCol', ['SelectRow1', 'input@0', '==', 'Country', 'Costa Rica'], ['Country']]
# (t=24.75) i=14, candidate=[{'ANSWER': 'Amphibians'}]
  # found 0 program(s)
# (t=26.51) i=15, candidate=[{'ANSWER': 'Panama'}]
  # found 2 program(s)
    # SelectCol(SelectRow1(@param0, ==, 0, Panama@Str), ['0'])
      --> ['SelectCol', ['SelectRow1', 'input@0', '==', 'Country', 'Panama'], ['Country']]
    # SelectCol(SelectRow1(@param0, ==, 0, Panama@Str), ['-1', '-2'])
      --> ['SelectCol', ['SelectRow1', 'input@0', '==', 'Country', 'Panama'], ['Country']]

# ========== review report ========== #
# top-1, score: 2.38, answer: [1]
  # tprog: Contrast(@param0, diff, 0, Costa Rica@Str, Panama@Str, 1)
# top-2, score: 2.38, answer: [1]
  # tprog: Contrast(@param0, diff, 0, Panama@Str, Costa Rica@Str, 1)
# top-3, score: 2.32, answer: [1]
  # tprog: Summarize(SelectRow1(@param0, ==, 0, Costa Rica@Str), count, 1)
# top-4, score: 2.27, answer: [1]
  # tprog: Summarize(SelectRow1(@param0, ==, 0, Costa Rica@Str), count, 0)
# top-5, score: 2.27, answer: [1]
  # tprog: Summarize(SelectRow1(@param0, ==, 0, Costa Rica@Str), count, 2)
# top-6, score: 2.27, answer: [1]
  # tprog: Summarize(SelectRow1(@param0, ==, 0, Panama@Str), count, 1)
# top-7, score: 2.24, answer: ['Costa Rica']
  # tprog: SelectCol(SelectRow1(@param0, ==, 0, Costa Rica@Str), ['0'])
# top-8, score: 2.24, answer: ['Costa Rica']
  # tprog: SelectCol(SelectRow1(@param0, ==, 0, Costa Rica@Str), ['-1', '-2'])
# top-9, score: 2.22, answer: [1]
  # tprog: Summarize(SelectRow1(@param0, ==, 0, Panama@Str), count, 0)
# top-10, score: 2.22, answer: [1]
  # tprog: Summarize(SelectRow1(@param0, ==, 0, Panama@Str), count, 2)
# top-11, score: 2.19, answer: ['Panama']
  # tprog: SelectCol(SelectRow1(@param0, ==, 0, Panama@Str), ['0'])
# top-12, score: 2.19, answer: ['Panama']
  # tprog: SelectCol(SelectRow1(@param0, ==, 0, Panama@Str), ['-1', '-2'])
