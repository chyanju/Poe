# parsed arguments: Namespace(benchmark='Q48f58', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'5-11', 'male', '20', '7', '60+', 'orange', 'percentage', '1', '9', '24', 'blue', 'group', '12-17', 'color', '2', '10', 'female', '18-59', 'age', 'gender', '0-4'}
# input type: [dtype('O'), dtype('O'), dtype('int64'), dtype('O')]
# input is:
  Age group  Gender  Percentage   color
0       60+  Female           2    blue
1       60+    Male           1  orange
2     12-17    Male           7  orange
3     12-17  Female           7    blue
4     18-59  Female          24    blue
5     18-59    Male          20  orange
6       0-4    Male           9  orange
7       0-4  Female           9    blue
8      5-11    Male          10  orange
9      5-11  Female          10    blue
# query is: Which age groups on the graph have an unequal gender split?
# expected output type:[dtype('O')]
# expected output is:
  ANSWER
0  18-59
1    60+
# inferred DSL terminals:
  # ConstVal: ['Age group@Str', 'Gender@Str', '<NULL>']
     # cmap: [('age', 'Age group'), ('gender', 'Gender'), ('groups', 'Age group')]
  # AggrFunc: ['<NULL>']
     # amap: []
  # NumFunc: ['<NULL>']
     # nmap: []
  # BoolFunc: ['==', '!=', '<NULL>']
     # bmap: [('unequal', '!='), (None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': '60+'}]
  # found 0 program(s)
# (t=3.73) i=1, candidate=[{'ANSWER': '12-17'}]
  # found 0 program(s)
# (t=7.45) i=2, candidate=[{'ANSWER': '18-59'}]
  # found 0 program(s)
# (t=11.13) i=3, candidate=[{'ANSWER': '5-11'}]
  # found 0 program(s)
# (t=14.85) i=4, candidate=[{'ANSWER': '0-4'}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: ['0-4', 1, 10, '12-17', '18-59', 2, 20, 24, '5-11', '60+', 7, 9, 'Age group', 'Female', 'Gender', 'Male', 'Percentage', 'blue', 'color', 'orange']
# (t=18.51) fallback i=0, candidate=[{'ANSWER': '0-4'}]
  # found 0 program(s)
# (t=22.20) fallback i=1, candidate=[{'ANSWER': 1}]
  # found 0 program(s)
# (t=25.89) fallback i=2, candidate=[{'ANSWER': 10}]
  # found 0 program(s)
# (t=29.55) fallback i=3, candidate=[{'ANSWER': '12-17'}]
  # found 0 program(s)
# (t=33.23) fallback i=4, candidate=[{'ANSWER': '18-59'}]
  # found 0 program(s)
# (t=37.14) fallback i=5, candidate=[{'ANSWER': 2}]
  # found 0 program(s)
# (t=40.83) fallback i=6, candidate=[{'ANSWER': 20}]
  # found 0 program(s)
# (t=44.52) fallback i=7, candidate=[{'ANSWER': 24}]
  # found 0 program(s)
# (t=48.21) fallback i=8, candidate=[{'ANSWER': '5-11'}]
  # found 0 program(s)
# (t=51.85) fallback i=9, candidate=[{'ANSWER': '60+'}]
  # found 0 program(s)
# (t=55.48) fallback i=10, candidate=[{'ANSWER': 7}]
  # found 0 program(s)
# (t=59.13) fallback i=11, candidate=[{'ANSWER': 9}]
  # found 0 program(s)
# (t=62.77) fallback i=12, candidate=[{'ANSWER': 'Age group'}]
  # found 0 program(s)
# (t=63.86) fallback i=13, candidate=[{'ANSWER': 'Female'}]
  # found 0 program(s)
# (t=67.51) fallback i=14, candidate=[{'ANSWER': 'Gender'}]
  # found 0 program(s)
# (t=68.60) fallback i=15, candidate=[{'ANSWER': 'Male'}]
  # found 0 program(s)
# (t=72.30) fallback i=16, candidate=[{'ANSWER': 'Percentage'}]
  # found 0 program(s)
# (t=73.39) fallback i=17, candidate=[{'ANSWER': 'blue'}]
  # found 0 program(s)
# (t=77.06) fallback i=18, candidate=[{'ANSWER': 'color'}]
  # found 0 program(s)
# (t=78.16) fallback i=19, candidate=[{'ANSWER': 'orange'}]
  # found 0 program(s)
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: ['5-11']

# ========== review report ========== #
