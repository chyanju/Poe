# parsed arguments: Namespace(benchmark='Q43f78', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'americans', 'blue', 'indian', 'population', '15', 'color', 'public', '55', '39', '33', 'japanese', 'percentage', '57', 'chinese', '30'}
# input type: [dtype('O'), dtype('int64'), dtype('O')]
# input is:
           population  percentage color
0    Indian Americans          55  blue
1       Indian public          30  blue
2   Chinese Americans          57  blue
3      Chinese public          39  blue
4  Japanese Americans          33  blue
5     Japanese public          15  blue
# query is: what is on the y-axis?
# expected output type:[dtype('O')]
# expected output is:
       ANSWER
0  population
# inferred DSL terminals:
  # ConstVal: ['<NULL>']
     # cmap: []
  # AggrFunc: ['<NULL>']
     # amap: []
  # NumFunc: ['<NULL>']
     # nmap: []
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 30}]
  # found 0 program(s)
# (t=0.12) i=1, candidate=[{'ANSWER': 30}, {'ANSWER': 55}]
  # found 0 program(s)
# (t=0.21) i=2, candidate=[{'ANSWER': 15}, {'ANSWER': 30}]
  # found 0 program(s)
# (t=0.29) i=3, candidate=[{'ANSWER': 30}, {'ANSWER': 39}]
  # found 0 program(s)
# (t=0.38) i=4, candidate=[{'ANSWER': 30}, {'ANSWER': 33}]
  # found 0 program(s)
# (t=0.46) i=5, candidate=[{'ANSWER': 30}, {'ANSWER': 57}]
  # found 0 program(s)
# (t=0.55) i=6, candidate=[{'ANSWER': 15}, {'ANSWER': 30}, {'ANSWER': 55}]
  # found 0 program(s)
# (t=0.64) i=7, candidate=[{'ANSWER': 30}, {'ANSWER': 39}, {'ANSWER': 55}]
  # found 0 program(s)
# (t=0.72) i=8, candidate=[{'ANSWER': 30}, {'ANSWER': 33}, {'ANSWER': 55}]
  # found 0 program(s)
# (t=0.81) i=9, candidate=[{'ANSWER': 30}, {'ANSWER': 55}, {'ANSWER': 57}]
  # found 0 program(s)
# (t=0.89) i=10, candidate=[{'ANSWER': 15}, {'ANSWER': 30}, {'ANSWER': 39}]
  # found 0 program(s)
# (t=0.98) i=11, candidate=[{'ANSWER': 15}, {'ANSWER': 30}, {'ANSWER': 33}]
  # found 0 program(s)
# (t=1.06) i=12, candidate=[{'ANSWER': 15}, {'ANSWER': 30}, {'ANSWER': 57}]
  # found 0 program(s)
# (t=1.14) i=13, candidate=[{'ANSWER': 30}, {'ANSWER': 33}, {'ANSWER': 39}]
  # found 0 program(s)
# (t=1.23) i=14, candidate=[{'ANSWER': 30}, {'ANSWER': 39}, {'ANSWER': 57}]
  # found 0 program(s)
# (t=1.31) i=15, candidate=[{'ANSWER': 30}, {'ANSWER': 33}, {'ANSWER': 57}]
  # found 0 program(s)
# (t=1.40) i=16, candidate=[{'ANSWER': 55}]
  # found 0 program(s)
# (t=1.52) i=17, candidate=[{'ANSWER': 15}, {'ANSWER': 55}]
  # found 0 program(s)
# (t=1.60) i=18, candidate=[{'ANSWER': 39}, {'ANSWER': 55}]
  # found 0 program(s)
# (t=1.68) i=19, candidate=[{'ANSWER': 33}, {'ANSWER': 55}]
  # found 0 program(s)
# (t=1.77) i=20, candidate=[{'ANSWER': 55}, {'ANSWER': 57}]
  # found 0 program(s)
# (t=1.86) i=21, candidate=[{'ANSWER': 15}, {'ANSWER': 39}, {'ANSWER': 55}]
  # found 0 program(s)
# (t=1.94) i=22, candidate=[{'ANSWER': 15}, {'ANSWER': 33}, {'ANSWER': 55}]
  # found 0 program(s)
# (t=2.02) i=23, candidate=[{'ANSWER': 15}, {'ANSWER': 55}, {'ANSWER': 57}]
  # found 0 program(s)
# (t=2.11) i=24, candidate=[{'ANSWER': 33}, {'ANSWER': 39}, {'ANSWER': 55}]
  # found 0 program(s)
# (t=2.19) i=25, candidate=[{'ANSWER': 39}, {'ANSWER': 55}, {'ANSWER': 57}]
  # found 0 program(s)
# (t=2.28) i=26, candidate=[{'ANSWER': 33}, {'ANSWER': 55}, {'ANSWER': 57}]
  # found 0 program(s)
# (t=2.36) i=27, candidate=[{'ANSWER': 15}]
  # found 0 program(s)
# (t=2.48) i=28, candidate=[{'ANSWER': 15}, {'ANSWER': 39}]
  # found 0 program(s)
# (t=2.57) i=29, candidate=[{'ANSWER': 39}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: [15, 30, 33, 39, 55, 57, 'Chinese Americans', 'Chinese public', 'Indian Americans', 'Indian public', 'Japanese Americans', 'Japanese public', 'blue', 'color', 'percentage', 'population']
# (t=2.68) fallback i=0, candidate=[{'ANSWER': 15}]
  # found 0 program(s)
# (t=2.80) fallback i=1, candidate=[{'ANSWER': 30}]
  # found 0 program(s)
# (t=2.92) fallback i=2, candidate=[{'ANSWER': 33}]
  # found 0 program(s)
# (t=3.04) fallback i=3, candidate=[{'ANSWER': 39}]
  # found 0 program(s)
# (t=3.16) fallback i=4, candidate=[{'ANSWER': 55}]
  # found 0 program(s)
# (t=3.28) fallback i=5, candidate=[{'ANSWER': 57}]
  # found 0 program(s)
# (t=3.40) fallback i=6, candidate=[{'ANSWER': 'Chinese Americans'}]
  # found 0 program(s)
# (t=3.52) fallback i=7, candidate=[{'ANSWER': 'Chinese public'}]
  # found 0 program(s)
# (t=3.64) fallback i=8, candidate=[{'ANSWER': 'Indian Americans'}]
  # found 0 program(s)
# (t=3.76) fallback i=9, candidate=[{'ANSWER': 'Indian public'}]
  # found 0 program(s)
# (t=3.88) fallback i=10, candidate=[{'ANSWER': 'Japanese Americans'}]
  # found 0 program(s)
# (t=4.00) fallback i=11, candidate=[{'ANSWER': 'Japanese public'}]
  # found 0 program(s)
# (t=4.12) fallback i=12, candidate=[{'ANSWER': 'blue'}]
  # found 0 program(s)
# (t=4.24) fallback i=13, candidate=[{'ANSWER': 'color'}]
  # found 0 program(s)
# (t=4.31) fallback i=14, candidate=[{'ANSWER': 'percentage'}]
  # found 0 program(s)
# (t=4.39) fallback i=15, candidate=[{'ANSWER': 'population'}]
  # found 0 program(s)
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: ['<no answer>']

# ========== review report ========== #
