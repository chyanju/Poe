# parsed arguments: Namespace(benchmark='Qca1f9', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'red', 'green', 'percent', '67', 'undergrad', 'sci', '62', '55', 'social', '91', 'orange', '53', 'brown', 'purple', 'resources', 'nat', 'engineering', 'ls', '84', '52', 'business', 'bio', '42', '60', 'humanities', 'major', 'yellow', 'phys', 'env', 'sciences', 'chemistry', '61', 'color', 'programs', 'arts', 'gray', 'design', 'blue', 'math'}
# input type: [dtype('O'), dtype('int64'), dtype('O')]
# input is:
              major  percent   color
0       LS Programs       42  yellow
1      Bio Sciences       52    blue
2      LS Undergrad       53  yellow
3     Math Phys Sci       55  orange
4     Nat Resources       60   brown
5   Arts Humanities       61    gray
6   Social Sciences       61   brown
7         Chemistry       62     red
8        Env Design       67   green
9       Engineering       84  orange
10         Business       91  purple
# query is: Which major has the highest percent of students who intended to major and ultimately earned a degree from the same college/division?
# expected output type:[dtype('O')]
# expected output is:
     ANSWER
0  Business
# inferred DSL terminals:
  # ConstVal: ['percent@Str', 'major@Str', '<NULL>']
     # cmap: [('major', 'major'), ('percent', 'percent')]
  # AggrFunc: ['max', '<NULL>']
     # amap: [('highest', 'max')]
  # NumFunc: ['<NULL>']
     # nmap: []
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['eqmax', '<NULL>']
     # imap: [('highest', 'eqmax')]
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 'Engineering'}]
  # found 0 program(s)
# (t=0.85) i=1, candidate=[{'ANSWER': 'Bio Sciences'}]
  # found 0 program(s)
# (t=1.68) i=2, candidate=[{'ANSWER': 'Env Design'}]
  # found 0 program(s)
# (t=2.52) i=3, candidate=[{'ANSWER': 'LS Programs'}]
  # found 0 program(s)
# (t=3.36) i=4, candidate=[{'ANSWER': 'Social Sciences'}]
  # found 0 program(s)
# (t=4.20) i=5, candidate=[{'ANSWER': 'Business'}]
  # found 10 program(s)
    # SelectCol(SelectRow0(GroupSum(@param0, ['0'], max, 1), eqmax, 1), ['0'])
      --> ['SelectCol', ['SelectRow0', ['GroupSum', 'input@0', ['major'], 'max', 'percent'], 'eqmax', 'COL0'], ['major']]
    # SelectCol(SelectRow0(GroupSum(@param0, ['0'], max, 1), eqmax, 1), ['-1'])
      --> ['SelectCol', ['SelectRow0', ['GroupSum', 'input@0', ['major'], 'max', 'percent'], 'eqmax', 'COL0'], ['major']]
    # SelectCol(SelectRow0(GroupSum(@param0, ['0', '1'], max, 1), eqmax, 1), ['0'])
      --> ['SelectCol', ['SelectRow0', ['GroupSum', 'input@0', ['major', 'percent'], 'max', 'percent'], 'eqmax', 'percent'], ['major']]
    # SelectCol(SelectRow0(GroupSum(@param0, ['0', '1'], max, 1), eqmax, 1), ['-1', '-2'])
      --> ['SelectCol', ['SelectRow0', ['GroupSum', 'input@0', ['major', 'percent'], 'max', 'percent'], 'eqmax', 'percent'], ['major']]
    # SelectCol(SelectRow0(GroupSum(@param0, ['0', '1'], max, 1), eqmax, 2), ['0'])
      --> ['SelectCol', ['SelectRow0', ['GroupSum', 'input@0', ['major', 'percent'], 'max', 'percent'], 'eqmax', 'COL0'], ['major']]
    # SelectCol(SelectRow0(GroupSum(@param0, ['0', '1'], max, 1), eqmax, 2), ['-1', '-2'])
      --> ['SelectCol', ['SelectRow0', ['GroupSum', 'input@0', ['major', 'percent'], 'max', 'percent'], 'eqmax', 'COL0'], ['major']]
    # SelectCol(SelectRow0(GroupSum(@param0, ['0', '2'], max, 1), eqmax, 2), ['0'])
      --> ['SelectCol', ['SelectRow0', ['GroupSum', 'input@0', ['major', 'color'], 'max', 'percent'], 'eqmax', 'COL0'], ['major']]
    # SelectCol(SelectRow0(GroupSum(@param0, ['0', '2'], max, 1), eqmax, 2), ['-1', '-2'])
      --> ['SelectCol', ['SelectRow0', ['GroupSum', 'input@0', ['major', 'color'], 'max', 'percent'], 'eqmax', 'COL0'], ['major']]
    # SelectCol(SelectRow0(@param0, eqmax, 1), ['0'])
      --> ['SelectCol', ['SelectRow0', 'input@0', 'eqmax', 'percent'], ['major']]
    # SelectCol(SelectRow0(@param0, eqmax, 1), ['-1', '-2'])
      --> ['SelectCol', ['SelectRow0', 'input@0', 'eqmax', 'percent'], ['major']]
# (t=5.07) i=6, candidate=[{'ANSWER': 'Arts Humanities'}]
  # found 0 program(s)
# (t=5.90) i=7, candidate=[{'ANSWER': 'LS Undergrad'}]
  # found 0 program(s)
# (t=6.75) i=8, candidate=[{'ANSWER': 'Chemistry'}]
  # found 0 program(s)
# (t=7.61) i=9, candidate=[{'ANSWER': 'Math Phys Sci'}]
  # found 0 program(s)
# (t=8.46) i=10, candidate=[{'ANSWER': 'Nat Resources'}]
  # found 0 program(s)

# ========== review report ========== #
# top-1, score: 1.30, answer: Business
  # tprog: SelectCol(SelectRow0(@param0, eqmax, 1), ['0'])
# top-2, score: 1.30, answer: Business
  # tprog: SelectCol(SelectRow0(@param0, eqmax, 1), ['-1', '-2'])
# top-3, score: 1.24, answer: Business
  # tprog: SelectCol(SelectRow0(GroupSum(@param0, ['0'], max, 1), eqmax, 1), ['0'])
# top-4, score: 1.24, answer: Business
  # tprog: SelectCol(SelectRow0(GroupSum(@param0, ['0'], max, 1), eqmax, 1), ['-1'])
# top-5, score: 1.23, answer: Business
  # tprog: SelectCol(SelectRow0(GroupSum(@param0, ['0', '1'], max, 1), eqmax, 1), ['0'])
# top-6, score: 1.23, answer: Business
  # tprog: SelectCol(SelectRow0(GroupSum(@param0, ['0', '1'], max, 1), eqmax, 1), ['-1', '-2'])
# top-7, score: 1.23, answer: Business
  # tprog: SelectCol(SelectRow0(GroupSum(@param0, ['0', '1'], max, 1), eqmax, 2), ['0'])
# top-8, score: 1.23, answer: Business
  # tprog: SelectCol(SelectRow0(GroupSum(@param0, ['0', '1'], max, 1), eqmax, 2), ['-1', '-2'])
# top-9, score: 1.23, answer: Business
  # tprog: SelectCol(SelectRow0(GroupSum(@param0, ['0', '2'], max, 1), eqmax, 2), ['0'])
# top-10, score: 1.23, answer: Business
  # tprog: SelectCol(SelectRow0(GroupSum(@param0, ['0', '2'], max, 1), eqmax, 2), ['-1', '-2'])
