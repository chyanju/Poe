# parsed arguments: Namespace(benchmark='Q00c86', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'php', 'aix', '2139', 'ios', 'blue', 'asp', '863', 'multiple', 'unix', '81', 'lin_x86', 'windows', 'linux', 'solaris', 'platform', 'hardware', '636', 'jsp', 'cgi', '100', '162', 'count', '7240', '15233', '190', '193', '1426', '300', 'osx', 'color', '1664', 'bsd', '230', '80'}
# input type: [dtype('O'), dtype('int64'), dtype('O')]
# input is:
    Platform  count color
0        bsd     80  blue
1        aix     81  blue
2        ios    100  blue
3        jsp    162  blue
4    solaris    190  blue
5    lin_x86    193  blue
6        osx    230  blue
7       unix    300  blue
8        cgi    636  blue
9   hardware    863  blue
10       asp   1426  blue
11  multiple   1664  blue
12     linux   2139  blue
13   windows   7240  blue
14       php  15233  blue
# query is: Which platform has had about half the security vulnerabilities as php?
# expected output type:[dtype('O')]
# expected output is:
    ANSWER
0  windows
# inferred DSL terminals:
  # ConstVal: ['php@Str', 'Platform@Str', '<NULL>']
     # cmap: [('platform', 'Platform'), ('php', 'php')]
  # AggrFunc: ['<NULL>']
     # amap: []
  # NumFunc: ['<NULL>']
     # nmap: []
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 'php'}]
  # found 2 program(s)
    # SelectCol(SelectRow1(@param0, ==, 0, php@Str), ['0'])
      --> ['SelectCol', ['SelectRow1', 'input@0', '==', 'Platform', 'php'], ['Platform']]
    # SelectCol(SelectRow1(@param0, ==, 0, php@Str), ['-1', '-2'])
      --> ['SelectCol', ['SelectRow1', 'input@0', '==', 'Platform', 'php'], ['Platform']]
# (t=0.48) i=1, candidate=[{'ANSWER': 'bsd'}]
  # found 0 program(s)
# (t=0.96) i=2, candidate=[{'ANSWER': 'lin_x86'}]
  # found 0 program(s)
# (t=1.43) i=3, candidate=[{'ANSWER': 'windows'}]
  # found 0 program(s)
# (t=1.92) i=4, candidate=[{'ANSWER': 'ios'}]
  # found 0 program(s)
# (t=2.39) i=5, candidate=[{'ANSWER': 'aix'}]
  # found 0 program(s)
# (t=2.87) i=6, candidate=[{'ANSWER': 'unix'}]
  # found 0 program(s)
# (t=3.34) i=7, candidate=[{'ANSWER': 'solaris'}]
  # found 0 program(s)
# (t=3.82) i=8, candidate=[{'ANSWER': 'asp'}]
  # found 0 program(s)
# (t=4.29) i=9, candidate=[{'ANSWER': 'multiple'}]
  # found 0 program(s)
# (t=4.76) i=10, candidate=[{'ANSWER': 'jsp'}]
  # found 0 program(s)
# (t=5.23) i=11, candidate=[{'ANSWER': 'cgi'}]
  # found 0 program(s)
# (t=5.71) i=12, candidate=[{'ANSWER': 'linux'}]
  # found 0 program(s)
# (t=6.19) i=13, candidate=[{'ANSWER': 'osx'}]
  # found 0 program(s)
# (t=6.68) i=14, candidate=[{'ANSWER': 'hardware'}]
  # found 0 program(s)

# ========== review report ========== #
# top-1, score: 2.32, answer: php
  # tprog: SelectCol(SelectRow1(@param0, ==, 0, php@Str), ['0'])
# top-2, score: 2.32, answer: php
  # tprog: SelectCol(SelectRow1(@param0, ==, 0, php@Str), ['-1', '-2'])
