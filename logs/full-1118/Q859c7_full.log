# parsed arguments: Namespace(benchmark='Q859c7', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'72.92', 'age', '78.57', 'percentage', 'men', '70.09', '79.52', '60-64', 'group', '55-59', 'women', '68.83', 'and', '65-69', '65.69', '84.86', '63.8', 'over', 'blue', '67.89', '70-74', '83.92', '16', '84.23', 'red', '73.55', '50-54', 'color', 'gender', 'all', '75.12', '80', '83.6', '75.43', '72.6', '80.77', 'orange', '82.66', '85.49', '75.75', '75-79', 'aged'}
# input type: [dtype('O'), dtype('O'), dtype('float64'), dtype('O')]
# input is:
               Age group gender  Percentage   color
0   All aged 16 and over  Women       67.89     red
1   All aged 16 and over    All       65.69    blue
2   All aged 16 and over    Men       63.80  orange
3            80 and over  Women       84.23     red
4            80 and over    All       83.92    blue
5            80 and over    Men       83.92  orange
6                  55-59  Women       73.55     red
7                  55-59    All       72.92    blue
8                  55-59    Men       72.60  orange
9                  60-64  Women       75.75     red
10                 60-64    All       75.43    blue
11                 60-64    Men       75.12  orange
12                 75-79  Women       84.86     red
13                 75-79    All       84.23    blue
14                 75-79    Men       83.60  orange
15                 65-69  Women       80.77     red
16                 65-69    All       79.52    blue
17                 65-69    Men       78.57  orange
18                 50-54  Women       70.09     red
19                 50-54    All       68.83    blue
20                 50-54    Men       67.89  orange
21                 70-74  Women       85.49     red
22                 70-74    All       83.92    blue
23                 70-74    Men       82.66  orange
# query is: Did more overall people feel welcoming in age groups 16 and over or 60-64?
# expected output type:[dtype('O')]
# expected output is:
  ANSWER
0  60-64
# inferred DSL terminals:
  # ConstVal: ['80 and over@Str', 'All aged 16 and over@Str', 'Age group@Str', '60-64@Str', '<NULL>']
     # cmap: [('groups', 'Age group'), ('and', 'All aged 16 and over'), ('age', 'Age group'), ('over', '80 and over'), ('and', '80 and over'), (16, 'All aged 16 and over'), (64, '60-64'), ('over', 'All aged 16 and over'), (60, '60-64')]
  # AggrFunc: ['sum', '<NULL>']
     # amap: [('overall', 'sum')]
  # NumFunc: ['-', '<NULL>']
     # nmap: [('more', '-')]
  # BoolFunc: ['>', '>=', '==', '<NULL>']
     # bmap: [('more', '>='), ('more', '>'), (None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# ====> fallback strategy (comparison) is triggered
  # [debug] high_values: [(4.090000000000003, 16), (2.200000000000003, 16), (1.8900000000000006, 16), (-1.8900000000000006, 16), (-2.200000000000003, 16), (-4.090000000000003, 16), (20.430000000000007, 12), (20.120000000000005, 12), (20.120000000000005, 12), (18.540000000000006, 12)]
  # [debug] high_values (no dup.): [(21.689999999999998, 4), (21.060000000000002, 4), (20.430000000000007, 4), (20.120000000000005, 4), (19.799999999999997, 4), (19.799999999999997, 4), (19.17, 4), (18.86, 4), (18.540000000000006, 4), (18.230000000000004, 4)]
  # [debug] fallback (comparison) answers are added
# ====> fallback strategy (selection) is triggered
  # [debug] fallback (selection) answers: ['Age group', 'All aged 16 and over', '80 and over', '60-64']
  # [debug] fallback (selection) answers (no dup.): ['Age group']
  # [debug] 1 fallback (selection) answers are added
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 'All aged 16 and over'}]
  # found 0 program(s)
# (t=6.44) i=1, candidate=[{'ANSWER': '70-74'}]
  # found 0 program(s)
# (t=12.87) i=2, candidate=[{'ANSWER': '65-69'}]
  # found 0 program(s)
# (t=19.24) i=3, candidate=[{'ANSWER': '50-54'}]
  # found 0 program(s)
# (t=25.67) i=4, candidate=[{'ANSWER': '55-59'}]
  # found 0 program(s)
# (t=32.07) i=5, candidate=[{'ANSWER': '75-79'}]
  # found 0 program(s)
# (t=38.48) i=6, candidate=[{'ANSWER': '80 and over'}]
  # found 0 program(s)
# (t=44.90) i=7, candidate=[{'ANSWER': '60-64'}]
  # found 0 program(s)
# (t=51.32) i=8, candidate=[{'ANSWER': 4.090000000000003}]
  # found 0 program(s)
# (t=56.80) i=9, candidate=[{'ANSWER': 2.200000000000003}]
  # found 0 program(s)
# (t=62.31) i=10, candidate=[{'ANSWER': 1.8900000000000006}]
  # found 0 program(s)
# (t=67.81) i=11, candidate=[{'ANSWER': -1.8900000000000006}]
  # found 0 program(s)
# (t=73.31) i=12, candidate=[{'ANSWER': -2.200000000000003}]
  # found 0 program(s)
# (t=78.83) i=13, candidate=[{'ANSWER': -4.090000000000003}]
  # found 0 program(s)
# (t=84.56) i=14, candidate=[{'ANSWER': 20.430000000000007}]
  # found 0 program(s)
# (t=90.06) i=15, candidate=[{'ANSWER': 20.120000000000005}]
  # found 0 program(s)
# (t=95.51) i=16, candidate=[{'ANSWER': 20.120000000000005}]
  # found 0 program(s)
# (t=100.99) i=17, candidate=[{'ANSWER': 18.540000000000006}]
  # found 0 program(s)
# (t=106.42) i=18, candidate=[{'ANSWER': 'Age group'}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: ['50-54', '55-59', '60-64', 63.8, '65-69', 65.69, 67.89, 68.83, '70-74', 70.09, 72.6, 72.92, 73.55, '75-79', 75.12, 75.43, 75.75, 78.57, 79.52, '80 and over', 80.77, 82.66, 83.6, 83.92, 84.23, 84.86, 85.49, 'Age group', 'All', 'All aged 16 and over', 'Men', 'Percentage', 'Women', 'blue', 'color', 'gender', 'orange', 'red']
# (t=111.92) fallback i=0, candidate=[{'ANSWER': '50-54'}]
  # found 0 program(s)
# (t=118.29) fallback i=1, candidate=[{'ANSWER': '55-59'}]
  # found 0 program(s)
# (t=124.70) fallback i=2, candidate=[{'ANSWER': '60-64'}]
  # found 0 program(s)
# (t=131.08) fallback i=3, candidate=[{'ANSWER': 63.8}]
  # found 0 program(s)
# (t=137.50) fallback i=4, candidate=[{'ANSWER': '65-69'}]
  # found 0 program(s)
# (t=143.85) fallback i=5, candidate=[{'ANSWER': 65.69}]
  # found 0 program(s)
# (t=150.18) fallback i=6, candidate=[{'ANSWER': 67.89}]
  # found 0 program(s)
# (t=156.52) fallback i=7, candidate=[{'ANSWER': 68.83}]
  # found 0 program(s)
# (t=162.94) fallback i=8, candidate=[{'ANSWER': '70-74'}]
  # found 0 program(s)
# (t=169.35) fallback i=9, candidate=[{'ANSWER': 70.09}]
  # found 0 program(s)
# (t=175.79) fallback i=10, candidate=[{'ANSWER': 72.6}]
  # found 0 program(s)
# (t=182.26) fallback i=11, candidate=[{'ANSWER': 72.92}]
  # found 0 program(s)
# (t=188.71) fallback i=12, candidate=[{'ANSWER': 73.55}]
  # found 0 program(s)
# (t=195.19) fallback i=13, candidate=[{'ANSWER': '75-79'}]
  # found 0 program(s)
# (t=201.61) fallback i=14, candidate=[{'ANSWER': 75.12}]
  # found 0 program(s)
# (t=208.06) fallback i=15, candidate=[{'ANSWER': 75.43}]
  # found 0 program(s)
# (t=214.49) fallback i=16, candidate=[{'ANSWER': 75.75}]
  # found 0 program(s)
# (t=221.21) fallback i=17, candidate=[{'ANSWER': 78.57}]
  # found 0 program(s)
# (t=227.61) fallback i=18, candidate=[{'ANSWER': 79.52}]
  # found 0 program(s)
# (t=234.07) fallback i=19, candidate=[{'ANSWER': '80 and over'}]
  # found 0 program(s)
# (t=240.43) fallback i=20, candidate=[{'ANSWER': 80.77}]
  # found 0 program(s)
# (t=246.85) fallback i=21, candidate=[{'ANSWER': 82.66}]
  # found 0 program(s)
# (t=253.28) fallback i=22, candidate=[{'ANSWER': 83.6}]
  # found 0 program(s)
# (t=259.70) fallback i=23, candidate=[{'ANSWER': 83.92}]
  # found 0 program(s)
# (t=266.08) fallback i=24, candidate=[{'ANSWER': 84.23}]
  # found 0 program(s)
# (t=272.52) fallback i=25, candidate=[{'ANSWER': 84.86}]
  # found 0 program(s)
# (t=278.94) fallback i=26, candidate=[{'ANSWER': 85.49}]
  # found 0 program(s)
# (t=285.28) fallback i=27, candidate=[{'ANSWER': 'Age group'}]
  # found 0 program(s)
# (t=290.78) fallback i=28, candidate=[{'ANSWER': 'All'}]
  # found 0 program(s)
# (t=297.20) fallback i=29, candidate=[{'ANSWER': 'All aged 16 and over'}]
---------- timeout ----------
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: ['80 and over', '80 and over']

# ========== review report ========== #
