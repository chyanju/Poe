# parsed arguments: Namespace(benchmark='Q73f4b', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'blue', '9', '-0.9', '-0.25', '-1.8', '-0.4', '10', 'rank', '0.1', '6', '0.2', '7', '8', '-2.1', '2', '%', '3', 'in', 'change', '-1.5', '-1.0', '5', 'color', '4', 'income', '1'}
# input type: [dtype('int64'), dtype('float64'), dtype('O')]
# input is:
   income rank  % change in income color
0            1               -1.80  blue
1            2               -1.50  blue
2            3               -1.00  blue
3            4               -0.90  blue
4            5               -0.40  blue
5            6                0.10  blue
6            7                0.20  blue
7            8                0.10  blue
8            9               -0.25  blue
9           10               -2.10  blue
# query is: What is the 3rd bigest change in income.
# expected output type:[dtype('float64')]
# expected output is:
   ANSWER
0    -1.5
# inferred DSL terminals:
  # ConstVal: ['income rank@Str', '% change in income@Str', '<NULL>']
     # cmap: [('income', '% change in income'), ('change', '% change in income'), ('in', '% change in income'), ('income', 'income rank')]
  # AggrFunc: ['<NULL>']
     # amap: []
  # NumFunc: ['diff', '<NULL>']
     # nmap: [('change', 'diff')]
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# ====> fallback strategy (comparison) is triggered
  # [debug] high_values: []
  # [debug] high_values (no dup.): [(11.8, 1), (11.5, 1), (11.1, 1), (11.0, 1), (10.9, 1), (10.8, 1), (10.5, 1), (10.4, 1), (10.25, 1), (10.1, 1)]
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 3}]
  # found 0 program(s)
# (t=1.12) i=1, candidate=[{'ANSWER': 5}]
  # found 0 program(s)
# (t=2.22) i=2, candidate=[{'ANSWER': 10}]
  # found 0 program(s)
# (t=3.32) i=3, candidate=[{'ANSWER': 4}]
  # found 0 program(s)
# (t=4.43) i=4, candidate=[{'ANSWER': 7}]
  # found 0 program(s)
# (t=5.53) i=5, candidate=[{'ANSWER': 6}]
  # found 0 program(s)
# (t=6.63) i=6, candidate=[{'ANSWER': 2}]
  # found 0 program(s)
# (t=7.74) i=7, candidate=[{'ANSWER': 8}]
  # found 0 program(s)
# (t=8.84) i=8, candidate=[{'ANSWER': 1}]
  # found 0 program(s)
# (t=9.95) i=9, candidate=[{'ANSWER': 9}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: ['% change in income', -0.25, -0.4, -0.9, -1.0, -1.5, -1.8, -2.1, 0.1, 0.2, 1, 10, 2, 3, 4, 5, 6, 7, 8, 9, 'blue', 'color', 'income rank']
# (t=11.06) fallback i=0, candidate=[{'ANSWER': '% change in income'}]
  # found 0 program(s)
# (t=12.07) fallback i=1, candidate=[{'ANSWER': -0.25}]
  # found 0 program(s)
# (t=13.20) fallback i=2, candidate=[{'ANSWER': -0.4}]
  # found 0 program(s)
# (t=14.31) fallback i=3, candidate=[{'ANSWER': -0.9}]
  # found 0 program(s)
# (t=15.41) fallback i=4, candidate=[{'ANSWER': -1.0}]
  # found 0 program(s)
# (t=16.52) fallback i=5, candidate=[{'ANSWER': -1.5}]
  # found 0 program(s)
# (t=17.62) fallback i=6, candidate=[{'ANSWER': -1.8}]
  # found 0 program(s)
# (t=18.73) fallback i=7, candidate=[{'ANSWER': -2.1}]
  # found 0 program(s)
# (t=19.83) fallback i=8, candidate=[{'ANSWER': 0.1}]
  # found 0 program(s)
# (t=20.92) fallback i=9, candidate=[{'ANSWER': 0.2}]
  # found 0 program(s)
# (t=22.00) fallback i=10, candidate=[{'ANSWER': 1}]
  # found 0 program(s)
# (t=23.08) fallback i=11, candidate=[{'ANSWER': 10}]
  # found 0 program(s)
# (t=24.18) fallback i=12, candidate=[{'ANSWER': 2}]
  # found 0 program(s)
# (t=25.28) fallback i=13, candidate=[{'ANSWER': 3}]
  # found 0 program(s)
# (t=26.38) fallback i=14, candidate=[{'ANSWER': 4}]
  # found 0 program(s)
# (t=27.47) fallback i=15, candidate=[{'ANSWER': 5}]
  # found 0 program(s)
# (t=28.55) fallback i=16, candidate=[{'ANSWER': 6}]
  # found 0 program(s)
# (t=29.65) fallback i=17, candidate=[{'ANSWER': 7}]
  # found 0 program(s)
# (t=30.73) fallback i=18, candidate=[{'ANSWER': 8}]
  # found 0 program(s)
# (t=31.81) fallback i=19, candidate=[{'ANSWER': 9}]
  # found 0 program(s)
# (t=32.90) fallback i=20, candidate=[{'ANSWER': 'blue'}]
  # found 0 program(s)
# (t=33.99) fallback i=21, candidate=[{'ANSWER': 'color'}]
  # found 0 program(s)
# (t=34.99) fallback i=22, candidate=[{'ANSWER': 'income rank'}]
  # found 0 program(s)
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: [3]

# ========== review report ========== #
