# parsed arguments: Namespace(benchmark='Q2cf88', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'total', '19258', 'color', 'voters', 'unaffiliated', '27180', 'democratic', 'minor', '28608', 'republican', 'blue', 'parties', 'party', '140'}
# input type: [dtype('O'), dtype('int64'), dtype('O')]
# input is:
           Party  Total voters color
0     Republican         19258  blue
1     Democratic         28608  blue
2   Unaffiliated         27180  blue
3  Minor parties           140  blue
# query is: How many voters are affiliated with Minor parties?
# expected output type:[dtype('int64')]
# expected output is:
   ANSWER
0     140
# inferred DSL terminals:
  # ConstVal: ['Minor parties@Str', 'Party@Str', 'Total voters@Str', '<NULL>']
     # cmap: [('voters', 'Total voters'), ('parties', 'Party'), ('parties', 'Minor parties'), ('minor', 'Minor parties')]
  # AggrFunc: ['count', '<NULL>']
     # amap: [('how many', 'count')]
  # NumFunc: ['<NULL>']
     # nmap: []
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 140}]
  # found 2 program(s)
    # SelectCol(SelectRow1(@param0, ==, 0, Minor parties@Str), ['1'])
      --> ['SelectCol', ['SelectRow1', 'input@0', '==', 'Party', 'Minor parties'], ['Total voters']]
    # SelectCol(SelectRow1(@param0, ==, 0, Minor parties@Str), ['-99', '-2'])
      --> ['SelectCol', ['SelectRow1', 'input@0', '==', 'Party', 'Minor parties'], ['Total voters']]

# ========== review report ========== #
# top-1, score: 2.52, answer: 140
  # tprog: SelectCol(SelectRow1(@param0, ==, 0, Minor parties@Str), ['1'])
# top-2, score: 2.52, answer: 140
  # tprog: SelectCol(SelectRow1(@param0, ==, 0, Minor parties@Str), ['-99', '-2'])
