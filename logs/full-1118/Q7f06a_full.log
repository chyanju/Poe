# parsed arguments: Namespace(benchmark='Q7f06a', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'0.0008', 'gdp', 'germany', 'country', '0.0006', 'blue', '0.0003', 'china', 'donations', 'color', '1e-05', 'netherlands', '0.0005', '0.0004', 'belgium', '0.0011', 'generous', 'norway', 'us', 'japan', 'kuwait', 'estonia', '0.0001', 'finland', 'by', 'ireland'}
# input type: [dtype('O'), dtype('float64'), dtype('O')]
# input is:
        Country  Generous donations by GDP color
0        Norway                    0.00110  blue
1        Kuwait                    0.00110  blue
2   Netherlands                    0.00080  blue
3       Ireland                    0.00060  blue
4       Estonia                    0.00060  blue
5       Finland                    0.00050  blue
6         Japan                    0.00040  blue
7            US                    0.00040  blue
8       Belgium                    0.00030  blue
9       Germany                    0.00010  blue
10        China                    0.00001  blue
# query is: What are the donations by GDP for America?
# expected output type:[dtype('float64')]
# expected output is:
   ANSWER
0  0.0004
# inferred DSL terminals:
  # ConstVal: ['Generous donations by GDP@Str', '<NULL>']
     # cmap: [('donations', 'Generous donations by GDP'), ('by', 'Generous donations by GDP'), ('gdp', 'Generous donations by GDP')]
  # AggrFunc: ['<NULL>']
     # amap: []
  # NumFunc: ['<NULL>']
     # nmap: []
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 0.0004}]
  # found 0 program(s)
# (t=0.20) i=1, candidate=[{'ANSWER': 0.0006}]
  # found 0 program(s)
# (t=0.40) i=2, candidate=[{'ANSWER': 0.0008}]
  # found 0 program(s)
# (t=0.60) i=3, candidate=[{'ANSWER': 0.0005}]
  # found 0 program(s)
# (t=0.80) i=4, candidate=[{'ANSWER': 0.0011}]
  # found 0 program(s)
# (t=1.00) i=5, candidate=[{'ANSWER': 1e-05}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: [0.0001, 0.0003, 0.0004, 0.0005, 0.0006, 0.0008, 0.0011, 1e-05, 'Belgium', 'China', 'Country', 'Estonia', 'Finland', 'Generous donations by GDP', 'Germany', 'Ireland', 'Japan', 'Kuwait', 'Netherlands', 'Norway', 'US', 'blue', 'color']
# (t=1.20) fallback i=0, candidate=[{'ANSWER': 0.0001}]
  # found 0 program(s)
# (t=1.40) fallback i=1, candidate=[{'ANSWER': 0.0003}]
  # found 0 program(s)
# (t=1.60) fallback i=2, candidate=[{'ANSWER': 0.0004}]
  # found 0 program(s)
# (t=1.80) fallback i=3, candidate=[{'ANSWER': 0.0005}]
  # found 0 program(s)
# (t=2.00) fallback i=4, candidate=[{'ANSWER': 0.0006}]
  # found 0 program(s)
# (t=2.20) fallback i=5, candidate=[{'ANSWER': 0.0008}]
  # found 0 program(s)
# (t=2.40) fallback i=6, candidate=[{'ANSWER': 0.0011}]
  # found 0 program(s)
# (t=2.60) fallback i=7, candidate=[{'ANSWER': 1e-05}]
  # found 0 program(s)
# (t=2.80) fallback i=8, candidate=[{'ANSWER': 'Belgium'}]
  # found 0 program(s)
# (t=3.00) fallback i=9, candidate=[{'ANSWER': 'China'}]
  # found 0 program(s)
# (t=3.20) fallback i=10, candidate=[{'ANSWER': 'Country'}]
  # found 0 program(s)
# (t=3.33) fallback i=11, candidate=[{'ANSWER': 'Estonia'}]
  # found 0 program(s)
# (t=3.53) fallback i=12, candidate=[{'ANSWER': 'Finland'}]
  # found 0 program(s)
# (t=3.74) fallback i=13, candidate=[{'ANSWER': 'Generous donations by GDP'}]
  # found 0 program(s)
# (t=3.87) fallback i=14, candidate=[{'ANSWER': 'Germany'}]
  # found 0 program(s)
# (t=4.08) fallback i=15, candidate=[{'ANSWER': 'Ireland'}]
  # found 0 program(s)
# (t=4.28) fallback i=16, candidate=[{'ANSWER': 'Japan'}]
  # found 0 program(s)
# (t=4.48) fallback i=17, candidate=[{'ANSWER': 'Kuwait'}]
  # found 0 program(s)
# (t=4.68) fallback i=18, candidate=[{'ANSWER': 'Netherlands'}]
  # found 0 program(s)
# (t=4.88) fallback i=19, candidate=[{'ANSWER': 'Norway'}]
  # found 0 program(s)
# (t=5.08) fallback i=20, candidate=[{'ANSWER': 'US'}]
  # found 0 program(s)
# (t=5.28) fallback i=21, candidate=[{'ANSWER': 'blue'}]
  # found 0 program(s)
# (t=5.48) fallback i=22, candidate=[{'ANSWER': 'color'}]
  # found 0 program(s)
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: [0.0004]

# ========== review report ========== #
