# parsed arguments: Namespace(benchmark='Q2a90c', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'blue', 'age', 'color', '8.08', 'year', '19.07', '50-64', '2001', '35-49', '30.06', '23.2', '24.98', '35', 'under', 'percent', '2007', '65+', '24.05', 'orange', '27.05', 'red', '7.14', '2012', '9.11', '26.02', '20.1'}
# input type: [dtype('O'), dtype('int64'), dtype('float64'), dtype('O')]
# input is:
         Age  year  percent   color
0      50-64  2001    23.20    blue
1      50-64  2007    20.10  orange
2      50-64  2012    19.07     red
3   Under 35  2001    30.06    blue
4   Under 35  2012    26.02     red
5   Under 35  2007    24.05  orange
6        65+  2001     9.11    blue
7        65+  2007     8.08  orange
8        65+  2012     7.14     red
9      35-49  2001    27.05    blue
10     35-49  2007    26.02  orange
11     35-49  2012    24.98     red
# query is: In which year investors of all age groups took bigger risks?
# expected output type:[dtype('int64')]
# expected output is:
   ANSWER
0    2001
# inferred DSL terminals:
  # ConstVal: ['year@Str', 'Age@Str', '<NULL>']
     # cmap: [('age', 'Age'), ('year', 'year')]
  # AggrFunc: ['sum', '<NULL>']
     # amap: [('all', 'sum')]
  # NumFunc: ['-', '<NULL>']
     # nmap: [('bigger', '-')]
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# ====> fallback strategy (comparison) is triggered
  # [debug] high_values: []
  # [debug] high_values (no dup.): [(2004.86, 1), (2004.86, 1), (2004.86, 1), (2003.92, 1), (2003.92, 1), (2003.92, 1), (2003.92, 1), (2002.89, 1), (2002.89, 1), (2002.89, 1)]
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 2012}]
  # found 0 program(s)
# (t=2.28) i=1, candidate=[{'ANSWER': 2007}]
  # found 0 program(s)
# (t=4.51) i=2, candidate=[{'ANSWER': 2001}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: [19.07, 20.1, 2001, 2007, 2012, 23.2, 24.05, 24.98, 26.02, 27.05, 30.06, '35-49', '50-64', '65+', 7.14, 8.08, 9.11, 'Age', 'Under 35', 'blue', 'color', 'orange', 'percent', 'red', 'year']
# (t=6.74) fallback i=0, candidate=[{'ANSWER': 19.07}]
  # found 0 program(s)
# (t=8.98) fallback i=1, candidate=[{'ANSWER': 20.1}]
  # found 0 program(s)
# (t=11.26) fallback i=2, candidate=[{'ANSWER': 2001}]
  # found 0 program(s)
# (t=13.50) fallback i=3, candidate=[{'ANSWER': 2007}]
  # found 0 program(s)
# (t=15.73) fallback i=4, candidate=[{'ANSWER': 2012}]
  # found 0 program(s)
# (t=17.98) fallback i=5, candidate=[{'ANSWER': 23.2}]
  # found 0 program(s)
# (t=20.20) fallback i=6, candidate=[{'ANSWER': 24.05}]
  # found 0 program(s)
# (t=22.44) fallback i=7, candidate=[{'ANSWER': 24.98}]
  # found 0 program(s)
# (t=24.65) fallback i=8, candidate=[{'ANSWER': 26.02}]
  # found 0 program(s)
# (t=26.85) fallback i=9, candidate=[{'ANSWER': 27.05}]
  # found 0 program(s)
# (t=29.06) fallback i=10, candidate=[{'ANSWER': 30.06}]
  # found 0 program(s)
# (t=31.32) fallback i=11, candidate=[{'ANSWER': '35-49'}]
  # found 0 program(s)
# (t=33.55) fallback i=12, candidate=[{'ANSWER': '50-64'}]
  # found 0 program(s)
# (t=35.78) fallback i=13, candidate=[{'ANSWER': '65+'}]
  # found 0 program(s)
# (t=37.99) fallback i=14, candidate=[{'ANSWER': 7.14}]
  # found 0 program(s)
# (t=40.43) fallback i=15, candidate=[{'ANSWER': 8.08}]
  # found 0 program(s)
# (t=42.66) fallback i=16, candidate=[{'ANSWER': 9.11}]
  # found 0 program(s)
# (t=44.90) fallback i=17, candidate=[{'ANSWER': 'Age'}]
  # found 0 program(s)
# (t=46.96) fallback i=18, candidate=[{'ANSWER': 'Under 35'}]
  # found 0 program(s)
# (t=49.19) fallback i=19, candidate=[{'ANSWER': 'blue'}]
  # found 0 program(s)
# (t=51.44) fallback i=20, candidate=[{'ANSWER': 'color'}]
  # found 0 program(s)
# (t=53.50) fallback i=21, candidate=[{'ANSWER': 'orange'}]
  # found 0 program(s)
# (t=55.72) fallback i=22, candidate=[{'ANSWER': 'percent'}]
  # found 0 program(s)
# (t=57.78) fallback i=23, candidate=[{'ANSWER': 'red'}]
  # found 0 program(s)
# (t=60.03) fallback i=24, candidate=[{'ANSWER': 'year'}]
  # found 0 program(s)
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: [2012]

# ========== review report ========== #
