# parsed arguments: Namespace(benchmark='Q3f8ec', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'public', '39', 'blue', '30', 'population', '15', '55', 'indian', '57', 'japanese', '33', 'percentage', 'chinese', 'color', 'americans'}
# input type: [dtype('O'), dtype('int64'), dtype('O')]
# input is:
           population  percentage color
0    Indian Americans          55  blue
1       Indian public          30  blue
2   Chinese Americans          57  blue
3      Chinese public          39  blue
4  Japanese Americans          33  blue
5     Japanese public          15  blue
# query is: what is on the x-axis?
# expected output type:[dtype('O')]
# expected output is:
       ANSWER
0  percentage
# inferred DSL terminals:
  # ConstVal: ['<NULL>']
     # cmap: []
  # AggrFunc: ['<NULL>']
     # amap: []
  # NumFunc: ['<NULL>']
     # nmap: []
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 1}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: [15, 30, 33, 39, 55, 57, 'Chinese Americans', 'Chinese public', 'Indian Americans', 'Indian public', 'Japanese Americans', 'Japanese public', 'blue', 'color', 'percentage', 'population']
# (t=0.08) fallback i=0, candidate=[{'ANSWER': 15}]
  # found 0 program(s)
# (t=0.20) fallback i=1, candidate=[{'ANSWER': 30}]
  # found 0 program(s)
# (t=0.32) fallback i=2, candidate=[{'ANSWER': 33}]
  # found 0 program(s)
# (t=0.44) fallback i=3, candidate=[{'ANSWER': 39}]
  # found 0 program(s)
# (t=0.55) fallback i=4, candidate=[{'ANSWER': 55}]
  # found 0 program(s)
# (t=0.67) fallback i=5, candidate=[{'ANSWER': 57}]
  # found 0 program(s)
# (t=0.79) fallback i=6, candidate=[{'ANSWER': 'Chinese Americans'}]
  # found 0 program(s)
# (t=0.91) fallback i=7, candidate=[{'ANSWER': 'Chinese public'}]
  # found 0 program(s)
# (t=1.03) fallback i=8, candidate=[{'ANSWER': 'Indian Americans'}]
  # found 0 program(s)
# (t=1.15) fallback i=9, candidate=[{'ANSWER': 'Indian public'}]
  # found 0 program(s)
# (t=1.27) fallback i=10, candidate=[{'ANSWER': 'Japanese Americans'}]
  # found 0 program(s)
# (t=1.38) fallback i=11, candidate=[{'ANSWER': 'Japanese public'}]
  # found 0 program(s)
# (t=1.50) fallback i=12, candidate=[{'ANSWER': 'blue'}]
  # found 0 program(s)
# (t=1.62) fallback i=13, candidate=[{'ANSWER': 'color'}]
  # found 0 program(s)
# (t=1.70) fallback i=14, candidate=[{'ANSWER': 'percentage'}]
  # found 0 program(s)
# (t=1.77) fallback i=15, candidate=[{'ANSWER': 'population'}]
  # found 0 program(s)
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: [1]

# ========== review report ========== #
