# parsed arguments: Namespace(benchmark='Qca5fb', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'7197.031306', '3041.677796', '2976.137049', '2929.303282', 'color', '3748.934494', 'india', '480.2069446', '1126.945129', '469.2131942', '8391.668592', '2007', '2669.946123', '2003', '448.0969889', '2008', '2005', 'year', '2651.442018', '1027.906574', '1998', '450.4151061', '3609.875507', '1993', '3413.259971', 'orange', 'blue', '459.5766355', '558.4416044', '406.8857207', '5793.400957', '8615.658757', '8628.952841', 'china', '2069.343631', '2526.596184', '5337.065324', 'country', '1731.125235', '1135.44795', '2748.917437', 'teal', '1999', '351.8848828', '1992', '2812.334223', '2100.743786', '820.2983339', '9146.41636', '703.1207994', '1055.136489', '4980.980645', '362.808414', '1338.986444', '820.8630768', '5109.348611', '373.8000229', '1994', '2791.968684', '774.467161', '1844.485782', '1490.380056', '4743.264112', '2002', '322.243454', 'red', '4751.065263', '1041.637704', '4108.574488', '6946.880998', '3426.840162', '2004', '5220.856542', '2651.260121', '949.1780621', '11700.22112', 'russia', '420.9653204', '1775.141291', '422.9243667', '731.7417369', '380.0984013', '2663.456988', '2001', 'brazil', '1996', '604.2280606', '2000', '2009', '306.1686498', '3095.08716', '1997', '3413.588661', '3129.755456', '1273.640743', '3696.146772', '2006', '642.556503', 'gdp', '1995', '864.7303144', '2375.162934'}
# input type: [dtype('int64'), dtype('O'), dtype('float64'), dtype('O')]
# input is:
    year country          GDP   color
0   1992  Brazil  2526.596184    blue
1   1993  Brazil  2791.968684    blue
2   1994  Brazil  3426.840162    blue
3   1995  Brazil  4751.065263    blue
4   1996  Brazil  5109.348611    blue
..   ...     ...          ...     ...
67  2005   China  1731.125235  orange
68  2006   China  2069.343631  orange
69  2007   China  2651.260121  orange
70  2008   China  3413.588661  orange
71  2009   China  3748.934494  orange

[72 rows x 4 columns]
# query is: Which countries have GPD per capita higher than 8000 in the year 2009?
# expected output type:[dtype('O')]
# expected output is:
   ANSWER
0  Brazil
1  Russia
# inferred DSL terminals:
  # ConstVal: ['2009@Int', 'country@Str', 'year@Str', '<NULL>']
     # cmap: [(2009, 2009), ('countries', 'country'), ('year', 'year')]
  # AggrFunc: ['<NULL>']
     # amap: []
  # NumFunc: ['-', '<NULL>']
     # nmap: [('higher', '-')]
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# ====> fallback strategy (comparison) is triggered
  # [debug] high_values: [(7488.7136279999995, 4), (7264.723463, 4), (6606.658756999999, 4), (6606.658756999999, 4), (6606.658756999999, 4), (6382.668592, 4), (6382.668592, 4), (6382.668592, 4), (4866.724262999999, 4), (4642.734098, 4)]
  # [debug] high_values (no dup.): [(10573.275991, 2), (9691.22112, 2), (9691.22112, 2), (9691.22112, 2), (9691.22112, 2), (8309.4901072, 2), (8293.415303, 2), (8263.7738742, 2), (8252.850343, 2), (8241.858734099998, 2)]
  # [debug] fallback (comparison) answers are added
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 'Brazil'}]
  # found 0 program(s)
# (t=5.35) i=1, candidate=[{'ANSWER': 'Brazil'}, {'ANSWER': 'Russia'}]
  # found 0 program(s)
# (t=5.82) i=2, candidate=[{'ANSWER': 'Russia'}]
  # found 0 program(s)
# (t=11.24) i=3, candidate=[{'ANSWER': 7488.7136279999995}]
  # found 0 program(s)
# (t=16.27) i=4, candidate=[{'ANSWER': 7264.723463}]
  # found 0 program(s)
# (t=21.31) i=5, candidate=[{'ANSWER': 6606.658756999999}]
  # found 0 program(s)
# (t=26.60) i=6, candidate=[{'ANSWER': 6606.658756999999}]
  # found 0 program(s)
# (t=31.68) i=7, candidate=[{'ANSWER': 6606.658756999999}]
  # found 0 program(s)
# (t=36.75) i=8, candidate=[{'ANSWER': 6382.668592}]
  # found 0 program(s)
# (t=41.89) i=9, candidate=[{'ANSWER': 6382.668592}]
  # found 0 program(s)
# (t=47.06) i=10, candidate=[{'ANSWER': 6382.668592}]
  # found 0 program(s)
# (t=52.23) i=11, candidate=[{'ANSWER': 4866.724262999999}]
  # found 0 program(s)
# (t=57.44) i=12, candidate=[{'ANSWER': 4642.734098}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: [1027.906574, 1041.637704, 1055.136489, 1126.945129, 1135.44795, 11700.22112, 1273.640743, 1338.986444, 1490.380056, 1731.125235, 1775.141291, 1844.485782, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2069.343631, 2100.743786, 2375.162934, 2526.596184, 2651.260121, 2651.442018, 2663.456988, 2669.946123, 2748.917437, 2791.968684, 2812.334223, 2929.303282, 2976.137049, 3041.677796, 306.1686498, 3095.08716, 3129.755456, 322.243454, 3413.259971, 3413.588661, 3426.840162, 351.8848828, 3609.875507, 362.808414, 3696.146772, 373.8000229, 3748.934494, 380.0984013, 406.8857207, 4108.574488, 420.9653204, 422.9243667, 448.0969889, 450.4151061, 459.5766355, 469.2131942, 4743.264112, 4751.065263, 480.2069446, 4980.980645, 5109.348611, 5220.856542, 5337.065324, 558.4416044, 5793.400957, 604.2280606, 642.556503, 6946.880998, 703.1207994, 7197.031306, 731.7417369, 774.467161, 820.2983339, 820.8630768, 8391.668592, 8615.658757, 8628.952841, 864.7303144, 9146.41636, 949.1780621, 'Brazil', 'China', 'GDP', 'India', 'Russia', 'blue', 'color', 'country', 'orange', 'red', 'teal', 'year']
# (t=62.70) fallback i=0, candidate=[{'ANSWER': 1027.906574}]
  # found 0 program(s)
# (t=68.40) fallback i=1, candidate=[{'ANSWER': 1041.637704}]
  # found 0 program(s)
# (t=74.02) fallback i=2, candidate=[{'ANSWER': 1055.136489}]
  # found 0 program(s)
# (t=79.63) fallback i=3, candidate=[{'ANSWER': 1126.945129}]
  # found 0 program(s)
# (t=85.31) fallback i=4, candidate=[{'ANSWER': 1135.44795}]
  # found 0 program(s)
# (t=90.98) fallback i=5, candidate=[{'ANSWER': 11700.22112}]
  # found 0 program(s)
# (t=96.57) fallback i=6, candidate=[{'ANSWER': 1273.640743}]
  # found 0 program(s)
# (t=102.20) fallback i=7, candidate=[{'ANSWER': 1338.986444}]
  # found 0 program(s)
# (t=107.98) fallback i=8, candidate=[{'ANSWER': 1490.380056}]
  # found 0 program(s)
# (t=113.59) fallback i=9, candidate=[{'ANSWER': 1731.125235}]
  # found 0 program(s)
# (t=119.21) fallback i=10, candidate=[{'ANSWER': 1775.141291}]
  # found 0 program(s)
# (t=124.77) fallback i=11, candidate=[{'ANSWER': 1844.485782}]
  # found 0 program(s)
# (t=130.29) fallback i=12, candidate=[{'ANSWER': 1992}]
  # found 0 program(s)
# (t=135.78) fallback i=13, candidate=[{'ANSWER': 1993}]
  # found 0 program(s)
# (t=141.27) fallback i=14, candidate=[{'ANSWER': 1994}]
  # found 0 program(s)
# (t=146.78) fallback i=15, candidate=[{'ANSWER': 1995}]
  # found 0 program(s)
# (t=152.32) fallback i=16, candidate=[{'ANSWER': 1996}]
  # found 0 program(s)
# (t=157.86) fallback i=17, candidate=[{'ANSWER': 1997}]
  # found 0 program(s)
# (t=163.41) fallback i=18, candidate=[{'ANSWER': 1998}]
  # found 0 program(s)
# (t=169.02) fallback i=19, candidate=[{'ANSWER': 1999}]
  # found 0 program(s)
# (t=174.52) fallback i=20, candidate=[{'ANSWER': 2000}]
  # found 0 program(s)
# (t=180.04) fallback i=21, candidate=[{'ANSWER': 2001}]
  # found 0 program(s)
# (t=185.60) fallback i=22, candidate=[{'ANSWER': 2002}]
  # found 0 program(s)
# (t=191.21) fallback i=23, candidate=[{'ANSWER': 2003}]
  # found 0 program(s)
# (t=196.79) fallback i=24, candidate=[{'ANSWER': 2004}]
  # found 0 program(s)
# (t=202.37) fallback i=25, candidate=[{'ANSWER': 2005}]
  # found 0 program(s)
# (t=207.98) fallback i=26, candidate=[{'ANSWER': 2006}]
  # found 0 program(s)
# (t=213.58) fallback i=27, candidate=[{'ANSWER': 2007}]
  # found 0 program(s)
# (t=219.14) fallback i=28, candidate=[{'ANSWER': 2008}]
  # found 0 program(s)
# (t=224.65) fallback i=29, candidate=[{'ANSWER': 2009}]
  # found 0 program(s)
# (t=230.20) fallback i=30, candidate=[{'ANSWER': 2069.343631}]
  # found 0 program(s)
# (t=235.78) fallback i=31, candidate=[{'ANSWER': 2100.743786}]
  # found 0 program(s)
# (t=241.38) fallback i=32, candidate=[{'ANSWER': 2375.162934}]
  # found 0 program(s)
# (t=246.99) fallback i=33, candidate=[{'ANSWER': 2526.596184}]
  # found 0 program(s)
# (t=252.58) fallback i=34, candidate=[{'ANSWER': 2651.260121}]
  # found 0 program(s)
# (t=258.22) fallback i=35, candidate=[{'ANSWER': 2651.442018}]
  # found 0 program(s)
# (t=263.83) fallback i=36, candidate=[{'ANSWER': 2663.456988}]
  # found 0 program(s)
# (t=269.37) fallback i=37, candidate=[{'ANSWER': 2669.946123}]
  # found 0 program(s)
# (t=275.07) fallback i=38, candidate=[{'ANSWER': 2748.917437}]
  # found 0 program(s)
# (t=280.53) fallback i=39, candidate=[{'ANSWER': 2791.968684}]
  # found 0 program(s)
# (t=286.01) fallback i=40, candidate=[{'ANSWER': 2812.334223}]
  # found 0 program(s)
# (t=291.47) fallback i=41, candidate=[{'ANSWER': 2929.303282}]
  # found 0 program(s)
# (t=297.01) fallback i=42, candidate=[{'ANSWER': 2976.137049}]
---------- timeout ----------
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: ['Brazil', 'Russia']

# ========== review report ========== #
