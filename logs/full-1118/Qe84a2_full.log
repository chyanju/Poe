# parsed arguments: Namespace(benchmark='Qe84a2', dsl='meta_visqa', skeletons='visqa_normal', strategy='TaPas_C', fallback='auto', timeout=300, mode='full', expected_only=False)
# loading benchmark...
# table keywords: {'jill', 'margot', 'dobson', 'oliver', '152', '14857', 'fraser', 'majority', 'adrian', 'james', '2798', '4787', 'george', '6482', 'votes', '10070', 'blue', 'rainbow', 'color', 'candidate', 'weiss', 'frank'}
# input type: [dtype('O'), dtype('int64'), dtype('O')]
# input is:
              Candidate  Votes color
0          Frank Dobson  14857  blue
1           Jill Fraser  10070  blue
2          Margot James   6482  blue
3         Adrian Oliver   2798  blue
4  Rainbow George Weiss    152  blue
5              Majority   4787  blue
# query is: Who has roughly 5 votes?
# expected output type:[dtype('O')]
# expected output is:
                 ANSWER
0  Rainbow George Weiss
# inferred DSL terminals:
  # ConstVal: ['Votes@Str', '<NULL>']
     # cmap: [('votes', 'Votes')]
  # AggrFunc: ['<NULL>']
     # amap: []
  # NumFunc: ['<NULL>']
     # nmap: []
  # BoolFunc: ['==', '<NULL>']
     # bmap: [(None, '==')]
  # IndFunc: ['<NULL>']
     # imap: []
# loading skeleton list...

# ========== candidate program report ========== #
# (t=0.00) i=0, candidate=[{'ANSWER': 'Frank Dobson'}]
  # found 0 program(s)
# (t=0.21) i=1, candidate=[{'ANSWER': 'Adrian Oliver'}]
  # found 0 program(s)
# (t=0.42) i=2, candidate=[{'ANSWER': 'Jill Fraser'}]
  # found 0 program(s)
# (t=0.63) i=3, candidate=[{'ANSWER': 'Rainbow George Weiss'}]
  # found 0 program(s)
# (t=0.83) i=4, candidate=[{'ANSWER': 'Margot James'}]
  # found 0 program(s)
# ====> fallback strategy (retrieval) is triggered because no explanation is found so far
# ====> retrieval_values: [10070, 14857, 152, 2798, 4787, 6482, 'Adrian Oliver', 'Candidate', 'Frank Dobson', 'Jill Fraser', 'Majority', 'Margot James', 'Rainbow George Weiss', 'Votes', 'blue', 'color']
# (t=1.04) fallback i=0, candidate=[{'ANSWER': 10070}]
  # found 0 program(s)
# (t=1.25) fallback i=1, candidate=[{'ANSWER': 14857}]
  # found 0 program(s)
# (t=1.45) fallback i=2, candidate=[{'ANSWER': 152}]
  # found 0 program(s)
# (t=1.67) fallback i=3, candidate=[{'ANSWER': 2798}]
  # found 0 program(s)
# (t=1.87) fallback i=4, candidate=[{'ANSWER': 4787}]
  # found 0 program(s)
# (t=2.08) fallback i=5, candidate=[{'ANSWER': 6482}]
  # found 0 program(s)
# (t=2.28) fallback i=6, candidate=[{'ANSWER': 'Adrian Oliver'}]
  # found 0 program(s)
# (t=2.49) fallback i=7, candidate=[{'ANSWER': 'Candidate'}]
  # found 0 program(s)
# (t=2.63) fallback i=8, candidate=[{'ANSWER': 'Frank Dobson'}]
  # found 0 program(s)
# (t=2.84) fallback i=9, candidate=[{'ANSWER': 'Jill Fraser'}]
  # found 0 program(s)
# (t=3.04) fallback i=10, candidate=[{'ANSWER': 'Majority'}]
  # found 0 program(s)
# (t=3.24) fallback i=11, candidate=[{'ANSWER': 'Margot James'}]
  # found 0 program(s)
# (t=3.45) fallback i=12, candidate=[{'ANSWER': 'Rainbow George Weiss'}]
  # found 0 program(s)
# (t=3.65) fallback i=13, candidate=[{'ANSWER': 'Votes'}]
  # found 0 program(s)
# (t=3.79) fallback i=14, candidate=[{'ANSWER': 'blue'}]
  # found 0 program(s)
# (t=4.00) fallback i=15, candidate=[{'ANSWER': 'color'}]
  # found 0 program(s)
# ====> fallback strategy (original) is triggered
# ====> use the original TaPas output as answer, which is: ['Frank Dobson']

# ========== review report ========== #
